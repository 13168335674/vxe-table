module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "0065":
/***/ (function(module, exports, __webpack_require__) {

var isNumber = __webpack_require__("366b")

/* eslint-disable eqeqeq */
function isNumberNaN (obj) {
  return isNumber(obj) && isNaN(obj)
}

module.exports = isNumberNaN


/***/ }),

/***/ "00ee":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "0119":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")

var helperStringRepeat = __webpack_require__("c718")

/**
  * 将字符串重复 n 次
  *
  * @param {String} str 字符串
  * @param {Number} count 次数
  * @return {String}
  */
function repeat (str, count) {
  return helperStringRepeat(toValString(str), count)
}

module.exports = repeat


/***/ }),

/***/ "012c":
/***/ (function(module, exports, __webpack_require__) {

var staticStrFirst = __webpack_require__("b39a")
var staticStrLast = __webpack_require__("d0e5")

var helperGetDateFullYear = __webpack_require__("9735")
var helperGetDateTime = __webpack_require__("3ae2")
var helperGetDateMonth = __webpack_require__("674e")

var toStringDate = __webpack_require__("fedd")
var isValidDate = __webpack_require__("27ad")
var isNumber = __webpack_require__("366b")

/**
  * 返回前几月或后几月的日期
  *
  * @param {Date} date 日期或数字
  * @param {Number} month 月(默认当前月)、前几个月、后几个月
  * @param {Number/String} day 获取哪天：月初(first)、月末(last)、指定天数(数值)
  * @return {Date}
  */
function getWhatMonth (date, month, day) {
  var monthOffset = month && !isNaN(month) ? month : 0
  date = toStringDate(date)
  if (isValidDate(date)) {
    if (day === staticStrFirst) {
      return new Date(helperGetDateFullYear(date), helperGetDateMonth(date) + monthOffset, 1)
    } else if (day === staticStrLast) {
      return new Date(helperGetDateTime(getWhatMonth(date, monthOffset + 1, staticStrFirst)) - 1)
    } else if (isNumber(day)) {
      date.setDate(day)
    }
    if (monthOffset) {
      date.setMonth(helperGetDateMonth(date) + monthOffset)
    }
  }
  return date
}

module.exports = getWhatMonth


/***/ }),

/***/ "0366":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "04bb":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")

/**
  * 判断字符串是否在源字符串的尾部
  *
  * @param {String} str 字符串
  * @param {String/Number} val 值
  * @param {Number} startIndex 开始索引
  * @return {String}
  */
function endsWith (str, val, startIndex) {
  var rest = toValString(str)
  var argsLen = arguments.length
  return argsLen > 1 && (argsLen > 2 ? rest.substring(0, startIndex).indexOf(val) === startIndex - 1 : rest.indexOf(val) === rest.length - 1)
}

module.exports = endsWith


/***/ }),

/***/ "04d4":
/***/ (function(module, exports, __webpack_require__) {

var staticParseInt = __webpack_require__("cef5")

var helperGetHGSKeys = __webpack_require__("9b2c")

var hasOwnProp = __webpack_require__("9de7")

var sKeyRE = /(.+)\[(\d+)\]$/

function valSet (obj, key, isSet, value) {
  if (obj[key]) {
    if (isSet) {
      obj[key] = value
    }
  } else {
    var index
    var matchs = key ? key.match(sKeyRE) : null
    var rest = isSet ? value : {}
    if (matchs) {
      index = staticParseInt(matchs[2])
      if (obj[matchs[1]]) {
        obj[matchs[1]][index] = rest
      } else {
        obj[matchs[1]] = new Array(index + 1)
        obj[matchs[1]][index] = rest
      }
    } else {
      obj[key] = rest
    }
    return rest
  }
  return obj[key]
}

/**
 * 设置对象属性上的值。如果属性不存在则创建它
 * @param {Object/Array} obj 对象
 * @param {String/Function} property 键、路径
 * @param {Object} value 值
 */
function set (obj, property, value) {
  if (obj) {
    if (obj[property] || hasOwnProp(obj, property)) {
      obj[property] = value
    } else {
      var rest = obj
      var props = helperGetHGSKeys(property)
      var len = props.length
      for (var index = 0; index < len; index++) {
        rest = valSet(rest, props[index], index === len - 1, value)
      }
    }
  }
  return obj
}

module.exports = set


/***/ }),

/***/ "057f":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyNames = __webpack_require__("241c").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "05ea":
/***/ (function(module, exports) {

/**
  * JSON转字符串
  *
  * @param {Object} obj 对象
  * @return {String} 返回字符串
  */
function toJSONString (obj) {
  return JSON.stringify(obj) || ''
}

module.exports = toJSONString


/***/ }),

/***/ "068d":
/***/ (function(module, exports, __webpack_require__) {

var staticParseInt = __webpack_require__("cef5")

var helperCreateToNumber = __webpack_require__("180e")

/**
 * 转整数
 * @param { String/Number } str 数值
 *
 * @return {Number}
 */
var toInteger = helperCreateToNumber(staticParseInt)

module.exports = toInteger


/***/ }),

/***/ "06cf":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createPropertyDescriptor = __webpack_require__("5c6c");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var has = __webpack_require__("5135");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "086f":
/***/ (function(module, exports, __webpack_require__) {

var each = __webpack_require__("9a21")

function helperCreateGetObjects (name, getIndex) {
  var proMethod = Object[name]
  return function (obj) {
    var result = []
    if (obj) {
      if (proMethod) {
        return proMethod(obj)
      }
      each(obj, getIndex > 1 ? function (key) {
        result.push(['' + key, obj[key]])
      } : function () {
        result.push(arguments[getIndex])
      })
    }
    return result
  }
}

module.exports = helperCreateGetObjects


/***/ }),

/***/ "08a8":
/***/ (function(module, exports, __webpack_require__) {

var staticHGKeyRE = __webpack_require__("e9ea")

var helperGetHGSKeys = __webpack_require__("9b2c")

var hasOwnProp = __webpack_require__("9de7")

/**
 * 检查键、路径是否是该对象的属性
 *
 * @param {Object/Array} data 对象
 * @param {String/Function} property 键、路径
 * @return {Boolean}
 */
function has (obj, property) {
  if (obj) {
    if (hasOwnProp(obj, property)) {
      return true
    } else {
      var prop, arrIndex, objProp, matchs, rest, isHas
      var props = helperGetHGSKeys(property)
      var index = 0
      var len = props.length
      for (rest = obj; index < len; index++) {
        isHas = false
        prop = props[index]
        matchs = prop ? prop.match(staticHGKeyRE) : ''
        if (matchs) {
          arrIndex = matchs[1]
          objProp = matchs[2]
          if (arrIndex) {
            if (rest[arrIndex]) {
              if (hasOwnProp(rest[arrIndex], objProp)) {
                isHas = true
                rest = rest[arrIndex][objProp]
              }
            }
          } else {
            if (hasOwnProp(rest, objProp)) {
              isHas = true
              rest = rest[objProp]
            }
          }
        } else {
          if (hasOwnProp(rest, prop)) {
            isHas = true
            rest = rest[prop]
          }
        }
        if (isHas) {
          if (index === len - 1) {
            return true
          }
        } else {
          break
        }
      }
    }
  }
  return false
}

module.exports = has


/***/ }),

/***/ "092a":
/***/ (function(module, exports, __webpack_require__) {

var round = __webpack_require__("c9cd")
var toValString = __webpack_require__("bee9")

var helperStringRepeat = __webpack_require__("c718")
var helperNumberOffsetPoint = __webpack_require__("eae28")

/**
  * 将数值四舍五入并格式化为固定小数位的字符串
  *
 * @param {string|number} num 数值
 * @param {number} digits 小数保留位数
  * @return {String}
  */
function toFixed (num, digits) {
  digits = digits >> 0
  var str = toValString(round(num, digits))
  var nums = str.split('.')
  var intStr = nums[0]
  var floatStr = nums[1] || ''
  var digitOffsetIndex = digits - floatStr.length
  if (digits) {
    if (digitOffsetIndex > 0) {
      return intStr + '.' + floatStr + helperStringRepeat('0', digitOffsetIndex)
    }
    return intStr + helperNumberOffsetPoint(floatStr, Math.abs(digitOffsetIndex))
  }
  return intStr
}

module.exports = toFixed


/***/ }),

/***/ "0946":
/***/ (function(module, exports, __webpack_require__) {

var staticDayTime = __webpack_require__("e11b")
var staticStrFirst = __webpack_require__("b39a")

var helperGetYMDTime = __webpack_require__("6628")

var getWhatYear = __webpack_require__("62e1")
var toStringDate = __webpack_require__("fedd")

var isValidDate = __webpack_require__("27ad")

/**
  * 返回某个年份的第几天
  *
  * @param {Date} date 日期或数字
  * @return {Number}
  */
function getYearDay (date) {
  date = toStringDate(date)
  if (isValidDate(date)) {
    return Math.floor((helperGetYMDTime(date) - helperGetYMDTime(getWhatYear(date, 0, staticStrFirst))) / staticDayTime) + 1
  }
  return NaN
}

module.exports = getYearDay


/***/ }),

/***/ "0a5b":
/***/ (function(module, exports, __webpack_require__) {

var helperCreatePickOmit = __webpack_require__("38bd")

/**
 * 根据 key 过滤指定的属性值，返回一个新的对象
 *
 * @param {Object} obj 对象
 * @param {String/Array} key 键数组
 * @return {Object}
 */
var pick = helperCreatePickOmit(1, 0)

module.exports = pick


/***/ }),

/***/ "0b11":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateIndexOf = __webpack_require__("a719")

var arrayIndexOf = __webpack_require__("a16a")

/**
  * 返回对象第一个索引值
  *
  * @param {Object} obj 对象
  * @param {Object} val 值
  * @return {Number}
  */
var indexOf = helperCreateIndexOf('indexOf', arrayIndexOf)

module.exports = indexOf


/***/ }),

/***/ "0b17":
/***/ (function(module, exports, __webpack_require__) {

var hasOwnProp = __webpack_require__("9de7")

function objectEach (obj, iterate, context) {
  if (obj) {
    for (var key in obj) {
      if (hasOwnProp(obj, key)) {
        iterate.call(context, obj[key], key, obj)
      }
    }
  }
}

module.exports = objectEach


/***/ }),

/***/ "0b43":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var isInteger = __webpack_require__("4396")
var isNull = __webpack_require__("f108")

/**
  * 判断是否小数
  *
  * @param {Number} obj 数值
  * @return {Boolean}
  */
function isFloat (obj) {
  return !isNull(obj) && !isNaN(obj) && !isArray(obj) && !isInteger(obj)
}

module.exports = isFloat


/***/ }),

/***/ "0ba0":
/***/ (function(module, exports, __webpack_require__) {

var staticLocation = __webpack_require__("dce7")

var helperGetLocatOrigin = __webpack_require__("35c4")

var lastIndexOf = __webpack_require__("aeb9")

function getBaseURL () {
  if (staticLocation) {
    var pathname = staticLocation.pathname
    var lastIndex = lastIndexOf(pathname, '/') + 1
    return helperGetLocatOrigin() + (lastIndex === pathname.length ? pathname : pathname.substring(0, lastIndex))
  }
  return ''
}

module.exports = getBaseURL


/***/ }),

/***/ "0c07":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateiterateIndexOf = __webpack_require__("3d9d")

/**
  * 返回对象第一个索引值
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
var findIndexOf = helperCreateiterateIndexOf(function (obj, iterate, context) {
  for (var index = 0, len = obj.length; index < len; index++) {
    if (iterate.call(context, obj[index], index, obj)) {
      return index
    }
  }
  return -1
})

module.exports = findIndexOf


/***/ }),

/***/ "0ccb":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__("50c4");
var repeat = __webpack_require__("1148");
var requireObjectCoercible = __webpack_require__("1d80");

var ceil = Math.ceil;

// `String.prototype.{ padStart, padEnd }` methods implementation
var createMethod = function (IS_END) {
  return function ($this, maxLength, fillString) {
    var S = String(requireObjectCoercible($this));
    var stringLength = S.length;
    var fillStr = fillString === undefined ? ' ' : String(fillString);
    var intMaxLength = toLength(maxLength);
    var fillLen, stringFiller;
    if (intMaxLength <= stringLength || fillStr == '') return S;
    fillLen = intMaxLength - stringLength;
    stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
    return IS_END ? S + stringFiller : stringFiller + S;
  };
};

module.exports = {
  // `String.prototype.padStart` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.padstart
  start: createMethod(false),
  // `String.prototype.padEnd` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.padend
  end: createMethod(true)
};


/***/ }),

/***/ "0cfb":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var createElement = __webpack_require__("cc12");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "0d1b":
/***/ (function(module, exports) {

var objectToString = Object.prototype.toString

module.exports = objectToString


/***/ }),

/***/ "0d3b":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = !fails(function () {
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return (IS_PURE && !url.toJSON)
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?a=1&c=3'
    || searchParams.get('c') !== '3'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://тест').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#б').hash !== '#%D0%B1'
    // fails in Chrome 66-
    || result !== 'a1c3'
    // throws in Safari
    || new URL('http://x', undefined).host !== 'x';
});


/***/ }),

/***/ "0e1c":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var keys = __webpack_require__("9de7")

/**
  * 已废弃
  * @deprecated
  */
function lastForOf (obj, iterate, context) {
  if (obj) {
    var len, list
    if (isArray(obj)) {
      for (len = obj.length - 1; len >= 0; len--) {
        if (iterate.call(context, obj[len], len, obj) === false) {
          break
        }
      }
    } else {
      list = keys(obj)
      for (len = list.length - 1; len >= 0; len--) {
        if (iterate.call(context, obj[list[len]], list[len], obj) === false) {
          break
        }
      }
    }
  }
}

module.exports = lastForOf


/***/ }),

/***/ "1108":
/***/ (function(module, exports, __webpack_require__) {

var each = __webpack_require__("9a21")
var isFunction = __webpack_require__("b484")
var property = __webpack_require__("f42e")

/**
  * 指定方法后的返回值组成的新对象
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
function objectMap (obj, iterate, context) {
  var result = {}
  if (obj) {
    if (iterate) {
      if (!isFunction(iterate)) {
        iterate = property(iterate)
      }
      each(obj, function (val, index) {
        result[index] = iterate.call(context, val, index, obj)
      })
    } else {
      return obj
    }
  }
  return result
}

module.exports = objectMap


/***/ }),

/***/ "1124":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateMinMax = __webpack_require__("2eeb")

/**
  * 获取最大值
  *
  * @param {Array} arr 数组
  * @param {Function} iterate(item, index, obj) 回调
  * @return {Number}
  */
var max = helperCreateMinMax(function (rest, itemVal) {
  return rest < itemVal
})

module.exports = max


/***/ }),

/***/ "1148":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.repeat` method implementation
// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
module.exports = ''.repeat || function repeat(count) {
  var str = String(requireObjectCoercible(this));
  var result = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};


/***/ }),

/***/ "1276":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var isRegExp = __webpack_require__("44e7");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var speciesConstructor = __webpack_require__("4840");
var advanceStringIndex = __webpack_require__("8aa5");
var toLength = __webpack_require__("50c4");
var callRegExpExec = __webpack_require__("14c3");
var regexpExec = __webpack_require__("9263");
var fails = __webpack_require__("d039");

var arrayPush = [].push;
var min = Math.min;
var MAX_UINT32 = 0xFFFFFFFF;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });

// @@split logic
fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] == 'c' ||
    'test'.split(/(?:)/, -1).length != 4 ||
    'ab'.split(/(?:ab)*/).length != 2 ||
    '.'.split(/(.?)(.?)/).length != 4 ||
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return nativeSplit.call(string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output.length > lim ? output.slice(0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
}, !SUPPORTS_Y);


/***/ }),

/***/ "13d5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $reduce = __webpack_require__("d58f").left;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");
var CHROME_VERSION = __webpack_require__("2d00");
var IS_NODE = __webpack_require__("605d");

var STRICT_METHOD = arrayMethodIsStrict('reduce');
var USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });
// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH || CHROME_BUG }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "13da":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")

/**
  * 将一个数组分割成大小的组。如果数组不能被平均分配，那么最后一块将是剩下的元素
  *
  * @param {Array} array 数组
  * @param {Number} size 每组大小
  * @return {Array}
  */
function chunk (array, size) {
  var index
  var result = []
  var arrLen = size >> 0 || 1
  if (isArray(array)) {
    if (arrLen >= 0 && array.length > arrLen) {
      index = 0
      while (index < array.length) {
        result.push(array.slice(index, index + arrLen))
        index += arrLen
      }
    } else {
      result = array.length ? [array] : array
    }
  }
  return result
}

module.exports = chunk


/***/ }),

/***/ "13ea":
/***/ (function(module, exports, __webpack_require__) {

var staticDayTime = __webpack_require__("e11b")
var staticStrFirst = __webpack_require__("b39a")
var staticStrLast = __webpack_require__("d0e5")

var helperGetDateTime = __webpack_require__("3ae2")

var getWhatMonth = __webpack_require__("012c")
var toStringDate = __webpack_require__("fedd")

var isValidDate = __webpack_require__("27ad")

/**
  * 返回某个月份的天数
  *
  * @param {Date} date 日期或数字
  * @param {Number} offset 月(默认当月)、前几个月、后几个月
  * @return {Number}
  */
function getDayOfMonth (date, month) {
  date = toStringDate(date)
  if (isValidDate(date)) {
    return Math.floor((helperGetDateTime(getWhatMonth(date, month, staticStrLast)) - helperGetDateTime(getWhatMonth(date, month, staticStrFirst))) / staticDayTime) + 1
  }
  return NaN
}

module.exports = getDayOfMonth


/***/ }),

/***/ "1458":
/***/ (function(module, exports, __webpack_require__) {

var each = __webpack_require__("9a21")
var includes = __webpack_require__("20b3")

/**
  * 数组去重
  *
  * @param {Array} array 数组
  * @return {Array}
  */
function uniq (array) {
  var result = []
  each(array, function (value) {
    if (!includes(result, value)) {
      result.push(value)
    }
  })
  return result
}

module.exports = uniq


/***/ }),

/***/ "14c3":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var regexpExec = __webpack_require__("9263");

// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "1553":
/***/ (function(module, exports, __webpack_require__) {

var setupDefaults = __webpack_require__("27e0")

var each = __webpack_require__("9a21")

var assign = __webpack_require__("294d")

function unTreeList (result, array, opts) {
  var optChildren = opts.children
  var optData = opts.data
  var optClear = opts.clear
  each(array, function (item) {
    var children = item[optChildren]
    if (optData) {
      item = item[optData]
    }
    result.push(item)
    if (children && children.length) {
      unTreeList(result, children, opts)
    }
    if (optClear) {
      delete item[optChildren]
    }
  })
  return result
}

/**
  * 将一个树结构转成数组列表
  *
  * @param {Array} array 数组
  * @param {Object} options { children: 'children', data: 'data', clear: false }
  * @return {Array}
  */
function toTreeArray (array, options) {
  return unTreeList([], array, assign({}, setupDefaults.treeOptions, options))
}

module.exports = toTreeArray


/***/ }),

/***/ "159b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var forEach = __webpack_require__("17c2");
var createNonEnumerableProperty = __webpack_require__("9112");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "17c2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__("b727").forEach;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('forEach');
var USES_TO_LENGTH = arrayMethodUsesToLength('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "180e":
/***/ (function(module, exports) {

function helperCreateToNumber (handle) {
  return function (str) {
    if (str) {
      var num = handle(str)
      if (!isNaN(num)) {
        return num
      }
    }
    return 0
  }
}

module.exports = helperCreateToNumber


/***/ }),

/***/ "19aa":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "1a97":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "1abc":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")
var helperStringSubstring = __webpack_require__("a5ed")
var helperStringUpperCase = __webpack_require__("dffc")
var helperStringLowerCase = __webpack_require__("8eb3")

var camelCacheMaps = {}

/**
  * 将带字符串转成驼峰字符串,例如： project-name 转为 projectName
  *
  * @param {String} str 字符串
  * @return {String}
  */
function camelCase (str) {
  str = toValString(str)
  if (camelCacheMaps[str]) {
    return camelCacheMaps[str]
  }
  var strLen = str.length
  var rest = str.replace(/([-]+)/g, function (text, flag, index) {
    return index && index + flag.length < strLen ? '-' : ''
  })
  strLen = rest.length
  rest = rest.replace(/([A-Z]+)/g, function (text, upper, index) {
    var upperLen = upper.length
    upper = helperStringLowerCase(upper)
    if (index) {
      if (upperLen > 2 && index + upperLen < strLen) {
        return helperStringUpperCase(helperStringSubstring(upper, 0, 1)) + helperStringSubstring(upper, 1, upperLen - 1) + helperStringUpperCase(helperStringSubstring(upper, upperLen - 1, upperLen))
      }
      return helperStringUpperCase(helperStringSubstring(upper, 0, 1)) + helperStringSubstring(upper, 1, upperLen)
    } else {
      if (upperLen > 1 && index + upperLen < strLen) {
        return helperStringSubstring(upper, 0, upperLen - 1) + helperStringUpperCase(helperStringSubstring(upper, upperLen - 1, upperLen))
      }
    }
    return upper
  }).replace(/(-[a-zA-Z])/g, function (text, upper) {
    return helperStringUpperCase(helperStringSubstring(upper, 1, upper.length))
  })
  camelCacheMaps[str] = rest
  return rest
}

module.exports = camelCase


/***/ }),

/***/ "1b3c":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")

var isUndefined = __webpack_require__("7ab1")

var helperStringRepeat = __webpack_require__("c718")

/**
  * 用指定字符从后面开始补全字符串
  *
  * @param {String} str 字符串
  * @param {Number} targetLength 结果长度
  * @param {Number} padString 补全字符
  * @return {String}
  */
function padEnd (str, targetLength, padString) {
  var rest = toValString(str)
  targetLength = targetLength >> 0
  padString = isUndefined(padString) ? ' ' : '' + padString
  if (rest.padEnd) {
    return rest.padEnd(targetLength, padString)
  }
  if (targetLength > rest.length) {
    targetLength -= rest.length
    if (targetLength > padString.length) {
      padString += helperStringRepeat(padString, targetLength / padString.length)
    }
    return rest + padString.slice(0, targetLength)
  }
  return rest
}

module.exports = padEnd


/***/ }),

/***/ "1be4":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1c0b":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "1c7e":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "1d46":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberDivide = __webpack_require__("7d58")

var getSize = __webpack_require__("35e1")

var sum = __webpack_require__("bfcd")

/**
  * 求平均值函数
  *
  * @param {Array} array 数组
  * @param {Function/String} iterate 方法或属性
  * @param {Object} context 上下文
  * @return {Number}
  */
function mean (array, iterate, context) {
  return helperNumberDivide(sum(array, iterate, context), getSize(array))
}

module.exports = mean


/***/ }),

/***/ "1d80":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "1dd9":
/***/ (function(module, exports, __webpack_require__) {

var staticDayTime = __webpack_require__("e11b")
var staticWeekTime = __webpack_require__("fd89")
var staticParseInt = __webpack_require__("cef5")

var helperGetDateTime = __webpack_require__("3ae2")

var toStringDate = __webpack_require__("fedd")

var isValidDate = __webpack_require__("27ad")

/**
  * 返回前几周或后几周的星期几
  *
  * @param {Date} date 日期
  * @param {Number} week 周(默认当前周)、前几周、后几周
  * @param {Number} day 星期天(默认0)、星期一(1)、星期二(2)、星期三(3)、星期四(4)、星期五(5)、星期六(6)
  * @return {Date}
  */
function getWhatWeek (date, week, day) {
  var time, whatDayTime, currentDay, customDay
  date = toStringDate(date)
  if (isValidDate(date)) {
    customDay = staticParseInt(/^[0-7]$/.test(day) ? day : date.getDay())
    currentDay = date.getDay()
    time = helperGetDateTime(date)
    whatDayTime = time + ((customDay === 0 ? 7 : customDay) - (currentDay === 0 ? 7 : currentDay)) * staticDayTime
    if (week && !isNaN(week)) {
      whatDayTime += week * staticWeekTime
    }
    return new Date(whatDayTime)
  }
  return date
}

module.exports = getWhatWeek


/***/ }),

/***/ "1dde":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "20b3":
/***/ (function(module, exports, __webpack_require__) {

var indexOf = __webpack_require__("0b11")

/**
  * 判断对象是否包含该值,成功返回true否则false
  *
  * @param {Object} obj 对象
  * @param {Object} val 值
  * @return {Boolean}
  */
function includes (obj, val) {
  return indexOf(obj, val) !== -1
}

module.exports = includes


/***/ }),

/***/ "2242":
/***/ (function(module, exports, __webpack_require__) {

var slice = __webpack_require__("3703")

/**
  * 创建一个函数, 调用次数超过 count 次之后执行回调并将所有结果记住后返回
  *
  * @param {Number} count 调用次数
  * @param {Function} callback 完成回调
  * @return {Object}
  */
function after (count, callback, context) {
  var runCount = 0
  var rests = []
  return function () {
    var args = arguments
    runCount++
    if (runCount <= count) {
      rests.push(args[0])
    }
    if (runCount >= count) {
      callback.apply(context, [rests].concat(slice(args)))
    }
  }
}

module.exports = after


/***/ }),

/***/ "2266":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var bind = __webpack_require__("0366");
var getIteratorMethod = __webpack_require__("35a1");
var iteratorClose = __webpack_require__("2a62");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator);
      throw error;
    }
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};


/***/ }),

/***/ "23cb":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "23e7":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var setGlobal = __webpack_require__("ce4e");
var copyConstructorProperties = __webpack_require__("e893");
var isForced = __webpack_require__("94ca");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "241c":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "24a5":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")

/**
  * 浅复制数组的一部分到同一数组中的另一个位置,数组大小不变
  *
  * @param {Array} array 数组
  * @param {Number} target 从该位置开始替换数据
  * @param {Number} start 从该位置开始读取数据，默认为 0 。如果为负值，表示倒数
  * @param {Number} end 到该位置前停止读取数据，默认等于数组长度。如果为负值，表示倒数
  * @return {Array}
  */
function copyWithin (array, target, start, end) {
  if (isArray(array) && array.copyWithin) {
    return array.copyWithin(target, start, end)
  }
  var replaceIndex, replaceArray
  var targetIndex = target >> 0
  var startIndex = start >> 0
  var len = array.length
  var endIndex = arguments.length > 3 ? end >> 0 : len
  if (targetIndex < len) {
    targetIndex = targetIndex >= 0 ? targetIndex : len + targetIndex
    if (targetIndex >= 0) {
      startIndex = startIndex >= 0 ? startIndex : len + startIndex
      endIndex = endIndex >= 0 ? endIndex : len + endIndex
      if (startIndex < endIndex) {
        for (replaceIndex = 0, replaceArray = array.slice(startIndex, endIndex); targetIndex < len; targetIndex++) {
          if (replaceArray.length <= replaceIndex) {
            break
          }
          array[targetIndex] = replaceArray[replaceIndex++]
        }
      }
    }
  }
  return array
}

module.exports = copyWithin


/***/ }),

/***/ "24ac":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")

/**
  * 判断字符串是否在源字符串的头部
  *
  * @param {String} str 字符串
  * @param {String/Number} val 值
  * @param {Number} startIndex 开始索引
  * @return {String}
  */
function startsWith (str, val, startIndex) {
  var rest = toValString(str)
  return (arguments.length === 1 ? rest : rest.substring(startIndex)).indexOf(val) === 0
}

module.exports = startsWith


/***/ }),

/***/ "2532":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var notARegExp = __webpack_require__("5a34");
var requireObjectCoercible = __webpack_require__("1d80");
var correctIsRegExpLogic = __webpack_require__("ab13");

// `String.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~String(requireObjectCoercible(this))
      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "258e":
/***/ (function(module, exports, __webpack_require__) {

var slice = __webpack_require__("3703")

/**
  * 创建一个函数, 调用次数不超过 count 次之前执行回调并将所有结果记住后返回
  *
  * @param {Number} count 调用次数
  * @param {Function} callback 完成回调
  * @return {Object}
  */
function before (count, callback, context) {
  var runCount = 0
  var rests = []
  context = context || this
  return function () {
    var args = arguments
    runCount++
    if (runCount < count) {
      rests.push(args[0])
      callback.apply(context, [rests].concat(slice(args)))
    }
  }
}

module.exports = before


/***/ }),

/***/ "25b3":
/***/ (function(module, exports) {

function arrayEach (list, iterate, context) {
  if (list) {
    if (list.forEach) {
      list.forEach(iterate, context)
    } else {
      for (var index = 0, len = list.length; index < len; index++) {
        iterate.call(context, list[index], index, list)
      }
    }
  }
}

module.exports = arrayEach


/***/ }),

/***/ "25f0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefine = __webpack_require__("6eeb");
var anObject = __webpack_require__("825a");
var fails = __webpack_require__("d039");
var flags = __webpack_require__("ad6d");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = String(R.source);
    var rf = R.flags;
    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "2626":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__("d066");
var definePropertyModule = __webpack_require__("9bf2");
var wellKnownSymbol = __webpack_require__("b622");
var DESCRIPTORS = __webpack_require__("83ab");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "2742":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var lastArrayEach = __webpack_require__("7b36")
var lastObjectEach = __webpack_require__("5b18")

/**
  * 迭代器,从最后开始迭代
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
function lastEach (obj, iterate, context) {
  if (obj) {
    return (isArray(obj) ? lastArrayEach : lastObjectEach)(obj, iterate, context)
  }
  return obj
}

module.exports = lastEach


/***/ }),

/***/ "27ad":
/***/ (function(module, exports, __webpack_require__) {

var isDate = __webpack_require__("6deb")
var helperGetDateTime = __webpack_require__("3ae2")

/**
  * 判断是否有效的Date对象
  *
  * @param {any} val 对象
  * @return {boolean}
  */
function isValidDate (val) {
  return isDate(val) && !isNaN(helperGetDateTime(val))
}

module.exports = isValidDate


/***/ }),

/***/ "27e0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var formatString = 'yyyy-MM-dd HH:mm:ss'
var setupDefaults = {
  treeOptions: {
    parentKey: 'parentId',
    key: 'id',
    children: 'children'
  },
  formatDate: formatString + '.SSSZ',
  formatString: formatString,
  dateDiffRules: [
    ['yyyy', 31536000000],
    ['MM', 2592000000],
    ['dd', 86400000],
    ['HH', 3600000],
    ['mm', 60000],
    ['ss', 1000],
    ['S', 0]
  ]
}

module.exports = setupDefaults


/***/ }),

/***/ "294d":
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__("25b3")
var keys = __webpack_require__("6815")
var isArray = __webpack_require__("a44c")
var clone = __webpack_require__("e643")

var objectAssignFns = Object.assign

function handleAssign (destination, args, isClone) {
  var len = args.length
  for (var source, index = 1; index < len; index++) {
    source = args[index]
    arrayEach(keys(args[index]), isClone ? function (key) {
      destination[key] = clone(source[key], isClone)
    } : function (key) {
      destination[key] = source[key]
    })
  }
  return destination
}

/**
  * 将一个或多个源对象复制到目标对象中
  *
  * @param {Object} target 目标对象
  * @param {...Object}
  * @return {Boolean}
  */
var assign = function (target) {
  if (target) {
    var args = arguments
    if (target === true) {
      if (args.length > 1) {
        target = isArray(target[1]) ? [] : {}
        return handleAssign(target, args, true)
      }
    } else {
      return objectAssignFns ? objectAssignFns.apply(Object, args) : handleAssign(target, args)
    }
  }
  return target
}

module.exports = assign


/***/ }),

/***/ "29b2":
/***/ (function(module, exports, __webpack_require__) {

var each = __webpack_require__("9a21")

/**
  * 根据回调过滤数据
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
function filter (obj, iterate, context) {
  var result = []
  if (obj && iterate) {
    if (obj.filter) {
      return obj.filter(iterate, context)
    }
    each(obj, function (val, key) {
      if (iterate.call(context, val, key, obj)) {
        result.push(val)
      }
    })
  }
  return result
}

module.exports = filter


/***/ }),

/***/ "2a62":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");

module.exports = function (iterator) {
  var returnMethod = iterator['return'];
  if (returnMethod !== undefined) {
    return anObject(returnMethod.call(iterator)).value;
  }
};


/***/ }),

/***/ "2ae6":
/***/ (function(module, exports, __webpack_require__) {

var getWhatYear = __webpack_require__("62e1")
var toStringDate = __webpack_require__("fedd")

var isValidDate = __webpack_require__("27ad")
var isLeapYear = __webpack_require__("b267")

/**
  * 返回某个年份的天数
  *
  * @param {Date} date 日期或数字
  * @param {Number} offset 年(默认当年)、前几个年、后几个年
  * @return {Number}
  */
function getDayOfYear (date, year) {
  date = toStringDate(date)
  if (isValidDate(date)) {
    return isLeapYear(getWhatYear(date, year)) ? 366 : 365
  }
  return NaN
}

module.exports = getDayOfYear


/***/ }),

/***/ "2b3d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__("3ca3");
var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var USE_NATIVE_URL = __webpack_require__("0d3b");
var global = __webpack_require__("da84");
var defineProperties = __webpack_require__("37e8");
var redefine = __webpack_require__("6eeb");
var anInstance = __webpack_require__("19aa");
var has = __webpack_require__("5135");
var assign = __webpack_require__("60da");
var arrayFrom = __webpack_require__("4df4");
var codeAt = __webpack_require__("6547").codeAt;
var toASCII = __webpack_require__("5fb2");
var setToStringTag = __webpack_require__("d44e");
var URLSearchParamsModule = __webpack_require__("9861");
var InternalStateModule = __webpack_require__("69f3");

var NativeURL = global.URL;
var URLSearchParams = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;
var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var floor = Math.floor;
var pow = Math.pow;

var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';

var ALPHA = /[A-Za-z]/;
var ALPHANUMERIC = /[\d+-.A-Za-z]/;
var DIGIT = /\d/;
var HEX_START = /^(0x|0X)/;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\dA-Fa-f]+$/;
// eslint-disable-next-line no-control-regex
var FORBIDDEN_HOST_CODE_POINT = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/;
// eslint-disable-next-line no-control-regex
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/;
// eslint-disable-next-line no-control-regex
var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g;
// eslint-disable-next-line no-control-regex
var TAB_AND_NEW_LINE = /[\u0009\u000A\u000D]/g;
var EOF;

var parseHost = function (url, input) {
  var result, codePoints, index;
  if (input.charAt(0) == '[') {
    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;
    result = parseIPv6(input.slice(1, -1));
    if (!result) return INVALID_HOST;
    url.host = result;
  // opaque host
  } else if (!isSpecial(url)) {
    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;
    result = '';
    codePoints = arrayFrom(input);
    for (index = 0; index < codePoints.length; index++) {
      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
    }
    url.host = result;
  } else {
    input = toASCII(input);
    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;
    result = parseIPv4(input);
    if (result === null) return INVALID_HOST;
    url.host = result;
  }
};

var parseIPv4 = function (input) {
  var parts = input.split('.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] == '') {
    parts.pop();
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;
    if (part.length > 1 && part.charAt(0) == '0') {
      radix = HEX_START.test(part) ? 16 : 8;
      part = part.slice(radix == 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;
      number = parseInt(part, radix);
    }
    numbers.push(number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = numbers.pop();
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// eslint-disable-next-line max-statements
var parseIPv6 = function (input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var char = function () {
    return input.charAt(pointer);
  };

  if (char() == ':') {
    if (input.charAt(1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (char()) {
    if (pieceIndex == 8) return;
    if (char() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && HEX.test(char())) {
      value = value * 16 + parseInt(char(), 16);
      pointer++;
      length++;
    }
    if (char() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (char()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (char() == '.' && numbersSeen < 4) pointer++;
          else return;
        }
        if (!DIGIT.test(char())) return;
        while (DIGIT.test(char())) {
          number = parseInt(char(), 10);
          if (ipv4Piece === null) ipv4Piece = number;
          else if (ipv4Piece == 0) return;
          else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }
      if (numbersSeen != 4) return;
      break;
    } else if (char() == ':') {
      pointer++;
      if (!char()) return;
    } else if (char()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;
  return address;
};

var findLongestZeroSequence = function (ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

var serializeHost = function (host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      result.unshift(host % 256);
      host = floor(host / 256);
    } return result.join('.');
  // ipv6
  } else if (typeof host == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += host[index].toString(16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  } return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
  ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
});
var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
  '#': 1, '?': 1, '{': 1, '}': 1
});
var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
});

var percentEncode = function (char, set) {
  var code = codeAt(char, 0);
  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);
};

var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

var isSpecial = function (url) {
  return has(specialSchemes, url.scheme);
};

var includesCredentials = function (url) {
  return url.username != '' || url.password != '';
};

var cannotHaveUsernamePasswordPort = function (url) {
  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';
};

var isWindowsDriveLetter = function (string, normalized) {
  var second;
  return string.length == 2 && ALPHA.test(string.charAt(0))
    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));
};

var startsWithWindowsDriveLetter = function (string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (
    string.length == 2 ||
    ((third = string.charAt(2)) === '/' || third === '\\' || third === '?' || third === '#')
  );
};

var shortenURLsPath = function (url) {
  var path = url.path;
  var pathSize = path.length;
  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
    path.pop();
  }
};

var isSingleDot = function (segment) {
  return segment === '.' || segment.toLowerCase() === '%2e';
};

var isDoubleDot = function (segment) {
  segment = segment.toLowerCase();
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

// eslint-disable-next-line max-statements
var parseURL = function (url, input, stateOverride, base) {
  var state = stateOverride || SCHEME_START;
  var pointer = 0;
  var buffer = '';
  var seenAt = false;
  var seenBracket = false;
  var seenPasswordToken = false;
  var codePoints, char, bufferCodePoints, failure;

  if (!stateOverride) {
    url.scheme = '';
    url.username = '';
    url.password = '';
    url.host = null;
    url.port = null;
    url.path = [];
    url.query = null;
    url.fragment = null;
    url.cannotBeABaseURL = false;
    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
  }

  input = input.replace(TAB_AND_NEW_LINE, '');

  codePoints = arrayFrom(input);

  while (pointer <= codePoints.length) {
    char = codePoints[pointer];
    switch (state) {
      case SCHEME_START:
        if (char && ALPHA.test(char)) {
          buffer += char.toLowerCase();
          state = SCHEME;
        } else if (!stateOverride) {
          state = NO_SCHEME;
          continue;
        } else return INVALID_SCHEME;
        break;

      case SCHEME:
        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {
          buffer += char.toLowerCase();
        } else if (char == ':') {
          if (stateOverride && (
            (isSpecial(url) != has(specialSchemes, buffer)) ||
            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||
            (url.scheme == 'file' && !url.host)
          )) return;
          url.scheme = buffer;
          if (stateOverride) {
            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;
            return;
          }
          buffer = '';
          if (url.scheme == 'file') {
            state = FILE;
          } else if (isSpecial(url) && base && base.scheme == url.scheme) {
            state = SPECIAL_RELATIVE_OR_AUTHORITY;
          } else if (isSpecial(url)) {
            state = SPECIAL_AUTHORITY_SLASHES;
          } else if (codePoints[pointer + 1] == '/') {
            state = PATH_OR_AUTHORITY;
            pointer++;
          } else {
            url.cannotBeABaseURL = true;
            url.path.push('');
            state = CANNOT_BE_A_BASE_URL_PATH;
          }
        } else if (!stateOverride) {
          buffer = '';
          state = NO_SCHEME;
          pointer = 0;
          continue;
        } else return INVALID_SCHEME;
        break;

      case NO_SCHEME:
        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;
        if (base.cannotBeABaseURL && char == '#') {
          url.scheme = base.scheme;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          url.cannotBeABaseURL = true;
          state = FRAGMENT;
          break;
        }
        state = base.scheme == 'file' ? FILE : RELATIVE;
        continue;

      case SPECIAL_RELATIVE_OR_AUTHORITY:
        if (char == '/' && codePoints[pointer + 1] == '/') {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          pointer++;
        } else {
          state = RELATIVE;
          continue;
        } break;

      case PATH_OR_AUTHORITY:
        if (char == '/') {
          state = AUTHORITY;
          break;
        } else {
          state = PATH;
          continue;
        }

      case RELATIVE:
        url.scheme = base.scheme;
        if (char == EOF) {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
        } else if (char == '/' || (char == '\\' && isSpecial(url))) {
          state = RELATIVE_SLASH;
        } else if (char == '?') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = '';
          state = QUERY;
        } else if (char == '#') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          state = FRAGMENT;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.path.pop();
          state = PATH;
          continue;
        } break;

      case RELATIVE_SLASH:
        if (isSpecial(url) && (char == '/' || char == '\\')) {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        } else if (char == '/') {
          state = AUTHORITY;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          state = PATH;
          continue;
        } break;

      case SPECIAL_AUTHORITY_SLASHES:
        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;
        pointer++;
        break;

      case SPECIAL_AUTHORITY_IGNORE_SLASHES:
        if (char != '/' && char != '\\') {
          state = AUTHORITY;
          continue;
        } break;

      case AUTHORITY:
        if (char == '@') {
          if (seenAt) buffer = '%40' + buffer;
          seenAt = true;
          bufferCodePoints = arrayFrom(buffer);
          for (var i = 0; i < bufferCodePoints.length; i++) {
            var codePoint = bufferCodePoints[i];
            if (codePoint == ':' && !seenPasswordToken) {
              seenPasswordToken = true;
              continue;
            }
            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
            if (seenPasswordToken) url.password += encodedCodePoints;
            else url.username += encodedCodePoints;
          }
          buffer = '';
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url))
        ) {
          if (seenAt && buffer == '') return INVALID_AUTHORITY;
          pointer -= arrayFrom(buffer).length + 1;
          buffer = '';
          state = HOST;
        } else buffer += char;
        break;

      case HOST:
      case HOSTNAME:
        if (stateOverride && url.scheme == 'file') {
          state = FILE_HOST;
          continue;
        } else if (char == ':' && !seenBracket) {
          if (buffer == '') return INVALID_HOST;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PORT;
          if (stateOverride == HOSTNAME) return;
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url))
        ) {
          if (isSpecial(url) && buffer == '') return INVALID_HOST;
          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PATH_START;
          if (stateOverride) return;
          continue;
        } else {
          if (char == '[') seenBracket = true;
          else if (char == ']') seenBracket = false;
          buffer += char;
        } break;

      case PORT:
        if (DIGIT.test(char)) {
          buffer += char;
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url)) ||
          stateOverride
        ) {
          if (buffer != '') {
            var port = parseInt(buffer, 10);
            if (port > 0xFFFF) return INVALID_PORT;
            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;
            buffer = '';
          }
          if (stateOverride) return;
          state = PATH_START;
          continue;
        } else return INVALID_PORT;
        break;

      case FILE:
        url.scheme = 'file';
        if (char == '/' || char == '\\') state = FILE_SLASH;
        else if (base && base.scheme == 'file') {
          if (char == EOF) {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
          } else if (char == '?') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = '';
            state = QUERY;
          } else if (char == '#') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
              url.host = base.host;
              url.path = base.path.slice();
              shortenURLsPath(url);
            }
            state = PATH;
            continue;
          }
        } else {
          state = PATH;
          continue;
        } break;

      case FILE_SLASH:
        if (char == '/' || char == '\\') {
          state = FILE_HOST;
          break;
        }
        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);
          else url.host = base.host;
        }
        state = PATH;
        continue;

      case FILE_HOST:
        if (char == EOF || char == '/' || char == '\\' || char == '?' || char == '#') {
          if (!stateOverride && isWindowsDriveLetter(buffer)) {
            state = PATH;
          } else if (buffer == '') {
            url.host = '';
            if (stateOverride) return;
            state = PATH_START;
          } else {
            failure = parseHost(url, buffer);
            if (failure) return failure;
            if (url.host == 'localhost') url.host = '';
            if (stateOverride) return;
            buffer = '';
            state = PATH_START;
          } continue;
        } else buffer += char;
        break;

      case PATH_START:
        if (isSpecial(url)) {
          state = PATH;
          if (char != '/' && char != '\\') continue;
        } else if (!stateOverride && char == '?') {
          url.query = '';
          state = QUERY;
        } else if (!stateOverride && char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          state = PATH;
          if (char != '/') continue;
        } break;

      case PATH:
        if (
          char == EOF || char == '/' ||
          (char == '\\' && isSpecial(url)) ||
          (!stateOverride && (char == '?' || char == '#'))
        ) {
          if (isDoubleDot(buffer)) {
            shortenURLsPath(url);
            if (char != '/' && !(char == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else if (isSingleDot(buffer)) {
            if (char != '/' && !(char == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else {
            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
              if (url.host) url.host = '';
              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter
            }
            url.path.push(buffer);
          }
          buffer = '';
          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {
            while (url.path.length > 1 && url.path[0] === '') {
              url.path.shift();
            }
          }
          if (char == '?') {
            url.query = '';
            state = QUERY;
          } else if (char == '#') {
            url.fragment = '';
            state = FRAGMENT;
          }
        } else {
          buffer += percentEncode(char, pathPercentEncodeSet);
        } break;

      case CANNOT_BE_A_BASE_URL_PATH:
        if (char == '?') {
          url.query = '';
          state = QUERY;
        } else if (char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);
        } break;

      case QUERY:
        if (!stateOverride && char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          if (char == "'" && isSpecial(url)) url.query += '%27';
          else if (char == '#') url.query += '%23';
          else url.query += percentEncode(char, C0ControlPercentEncodeSet);
        } break;

      case FRAGMENT:
        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);
        break;
    }

    pointer++;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance(this, URLConstructor, 'URL');
  var base = arguments.length > 1 ? arguments[1] : undefined;
  var urlString = String(url);
  var state = setInternalState(that, { type: 'URL' });
  var baseState, failure;
  if (base !== undefined) {
    if (base instanceof URLConstructor) baseState = getInternalURLState(base);
    else {
      failure = parseURL(baseState = {}, String(base));
      if (failure) throw TypeError(failure);
    }
  }
  failure = parseURL(state, urlString, null, baseState);
  if (failure) throw TypeError(failure);
  var searchParams = state.searchParams = new URLSearchParams();
  var searchParamsState = getInternalSearchParamsState(searchParams);
  searchParamsState.updateSearchParams(state.query);
  searchParamsState.updateURL = function () {
    state.query = String(searchParams) || null;
  };
  if (!DESCRIPTORS) {
    that.href = serializeURL.call(that);
    that.origin = getOrigin.call(that);
    that.protocol = getProtocol.call(that);
    that.username = getUsername.call(that);
    that.password = getPassword.call(that);
    that.host = getHost.call(that);
    that.hostname = getHostname.call(that);
    that.port = getPort.call(that);
    that.pathname = getPathname.call(that);
    that.search = getSearch.call(that);
    that.searchParams = getSearchParams.call(that);
    that.hash = getHash.call(that);
  }
};

var URLPrototype = URLConstructor.prototype;

var serializeURL = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var username = url.username;
  var password = url.password;
  var host = url.host;
  var port = url.port;
  var path = url.path;
  var query = url.query;
  var fragment = url.fragment;
  var output = scheme + ':';
  if (host !== null) {
    output += '//';
    if (includesCredentials(url)) {
      output += username + (password ? ':' + password : '') + '@';
    }
    output += serializeHost(host);
    if (port !== null) output += ':' + port;
  } else if (scheme == 'file') output += '//';
  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
  if (query !== null) output += '?' + query;
  if (fragment !== null) output += '#' + fragment;
  return output;
};

var getOrigin = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var port = url.port;
  if (scheme == 'blob') try {
    return new URL(scheme.path[0]).origin;
  } catch (error) {
    return 'null';
  }
  if (scheme == 'file' || !isSpecial(url)) return 'null';
  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');
};

var getProtocol = function () {
  return getInternalURLState(this).scheme + ':';
};

var getUsername = function () {
  return getInternalURLState(this).username;
};

var getPassword = function () {
  return getInternalURLState(this).password;
};

var getHost = function () {
  var url = getInternalURLState(this);
  var host = url.host;
  var port = url.port;
  return host === null ? ''
    : port === null ? serializeHost(host)
    : serializeHost(host) + ':' + port;
};

var getHostname = function () {
  var host = getInternalURLState(this).host;
  return host === null ? '' : serializeHost(host);
};

var getPort = function () {
  var port = getInternalURLState(this).port;
  return port === null ? '' : String(port);
};

var getPathname = function () {
  var url = getInternalURLState(this);
  var path = url.path;
  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
};

var getSearch = function () {
  var query = getInternalURLState(this).query;
  return query ? '?' + query : '';
};

var getSearchParams = function () {
  return getInternalURLState(this).searchParams;
};

var getHash = function () {
  var fragment = getInternalURLState(this).fragment;
  return fragment ? '#' + fragment : '';
};

var accessorDescriptor = function (getter, setter) {
  return { get: getter, set: setter, configurable: true, enumerable: true };
};

if (DESCRIPTORS) {
  defineProperties(URLPrototype, {
    // `URL.prototype.href` accessors pair
    // https://url.spec.whatwg.org/#dom-url-href
    href: accessorDescriptor(serializeURL, function (href) {
      var url = getInternalURLState(this);
      var urlString = String(href);
      var failure = parseURL(url, urlString);
      if (failure) throw TypeError(failure);
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.origin` getter
    // https://url.spec.whatwg.org/#dom-url-origin
    origin: accessorDescriptor(getOrigin),
    // `URL.prototype.protocol` accessors pair
    // https://url.spec.whatwg.org/#dom-url-protocol
    protocol: accessorDescriptor(getProtocol, function (protocol) {
      var url = getInternalURLState(this);
      parseURL(url, String(protocol) + ':', SCHEME_START);
    }),
    // `URL.prototype.username` accessors pair
    // https://url.spec.whatwg.org/#dom-url-username
    username: accessorDescriptor(getUsername, function (username) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom(String(username));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.username = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.password` accessors pair
    // https://url.spec.whatwg.org/#dom-url-password
    password: accessorDescriptor(getPassword, function (password) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom(String(password));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.password = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.host` accessors pair
    // https://url.spec.whatwg.org/#dom-url-host
    host: accessorDescriptor(getHost, function (host) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, String(host), HOST);
    }),
    // `URL.prototype.hostname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hostname
    hostname: accessorDescriptor(getHostname, function (hostname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, String(hostname), HOSTNAME);
    }),
    // `URL.prototype.port` accessors pair
    // https://url.spec.whatwg.org/#dom-url-port
    port: accessorDescriptor(getPort, function (port) {
      var url = getInternalURLState(this);
      if (cannotHaveUsernamePasswordPort(url)) return;
      port = String(port);
      if (port == '') url.port = null;
      else parseURL(url, port, PORT);
    }),
    // `URL.prototype.pathname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-pathname
    pathname: accessorDescriptor(getPathname, function (pathname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      url.path = [];
      parseURL(url, pathname + '', PATH_START);
    }),
    // `URL.prototype.search` accessors pair
    // https://url.spec.whatwg.org/#dom-url-search
    search: accessorDescriptor(getSearch, function (search) {
      var url = getInternalURLState(this);
      search = String(search);
      if (search == '') {
        url.query = null;
      } else {
        if ('?' == search.charAt(0)) search = search.slice(1);
        url.query = '';
        parseURL(url, search, QUERY);
      }
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.searchParams` getter
    // https://url.spec.whatwg.org/#dom-url-searchparams
    searchParams: accessorDescriptor(getSearchParams),
    // `URL.prototype.hash` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hash
    hash: accessorDescriptor(getHash, function (hash) {
      var url = getInternalURLState(this);
      hash = String(hash);
      if (hash == '') {
        url.fragment = null;
        return;
      }
      if ('#' == hash.charAt(0)) hash = hash.slice(1);
      url.fragment = '';
      parseURL(url, hash, FRAGMENT);
    })
  });
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
redefine(URLPrototype, 'toJSON', function toJSON() {
  return serializeURL.call(this);
}, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
redefine(URLPrototype, 'toString', function toString() {
  return serializeURL.call(this);
}, { enumerable: true });

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  // eslint-disable-next-line no-unused-vars
  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {
    return nativeCreateObjectURL.apply(NativeURL, arguments);
  });
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  // eslint-disable-next-line no-unused-vars
  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {
    return nativeRevokeObjectURL.apply(NativeURL, arguments);
  });
}

setToStringTag(URLConstructor, 'URL');

$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
  URL: URLConstructor
});


/***/ }),

/***/ "2c94":
/***/ (function(module, exports) {

function helperDefaultCompare (v1, v2) {
  return v1 === v2
}

module.exports = helperDefaultCompare


/***/ }),

/***/ "2d00":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var userAgent = __webpack_require__("342f");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "2eeb":
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__("b484")
var eqNull = __webpack_require__("9051")
var get = __webpack_require__("5b2d")

var arrayEach = __webpack_require__("25b3")

function helperCreateMinMax (handle) {
  return function (arr, iterate) {
    if (arr && arr.length) {
      var rest, itemIndex
      arrayEach(arr, function (itemVal, index) {
        if (iterate) {
          itemVal = isFunction(iterate) ? iterate(itemVal, index, arr) : get(itemVal, iterate)
        }
        if (!eqNull(itemVal) && (eqNull(rest) || handle(rest, itemVal))) {
          itemIndex = index
          rest = itemVal
        }
      })
      return arr[itemIndex]
    }
    return rest
  }
}

module.exports = helperCreateMinMax


/***/ }),

/***/ "3371":
/***/ (function(module, exports, __webpack_require__) {

var keys = __webpack_require__("6815")

/**
  * 接收一个函数作为累加器，数组中的每个值（从左到右）开始合并，最终为一个值。
  *
  * @param {Array} array 数组
  * @param {Function} callback 方法
  * @param {Object} initialValue 初始值
  * @return {Number}
  */
function reduce (array, callback, initialValue) {
  if (array) {
    var len, reduceMethod
    var index = 0
    var context = null
    var previous = initialValue
    var isInitialVal = arguments.length > 2
    var keyList = keys(array)
    if (array.length && array.reduce) {
      reduceMethod = function () {
        return callback.apply(context, arguments)
      }
      if (isInitialVal) {
        return array.reduce(reduceMethod, previous)
      }
      return array.reduce(reduceMethod)
    }
    if (isInitialVal) {
      index = 1
      previous = array[keyList[0]]
    }
    for (len = keyList.length; index < len; index++) {
      previous = callback.call(context, previous, array[keyList[index]], index, array)
    }
    return previous
  }
}

module.exports = reduce


/***/ }),

/***/ "33b5":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable valid-typeof */
var staticStrUndefined = __webpack_require__("39bc")

/**
  * 判断是否WeakMap对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
 */
var supportWeakMap = typeof WeakMap !== staticStrUndefined
function isWeakMap (obj) {
  return supportWeakMap && obj instanceof WeakMap
}

module.exports = isWeakMap


/***/ }),

/***/ "342f":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "349b":
/***/ (function(module, exports, __webpack_require__) {

var objectToString = __webpack_require__("0d1b")

function helperCreateInInObjectString (type) {
  return function (obj) {
    return '[object ' + type + ']' === objectToString.call(obj)
  }
}

module.exports = helperCreateInInObjectString


/***/ }),

/***/ "349d":
/***/ (function(module, exports, __webpack_require__) {

var round = __webpack_require__("c9cd")
var ceil = __webpack_require__("f9f2")
var floor = __webpack_require__("a695")

var isNumber = __webpack_require__("366b")
var toValString = __webpack_require__("bee9")
var toFixed = __webpack_require__("092a")

var toNumberString = __webpack_require__("416f")

/**
  * 千分位分隔符、小数点
  *
  * @param {String/Number} num 数值
  * @param {CommafyOptions} options 参数
  * @return {String}
 */
function commafy(num, options) {
  var opts = options || {}
  var optDigits = opts.digits
  var isNum = isNumber(num)
  var rest, result, isNegative, intStr, floatStr
  if (isNum) {
    rest = (opts.ceil ? ceil : (opts.floor ? floor : round))(num, optDigits)
    result = toNumberString(optDigits ? toFixed(rest, optDigits) : rest).split('.')
    intStr = result[0]
    floatStr = result[1]
    isNegative = intStr && rest < 0
    if (isNegative) {
      intStr = intStr.substring(1, intStr.length)
    }
  } else {
    rest = toValString(num).replace(/,/g, '')
    result = rest ? [rest] : []
    intStr = result[0]
  }
  if (result.length) {
    return (isNegative ? '-' : '') + intStr.replace(new RegExp('(?=(?!(\\b))(.{' + (opts.spaceNumber || 3) + '})+$)', 'g'), (opts.separator || ',')) + (floatStr ? ('.' + floatStr) : '')
  }
  return rest
}

module.exports = commafy


/***/ }),

/***/ "34e4":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateToNumber = __webpack_require__("180e")

/**
 * 转数值
 * @param { String/Number } str 数值
 *
 * @return {Number}
 */
var toNumber = helperCreateToNumber(parseFloat)

module.exports = toNumber


/***/ }),

/***/ "35a1":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("f5df");
var Iterators = __webpack_require__("3f8c");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "35c4":
/***/ (function(module, exports, __webpack_require__) {

var staticLocation = __webpack_require__("dce7")

function helperGetLocatOrigin () {
  return staticLocation ? (staticLocation.origin || (staticLocation.protocol + '//' + staticLocation.host)) : ''
}

module.exports = helperGetLocatOrigin


/***/ }),

/***/ "35e1":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var isString = __webpack_require__("b7c3")
var each = __webpack_require__("9a21")

/**
  * 返回对象的长度
  *
  * @param {Object} obj 对象
  * @return {Number}
  */
function getSize (obj) {
  var len = 0
  if (isString(obj) || isArray(obj)) {
    return obj.length
  }
  each(obj, function () {
    len++
  })
  return len
}

module.exports = getSize


/***/ }),

/***/ "35f1":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateGetObjects = __webpack_require__("086f")

/**
  * 获取对象所有值
  *
  * @param {Object} obj 对象/数组
  * @return {Array}
  */
var values = helperCreateGetObjects('values', 0)

module.exports = values


/***/ }),

/***/ "366b":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInTypeof = __webpack_require__("ca22")

/**
  * 判断是否Number对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isNumber = helperCreateInTypeof('number')

module.exports = isNumber


/***/ }),

/***/ "36c6":
/***/ (function(module, exports, __webpack_require__) {

var groupBy = __webpack_require__("b76e")

var objectEach = __webpack_require__("0b17")

/**
  * 集合分组统计,返回各组中对象的数量统计
  *
  * @param {Array} obj 对象
  * @param {Function} iterate 回调/对象属性
  * @param {Object} context 上下文
  * @return {Object}
  */
function countBy (obj, iterate, context) {
  var result = groupBy(obj, iterate, context || this)
  objectEach(result, function (item, key) {
    result[key] = item.length
  })
  return result
}

module.exports = countBy


/***/ }),

/***/ "3703":
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__("34e4")

/**
 * 裁剪 Arguments 或数组 array，从 start 位置开始到 end 结束，但不包括 end 本身的位置
 * @param {Array/Arguments} array 数组或Arguments
 * @param {Number} startIndex 开始索引
 * @param {Number} endIndex 结束索引
 */
function slice (array, startIndex, endIndex) {
  var result = []
  var argsSize = arguments.length
  if (array) {
    startIndex = argsSize >= 2 ? toNumber(startIndex) : 0
    endIndex = argsSize >= 3 ? toNumber(endIndex) : array.length
    if (array.slice) {
      return array.slice(startIndex, endIndex)
    }
    for (; startIndex < endIndex; startIndex++) {
      result.push(array[startIndex])
    }
  }
  return result
}

module.exports = slice


/***/ }),

/***/ "37e8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var anObject = __webpack_require__("825a");
var objectKeys = __webpack_require__("df75");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "38bd":
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__("b484")
var isArray = __webpack_require__("a44c")
var each = __webpack_require__("9a21")
var findIndexOf = __webpack_require__("0c07")

function helperCreatePickOmit (case1, case2) {
  return function (obj, callback) {
    var item, index
    var rest = {}
    var result = []
    var context = this
    var args = arguments
    var len = args.length
    if (!isFunction(callback)) {
      for (index = 1; index < len; index++) {
        item = args[index]
        result.push.apply(result, isArray(item) ? item : [item])
      }
      callback = 0
    }
    each(obj, function (val, key) {
      if ((callback ? callback.call(context, val, key, obj) : findIndexOf(result, function (name) {
        return name === key
      }) > -1) ? case1 : case2) {
        rest[key] = val
      }
    })
    return rest
  }
}

module.exports = helperCreatePickOmit


/***/ }),

/***/ "38cf":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var repeat = __webpack_require__("1148");

// `String.prototype.repeat` method
// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
$({ target: 'String', proto: true }, {
  repeat: repeat
});


/***/ }),

/***/ "39bc":
/***/ (function(module, exports) {

var staticStrUndefined = 'undefined'

module.exports = staticStrUndefined


/***/ }),

/***/ "3a48":
/***/ (function(module, exports, __webpack_require__) {

var staticStrFirst = __webpack_require__("b39a")
var staticStrLast = __webpack_require__("d0e5")
var staticParseInt = __webpack_require__("cef5")

var helperGetDateFullYear = __webpack_require__("9735")
var helperGetDateMonth = __webpack_require__("674e")
var helperGetDateTime = __webpack_require__("3ae2")

var toStringDate = __webpack_require__("fedd")
var isValidDate = __webpack_require__("27ad")

/**
  * 返回前几天或后几天的日期
  *
  * @param {Date} date 日期或数字
  * @param {Number} day 天(默认当天)、前几天、后几天
  * @param {String} mode 获取时分秒(null默认当前时分秒)、日初(first)、日末(last)
  * @return {Date}
  */
function getWhatDay (date, day, mode) {
  date = toStringDate(date)
  if (isValidDate(date) && !isNaN(day)) {
    date.setDate(date.getDate() + staticParseInt(day))
    if (mode === staticStrFirst) {
      return new Date(helperGetDateFullYear(date), helperGetDateMonth(date), date.getDate())
    } else if (mode === staticStrLast) {
      return new Date(helperGetDateTime(getWhatDay(date, 1, staticStrFirst)) - 1)
    }
  }
  return date
}

module.exports = getWhatDay


/***/ }),

/***/ "3ae2":
/***/ (function(module, exports) {

function helperGetDateTime (date) {
  return date.getTime()
}

module.exports = helperGetDateTime


/***/ }),

/***/ "3bbe":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "3ca3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "3cd7":
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__("34e4")
var toNumberString = __webpack_require__("416f")

function helperCreateMathNumber(name) {
  return function (num, digits) {
    var rest = toNumber(num)
    if (rest) {
      digits = digits >> 0
      var numStr = toNumberString(rest)
      var nums = numStr.split('.')
      var intStr = nums[0]
      var floatStr = nums[1] || ''
      rest = intStr + '.' + floatStr.substring(0, digits + 1)
      if (digits >= floatStr.length) {
        return toNumber(rest)
      }
      if (digits > 0) {
        var ratio = Math.pow(10, digits)
        return Math[name](rest * ratio) / ratio
      }
      return Math[name](rest)
    }
    return rest
  }
}

module.exports = helperCreateMathNumber


/***/ }),

/***/ "3d9d":
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__("b484")
var isString = __webpack_require__("b7c3")
var isArray = __webpack_require__("a44c")
var hasOwnProp = __webpack_require__("9de7")

function helperCreateiterateIndexOf (callback) {
  return function (obj, iterate, context) {
    if (obj && isFunction(iterate)) {
      if (isArray(obj) || isString(obj)) {
        return callback(obj, iterate, context)
      }
      for (var key in obj) {
        if (hasOwnProp(obj, key)) {
          if (iterate.call(context, obj[key], key, obj)) {
            return key
          }
        }
      }
    }
    return -1
  }
}

module.exports = helperCreateiterateIndexOf


/***/ }),

/***/ "3f8c":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "3fc4":
/***/ (function(module, exports, __webpack_require__) {

var isNumber = __webpack_require__("366b")
var isArray = __webpack_require__("a44c")
var isString = __webpack_require__("b7c3")
var isRegExp = __webpack_require__("ef6a")
var isDate = __webpack_require__("6deb")
var isBoolean = __webpack_require__("5d32")
var isUndefined = __webpack_require__("7ab1")
var keys = __webpack_require__("6815")

var every = __webpack_require__("d46f")

function helperEqualCompare (val1, val2, compare, func, key, obj1, obj2) {
  if (val1 === val2) {
    return true
  }
  if (val1 && val2 && !isNumber(val1) && !isNumber(val2) && !isString(val1) && !isString(val2)) {
    if (isRegExp(val1)) {
      return compare('' + val1, '' + val2, key, obj1, obj2)
    } if (isDate(val1) || isBoolean(val1)) {
      return compare(+val1, +val2, key, obj1, obj2)
    } else {
      var result, val1Keys, val2Keys
      var isObj1Arr = isArray(val1)
      var isObj2Arr = isArray(val2)
      if (isObj1Arr || isObj2Arr ? isObj1Arr && isObj2Arr : val1.constructor === val2.constructor) {
        val1Keys = keys(val1)
        val2Keys = keys(val2)
        if (func) {
          result = func(val1, val2, key)
        }
        if (val1Keys.length === val2Keys.length) {
          return isUndefined(result) ? every(val1Keys, function (key, index) {
            return key === val2Keys[index] && helperEqualCompare(val1[key], val2[val2Keys[index]], compare, func, isObj1Arr || isObj2Arr ? index : key, val1, val2)
          }) : !!result
        }
        return false
      }
    }
  }
  return compare(val1, val2, key, obj1, obj2)
}

module.exports = helperEqualCompare


/***/ }),

/***/ "4035":
/***/ (function(module, exports, __webpack_require__) {

var map = __webpack_require__("e3c3")

var isArray = __webpack_require__("a44c")

function deepGetObj (obj, path) {
  var index = 0
  var len = path.length
  while (obj && index < len) {
    obj = obj[path[index++]]
  }
  return len && obj ? obj : 0
}

/**
 * 在list的每个元素上执行方法,任何传递的额外参数都会在调用方法的时候传递给它
 *
 * @param {Array} list
 * @param {Array/String/Function} path
 * @param {...Object} arguments
 * @return {Array}
 */
function invoke (list, path) {
  var func
  var args = arguments
  var params = []
  var paths = []
  var index = 2
  var len = args.length
  for (; index < len; index++) {
    params.push(args[index])
  }
  if (isArray(path)) {
    len = path.length - 1
    for (index = 0; index < len; index++) {
      paths.push(path[index])
    }
    path = path[len]
  }
  return map(list, function (context) {
    if (paths.length) {
      context = deepGetObj(context, paths)
    }
    func = context[path] || path
    if (func && func.apply) {
      return func.apply(context, params)
    }
  })
}

module.exports = invoke


/***/ }),

/***/ "4054":
/***/ (function(module, exports, __webpack_require__) {

var setupDefaults = __webpack_require__("27e0")

var helperStringUpperCase = __webpack_require__("dffc")
var helperGetDateFullYear = __webpack_require__("9735")
var helperGetDateMonth = __webpack_require__("674e")

var toStringDate = __webpack_require__("fedd")
var getYearWeek = __webpack_require__("6175")
var getYearDay = __webpack_require__("0946")

var assign = __webpack_require__("294d")

var isValidDate = __webpack_require__("27ad")
var isFunction = __webpack_require__("b484")

var padStart = __webpack_require__("9fe0")

function handleCustomTemplate (date, formats, match, value) {
  var format = formats[match]
  if (format) {
    if (isFunction(format)) {
      return format(value, match, date)
    } else {
      return format[value]
    }
  }
  return value
}

function formatDayE (day) {
  return day === 0 ? 7 : day
}

/**
  * 日期格式化为字符串，转义符号 []
  *
  * @param {Date} date 日期或数字
  * @param {String} format 输出日期格式(年份(yy|yyyy)、月份(M|MM自动补0)、天(d|dd自动补0)、12小时制(h|hh自动补0)、24小时制(H|HH自动补0)、分钟(m|mm自动补0)、秒(s|ss自动补0)、毫秒(S|SSS自动补0)、D当年的第几天、a/A上午下午、e/E星期几、w当年的第几周、W当月的第几周、q当年第几个季度、Z时区)
  * @param {Object} options {formats: {q: ['日', '一', '二', '三', '四', '五', '六'], E: function (value, match, date) {return '三'}, }} 自定义格式化模板
  * @return {String}
  */
var dateFormatRE = /\[([^\]]+)]|y{2,4}|M{1,2}|d{1,2}|H{1,2}|h{1,2}|m{1,2}|s{1,2}|S{1,3}|Z{1,2}|W{1,2}|D{1,3}|[aAeEq]/g
function toDateString (date, format, options) {
  if (date) {
    date = toStringDate(date)
    if (isValidDate(date)) {
      var result = format || setupDefaults.formatString
      var hours = date.getHours()
      var apm = hours < 12 ? 'am' : 'pm'
      var formats = assign({}, setupDefaults.formatStringMatchs, options ? options.formats : null)
      var fy = function (match, length) {
        return ('' + helperGetDateFullYear(date)).substr(4 - length)
      }
      var fM = function (match, length) {
        return padStart(helperGetDateMonth(date) + 1, length, '0')
      }
      var fd = function (match, length) {
        return padStart(date.getDate(), length, '0')
      }
      var fH = function (match, length) {
        return padStart(hours, length, '0')
      }
      var fh = function (match, length) {
        return padStart(hours <= 12 ? hours : hours - 12, length, '0')
      }
      var fm = function (match, length) {
        return padStart(date.getMinutes(), length, '0')
      }
      var fs = function (match, length) {
        return padStart(date.getSeconds(), length, '0')
      }
      var fS = function (match, length) {
        return padStart(date.getMilliseconds(), length, '0')
      }
      var fZ = function (match, length) {
        var zoneHours = date.getTimezoneOffset() / 60 * -1
        return handleCustomTemplate(date, formats, match, (zoneHours >= 0 ? '+' : '-') + padStart(zoneHours, 2, '0') + (length === 1 ? ':' : '') + '00')
      }
      var fW = function (match, length) {
        return padStart(handleCustomTemplate(date, formats, match, getYearWeek(date)), length, '0')
      }
      var fD = function (match, length) {
        return padStart(handleCustomTemplate(date, formats, match, getYearDay(date)), length, '0')
      }
      var parseDates = {
        yyyy: fy,
        yy: fy,
        MM: fM,
        M: fM,
        dd: fd,
        d: fd,
        HH: fH,
        H: fH,
        hh: fh,
        h: fh,
        mm: fm,
        m: fm,
        ss: fs,
        s: fs,
        SSS: fS,
        S: fS,
        ZZ: fZ,
        Z: fZ,
        WW: fW,
        W: fW,
        DDD: fD,
        D: fD,
        a: function (match) {
          return handleCustomTemplate(date, formats, match, apm)
        },
        A: function (match) {
          return handleCustomTemplate(date, formats, match, helperStringUpperCase(apm))
        },
        e: function (match) {
          return handleCustomTemplate(date, formats, match, date.getDay())
        },
        E: function (match) {
          return handleCustomTemplate(date, formats, match, formatDayE(date.getDay()))
        },
        q: function (match) {
          return handleCustomTemplate(date, formats, match, Math.floor((helperGetDateMonth(date) + 3) / 3))
        }
      }
      return result.replace(dateFormatRE, function (match, skip) {
        return skip || (parseDates[match] ? parseDates[match](match, match.length) : match)
      })
    }
    return 'Invalid Date'
  }
  return ''
}

module.exports = toDateString


/***/ }),

/***/ "408a":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `thisNumberValue` abstract operation
// https://tc39.github.io/ecma262/#sec-thisnumbervalue
module.exports = function (value) {
  if (typeof value != 'number' && classof(value) != 'Number') {
    throw TypeError('Incorrect invocation');
  }
  return +value;
};


/***/ }),

/***/ "4160":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var forEach = __webpack_require__("17c2");

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "416f":
/***/ (function(module, exports, __webpack_require__) {

var helperStringRepeat = __webpack_require__("c718")
var helperNumberOffsetPoint = __webpack_require__("eae28")

/**
 * 数值转字符串，科学计数转字符串
 * @param { Number } num 数值
 *
 * @return {Number}
 */
function toNumberString(num) {
  var rest = '' + num
  var scienceMatchs = rest.match(/^([-+]?)((\d+)|((\d+)?[.](\d+)?))e([-+]{1})([0-9]+)$/)
  if (scienceMatchs) {
    var isNegative = num < 0
    var absFlag = isNegative ? '-' : ''
    var intNumStr = scienceMatchs[3] || ''
    var dIntNumStr = scienceMatchs[5] || ''
    var dFloatNumStr = scienceMatchs[6] || ''
    var sciencFlag = scienceMatchs[7]
    var scienceNumStr = scienceMatchs[8]
    var floatOffsetIndex = scienceNumStr - dFloatNumStr.length
    var intOffsetIndex = scienceNumStr - intNumStr.length
    var dIntOffsetIndex = scienceNumStr - dIntNumStr.length
    if (sciencFlag === '+') {
      if (intNumStr) {
        return absFlag + intNumStr + helperStringRepeat('0', scienceNumStr)
      }
      if (floatOffsetIndex > 0) {
        return absFlag + dIntNumStr + dFloatNumStr + helperStringRepeat('0', floatOffsetIndex)
      }
      return absFlag + dIntNumStr + helperNumberOffsetPoint(dFloatNumStr, scienceNumStr)
    }
    if (intNumStr) {
      if (intOffsetIndex > 0) {
        return absFlag + '0.' + helperStringRepeat('0', Math.abs(intOffsetIndex)) + intNumStr
      }
      return absFlag + helperNumberOffsetPoint(intNumStr, intOffsetIndex)
    }
    if (dIntOffsetIndex > 0) {
      return absFlag + '0.' + helperStringRepeat('0', Math.abs(dIntOffsetIndex)) + dIntNumStr + dFloatNumStr
    }
    return absFlag + helperNumberOffsetPoint(dIntNumStr, dIntOffsetIndex) + dFloatNumStr
  }
  return rest
}

module.exports = toNumberString


/***/ }),

/***/ "4237":
/***/ (function(module, exports, __webpack_require__) {

var isNumber = __webpack_require__("366b")

function isNumberFinite (obj) {
  return isNumber(obj) && isFinite(obj)
}

module.exports = isNumberFinite


/***/ }),

/***/ "428f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global;


/***/ }),

/***/ "42c3":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateTreeFunc = __webpack_require__("eae2")

var map = __webpack_require__("e3c3")

function mapTreeItem (parent, obj, iterate, context, path, node, parseChildren, opts) {
  var paths, nodes, rest
  var mapChildren = opts.mapChildren || parseChildren
  return map(obj, function (item, index) {
    paths = path.concat(['' + index])
    nodes = node.concat([item])
    rest = iterate.call(context, item, index, obj, paths, parent, nodes)
    if (rest && item && parseChildren && item[parseChildren]) {
      rest[mapChildren] = mapTreeItem(item, item[parseChildren], iterate, context, paths, nodes, parseChildren, opts)
    }
    return rest
  })
}

/**
  * 从树结构中指定方法后的返回值组成的新数组
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调
  * @param {Object} options {children: 'children'}
  * @param {Object} context 上下文
  * @return {Object/Array}
  */
var mapTree = helperCreateTreeFunc(mapTreeItem)

module.exports = mapTree


/***/ }),

/***/ "4362":
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    setTimeout(function () {
        fn.apply(null, args);
    }, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__("df7c");
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),

/***/ "4396":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var isNull = __webpack_require__("f108")

/**
  * 判断是否整数
  *
  * @param {Number, String} number 数值
  * @return {Boolean}
  */
var isInteger = function (obj) {
  return !isNull(obj) && !isNaN(obj) && !isArray(obj) && obj % 1 === 0
}

module.exports = isInteger


/***/ }),

/***/ "44ad":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "44d2":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var create = __webpack_require__("7c73");
var definePropertyModule = __webpack_require__("9bf2");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "44e7":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var classof = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "452e":
/***/ (function(module, exports) {

function helperDeleteProperty (obj, property) {
  try {
    delete obj[property]
  } catch (e) {
    obj[property] = undefined
  }
}

module.exports = helperDeleteProperty


/***/ }),

/***/ "45fc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $some = __webpack_require__("b727").some;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('some');
var USES_TO_LENGTH = arrayMethodUsesToLength('some');

// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "466d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var toLength = __webpack_require__("50c4");
var requireObjectCoercible = __webpack_require__("1d80");
var advanceStringIndex = __webpack_require__("8aa5");
var regExpExec = __webpack_require__("14c3");

// @@match logic
fixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = requireObjectCoercible(this);
      var matcher = regexp == undefined ? undefined : regexp[MATCH];
      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative(nativeMatch, regexp, this);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);

      if (!rx.global) return regExpExec(rx, S);

      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "468d":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberAdd = __webpack_require__("fdc7")
var toNumber = __webpack_require__("34e4")

/**
 * 加法运算
 *
 * @param { Number } num1 被加数
 * @param { Number } num2 加数
 * @return {Number}
 */
function add (num1, num2) {
  return helperNumberAdd(toNumber(num1), toNumber(num2))
}

module.exports = add


/***/ }),

/***/ "4730":
/***/ (function(module, exports, __webpack_require__) {

var hasOwnProp = __webpack_require__("9de7")
var isArray = __webpack_require__("a44c")

function helperCreateIterateHandle (prop, useArray, restIndex, matchValue, defaultValue) {
  return function (obj, iterate, context) {
    if (obj && iterate) {
      if (prop && obj[prop]) {
        return obj[prop](iterate, context)
      } else {
        if (useArray && isArray(obj)) {
          for (var index = 0, len = obj.length; index < len; index++) {
            if (!!iterate.call(context, obj[index], index, obj) === matchValue) {
              return [true, false, index, obj[index]][restIndex]
            }
          }
        } else {
          for (var key in obj) {
            if (hasOwnProp(obj, key)) {
              if (!!iterate.call(context, obj[key], key, obj) === matchValue) {
                return [true, false, key, obj[key]][restIndex]
              }
            }
          }
        }
      }
    }
    return defaultValue
  }
}

module.exports = helperCreateIterateHandle


/***/ }),

/***/ "4840":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aFunction = __webpack_require__("1c0b");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "4930":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "4931":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var includes = __webpack_require__("20b3")

/**
  * 判断数组是否包含另一数组
  *
  * @param {Array} array1 数组
  * @param {Array} array2 被包含数组
  * @return {Boolean}
  */
function includeArrays (array1, array2) {
  var len
  var index = 0
  if (isArray(array1) && isArray(array2)) {
    for (len = array2.length; index < len; index++) {
      if (!includes(array1, array2[index])) {
        return false
      }
    }
    return true
  }
  return includes(array1, array2)
}

module.exports = includeArrays


/***/ }),

/***/ "4955":
/***/ (function(module, exports) {

function helperNewDate () {
  return new Date()
}

module.exports = helperNewDate


/***/ }),

/***/ "4964":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable valid-typeof */
var staticStrUndefined = __webpack_require__("39bc")

/**
  * 判断是否Set对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
 */
var supportSet = typeof Set !== staticStrUndefined
function isSet (obj) {
  return supportSet && obj instanceof Set
}

module.exports = isSet


/***/ }),

/***/ "498a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $trim = __webpack_require__("58a8").trim;
var forcedStringTrimMethod = __webpack_require__("c8d2");

// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),

/***/ "4cfc":
/***/ (function(module, exports, __webpack_require__) {

var setupDefaults = __webpack_require__("27e0")

var toValString = __webpack_require__("bee9")
var trim = __webpack_require__("f33a")

var get = __webpack_require__("5b2d")

/**
 * 解析动态字符串模板
 * @param {atring} str 字符串模板
 * @param {any | any[]} args 对象
 * @param {any} options 
 */
function template (str, args, options) {
  return toValString(str).replace((options || setupDefaults).tmplRE || /\{{2}([.\w[\]\s]+)\}{2}/g, function (match, key) {
    return get(args, trim(key))
  })
}

module.exports = template


/***/ }),

/***/ "4d63":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var inheritIfRequired = __webpack_require__("7156");
var defineProperty = __webpack_require__("9bf2").f;
var getOwnPropertyNames = __webpack_require__("241c").f;
var isRegExp = __webpack_require__("44e7");
var getFlags = __webpack_require__("ad6d");
var stickyHelpers = __webpack_require__("9f7f");
var redefine = __webpack_require__("6eeb");
var fails = __webpack_require__("d039");
var setInternalState = __webpack_require__("69f3").set;
var setSpecies = __webpack_require__("2626");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');
var NativeRegExp = global.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

var FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {
  re2[MATCH] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
})));

// `RegExp` constructor
// https://tc39.github.io/ecma262/#sec-regexp-constructor
if (FORCED) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = this instanceof RegExpWrapper;
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var sticky;

    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {
      return pattern;
    }

    if (CORRECT_NEW) {
      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;
    } else if (pattern instanceof RegExpWrapper) {
      if (flagsAreUndefined) flags = getFlags.call(pattern);
      pattern = pattern.source;
    }

    if (UNSUPPORTED_Y) {
      sticky = !!flags && flags.indexOf('y') > -1;
      if (sticky) flags = flags.replace(/y/g, '');
    }

    var result = inheritIfRequired(
      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),
      thisIsRegExp ? this : RegExpPrototype,
      RegExpWrapper
    );

    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });

    return result;
  };
  var proxy = function (key) {
    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
      configurable: true,
      get: function () { return NativeRegExp[key]; },
      set: function (it) { NativeRegExp[key] = it; }
    });
  };
  var keys = getOwnPropertyNames(NativeRegExp);
  var index = 0;
  while (keys.length > index) proxy(keys[index++]);
  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  redefine(global, 'RegExp', RegExpWrapper);
}

// https://tc39.github.io/ecma262/#sec-get-regexp-@@species
setSpecies('RegExp');


/***/ }),

/***/ "4d64":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var toLength = __webpack_require__("50c4");
var toAbsoluteIndex = __webpack_require__("23cb");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "4d90":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $padStart = __webpack_require__("0ccb").start;
var WEBKIT_BUG = __webpack_require__("9a0c");

// `String.prototype.padStart` method
// https://tc39.github.io/ecma262/#sec-string.prototype.padstart
$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4de4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $filter = __webpack_require__("b727").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
// Edge 14- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__("0366");
var toObject = __webpack_require__("7b0b");
var callWithSafeIterationClosing = __webpack_require__("9bdd");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var getIteratorMethod = __webpack_require__("35a1");

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "4ea2":
/***/ (function(module, exports, __webpack_require__) {

var unzip = __webpack_require__("be51")

/**
 * 将每个数组中相应位置的值合并在一起
 *
 * @param {Array*} array 数组
 */
function zip () {
  return unzip(arguments)
}

module.exports = zip


/***/ }),

/***/ "4ec9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__("6d61");
var collectionStrong = __webpack_require__("6566");

// `Map` constructor
// https://tc39.github.io/ecma262/#sec-map-objects
module.exports = collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "4f3d":
/***/ (function(module, exports) {

/**
  * 节流函数；当被调用 n 毫秒后才会执行，如果在这时间内又被调用则至少每隔 n 秒毫秒调用一次该函数
  *
  * @param {Function} callback 回调
  * @param {Number} wait 多少秒毫
  * @param {Object} options 参数{leading: 是否在之前执行, trailing: 是否在之后执行}
  * @return {Function}
  */
function throttle (callback, wait, options) {
  var args, context
  var opts = options || {}
  var runFlag = false
  var timeout = 0
  var optLeading = 'leading' in opts ? opts.leading : true
  var optTrailing = 'trailing' in opts ? opts.trailing : false
  var runFn = function () {
    runFlag = true
    callback.apply(context, args)
    timeout = setTimeout(endFn, wait)
  }
  var endFn = function () {
    timeout = 0
    if (!runFlag && optTrailing === true) {
      runFn()
    }
  }
  var cancelFn = function () {
    var rest = timeout !== 0
    clearTimeout(timeout)
    runFlag = false
    timeout = 0
    return rest
  }
  var throttled = function () {
    args = arguments
    context = this
    runFlag = false
    if (timeout === 0) {
      if (optLeading === true) {
        runFn()
      } else if (optTrailing === true) {
        timeout = setTimeout(endFn, wait)
      }
    }
  }
  throttled.cancel = cancelFn
  return throttled
}

module.exports = throttle


/***/ }),

/***/ "4f91":
/***/ (function(module, exports) {

var staticDecodeURIComponent = decodeURIComponent

module.exports = staticDecodeURIComponent


/***/ }),

/***/ "50c4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "5135":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "51ef":
/***/ (function(module, exports, __webpack_require__) {

var helperGetDateTime = __webpack_require__("3ae2")

var now = __webpack_require__("a8c4")
var toStringDate = __webpack_require__("fedd")

var isDate = __webpack_require__("6deb")

/**
 * 将日期格式化为时间戳
 *
  * @param {String/Number/Date} str 日期或数字
  * @param {String} format 解析日期格式
 * @returns Number
 */
var timestamp = function (str, format) {
  if (str) {
    var date = toStringDate(str, format)
    return isDate(date) ? helperGetDateTime(date) : date
  }
  return now()
}

module.exports = timestamp


/***/ }),

/***/ "5292":
/***/ (function(module, exports, __webpack_require__) {

var setupDefaults = __webpack_require__("27e0")

var map = __webpack_require__("e3c3")
var orderBy = __webpack_require__("6b35")

var clone = __webpack_require__("e643")
var includes = __webpack_require__("20b3")
var each = __webpack_require__("9a21")
var remove = __webpack_require__("6528")

var assign = __webpack_require__("294d")

function strictTree (array, optChildren) {
  each(array, function (item) {
    if (item.children && !item.children.length) {
      remove(item, optChildren)
    }
  })
}

/**
  * 将一个带层级的数据列表转成树结构
  *
  * @param {Array} array 数组
  * @param {Object} options {strict: false, parentKey: 'parentId', key: 'id', children: 'children', data: 'data'}
  * @return {Array}
  */
function toArrayTree (array, options) {
  var opts = assign({}, setupDefaults.treeOptions, options)
  var optStrict = opts.strict
  var optKey = opts.key
  var optParentKey = opts.parentKey
  var optChildren = opts.children
  var optSortKey = opts.sortKey
  var optReverse = opts.reverse
  var optData = opts.data
  var result = []
  var treeMap = {}
  var idList, id, treeData, parentId

  if (optSortKey) {
    array = orderBy(clone(array), optSortKey)
    if (optReverse) {
      array = array.reverse()
    }
  }

  idList = map(array, function (item) {
    return item[optKey]
  })

  each(array, function (item) {
    id = item[optKey]

    if (optData) {
      treeData = {}
      treeData[optData] = item
    } else {
      treeData = item
    }

    parentId = item[optParentKey]
    treeMap[id] = treeMap[id] || []
    treeMap[parentId] = treeMap[parentId] || []
    treeMap[parentId].push(treeData)
    treeData[optKey] = id
    treeData[optParentKey] = parentId
    treeData[optChildren] = treeMap[id]

    if (!optStrict || (optStrict && !parentId)) {
      if (!includes(idList, parentId)) {
        result.push(treeData)
      }
    }
  })

  if (optStrict) {
    strictTree(array, optChildren)
  }

  return result
}

module.exports = toArrayTree


/***/ }),

/***/ "5319":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");
var advanceStringIndex = __webpack_require__("8aa5");
var regExpExec = __webpack_require__("14c3");

var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {
  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
      return replacer !== undefined
        ? replacer.call(searchValue, O, replaceValue)
        : nativeReplace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      if (
        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||
        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
      ) {
        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
        if (res.done) return res.value;
      }

      var rx = anObject(regexp);
      var S = String(this);

      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        results.push(result);
        if (!global) break;

        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

  // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return nativeReplace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "5692":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("c430");
var store = __webpack_require__("c6cd");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.7.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "56ef":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var anObject = __webpack_require__("825a");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "5899":
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "58a8":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");
var whitespaces = __webpack_require__("5899");

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "596e":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable valid-typeof */
var staticStrUndefined = __webpack_require__("39bc")

/**
  * 判断是否FormData对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var supportFormData = typeof FormData !== staticStrUndefined
function isFormData (obj) {
  return supportFormData && obj instanceof FormData
}

module.exports = isFormData


/***/ }),

/***/ "59e7":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInInObjectString = __webpack_require__("349b")

/**
  * 判断是否Error对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isError = helperCreateInInObjectString('Error')

module.exports = isError


/***/ }),

/***/ "5a34":
/***/ (function(module, exports, __webpack_require__) {

var isRegExp = __webpack_require__("44e7");

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "5b18":
/***/ (function(module, exports, __webpack_require__) {

var lastArrayEach = __webpack_require__("7b36")
var keys = __webpack_require__("6815")

function lastObjectEach (obj, iterate, context) {
  lastArrayEach(keys(obj), function (key) {
    iterate.call(context, obj[key], key, obj)
  })
}

module.exports = lastObjectEach


/***/ }),

/***/ "5b2d":
/***/ (function(module, exports, __webpack_require__) {

var staticHGKeyRE = __webpack_require__("e9ea")

var helperGetHGSKeys = __webpack_require__("9b2c")
var hasOwnProp = __webpack_require__("9de7")
var isUndefined = __webpack_require__("7ab1")
var eqNull = __webpack_require__("9051")

/**
 * 获取对象的属性的值，如果值为 undefined，则返回默认值
 * @param {Object/Array} obj 对象
 * @param {String/Function} property 键、路径
 * @param {Object} defaultValue 默认值
 * @return {Object}
 */
function get (obj, property, defaultValue) {
  if (eqNull(obj)) {
    return defaultValue
  }
  var result = pathGet(obj, property)
  return isUndefined(result) ? defaultValue : result
}

function valGet (obj, key) {
  var matchs = key ? key.match(staticHGKeyRE) : ''
  return matchs ? (matchs[1] ? (obj[matchs[1]] ? obj[matchs[1]][matchs[2]] : undefined) : obj[matchs[2]]) : obj[key]
}

function pathGet (obj, property) {
  if (obj) {
    var rest, props, len
    var index = 0
    if (obj[property] || hasOwnProp(obj, property)) {
      return obj[property]
    } else {
      props = helperGetHGSKeys(property)
      len = props.length
      if (len) {
        for (rest = obj; index < len; index++) {
          rest = valGet(rest, props[index])
          if (eqNull(rest)) {
            if (index === len - 1) {
              return rest
            }
            return
          }
        }
      }
      return rest
    }
  }
}

module.exports = get


/***/ }),

/***/ "5c6c":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "5d32":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInTypeof = __webpack_require__("ca22")

/**
  * 判断是否Boolean对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isBoolean = helperCreateInTypeof('boolean')

module.exports = isBoolean


/***/ }),

/***/ "5d3a":
/***/ (function(module, exports) {

/**
  * 判断是否为空对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
function isEmpty (obj) {
  for (var key in obj) {
    return false
  }
  return true
}

module.exports = isEmpty


/***/ }),

/***/ "5d7e":
/***/ (function(module, exports, __webpack_require__) {

var map = __webpack_require__("e3c3")

/**
 * 将对象或者伪数组转为新数组
 *
 * @param {Array} list 数组
 * @return {Array}
 */
function toArray (list) {
  return map(list, function (item) {
    return item
  })
}

module.exports = toArray


/***/ }),

/***/ "5e3a":
/***/ (function(module, exports, __webpack_require__) {

var staticEscapeMap = __webpack_require__("8b91")

var helperFormatEscaper = __webpack_require__("6149")

var each = __webpack_require__("9a21")

var unescapeMap = {}
each(staticEscapeMap, function (item, key) {
  unescapeMap[staticEscapeMap[key]] = key
})

/**
  * 反转escape
  *
  * @param {String} str 字符串
  * @return {String}
  */
var unescape = helperFormatEscaper(unescapeMap)

module.exports = unescape


/***/ }),

/***/ "5fb2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function (string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = string.charCodeAt(counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = string.charCodeAt(counter++);
      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        output.push(value);
        counter--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function (digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function (delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  for (; delta > baseMinusTMin * tMax >> 1; k += base) {
    delta = floor(delta / baseMinusTMin);
  }
  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
// eslint-disable-next-line  max-statements
var encode = function (input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      output.push(stringFromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    output.push(delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      throw RangeError(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw RangeError(OVERFLOW_ERROR);
      }
      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        for (var k = base; /* no condition */; k += base) {
          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor(qMinusT / baseMinusT);
        }

        output.push(stringFromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        ++handledCPCount;
      }
    }

    ++delta;
    ++n;
  }
  return output.join('');
};

module.exports = function (input) {
  var encoded = [];
  var labels = input.toLowerCase().replace(regexSeparators, '\u002E').split('.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);
  }
  return encoded.join('.');
};


/***/ }),

/***/ "605d":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var global = __webpack_require__("da84");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "60da":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var objectKeys = __webpack_require__("df75");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var toObject = __webpack_require__("7b0b");
var IndexedObject = __webpack_require__("44ad");

var nativeAssign = Object.assign;
var defineProperty = Object.defineProperty;

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
module.exports = !nativeAssign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
    }
  } return T;
} : nativeAssign;


/***/ }),

/***/ "612b":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateIterateHandle = __webpack_require__("4730")

/**
  * 从左至右遍历，匹配最近的一条数据
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
var find = helperCreateIterateHandle('find', 1, 3, true)

module.exports = find


/***/ }),

/***/ "6149":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")
var keys = __webpack_require__("6815")

function helperFormatEscaper (dataMap) {
  var replaceRegexp = new RegExp('(?:' + keys(dataMap).join('|') + ')', 'g')
  return function (str) {
    return toValString(str).replace(replaceRegexp, function (match) {
      return dataMap[match]
    })
  }
}

module.exports = helperFormatEscaper


/***/ }),

/***/ "6163":
/***/ (function(module, exports, __webpack_require__) {

var staticStrUndefined = __webpack_require__("39bc")

/* eslint-disable valid-typeof */
var staticWindow = typeof window === staticStrUndefined ? 0 : window

module.exports = staticWindow


/***/ }),

/***/ "616c":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateMinMax = __webpack_require__("2eeb")

/**
  * 获取最小值
  *
  * @param {Array} arr 数组
  * @param {Function} iterate(item, index, obj) 回调
  * @return {Number}
  */
var min = helperCreateMinMax(function (rest, itemVal) {
  return rest > itemVal
})

module.exports = min


/***/ }),

/***/ "6175":
/***/ (function(module, exports, __webpack_require__) {

var staticDayTime = __webpack_require__("e11b")

var toStringDate = __webpack_require__("fedd")

var isValidDate = __webpack_require__("27ad")

/**
  * 返回某个年份的第几周
  *
  * @param {Date} date 日期或数字
  * @return {Number}
  */
function getYearWeek (date) {
  date = toStringDate(date)
  if (isValidDate(date)) {
    date.setHours(0, 0, 0, 0)
    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7)
    var week = new Date(date.getFullYear(), 0, 4)
    return Math.round(((date.getTime() - week.getTime()) / staticDayTime + (week.getDay() + 6) % 7 - 3) / 7) + 1
  }
  return NaN
}

module.exports = getYearWeek


/***/ }),

/***/ "6223":
/***/ (function(module, exports) {

function helperNumberDecimal (numStr) {
  return (numStr.split('.')[1] || '').length
}

module.exports = helperNumberDecimal


/***/ }),

/***/ "62e1":
/***/ (function(module, exports, __webpack_require__) {

var staticStrFirst = __webpack_require__("b39a")
var staticStrLast = __webpack_require__("d0e5")

var helperGetDateFullYear = __webpack_require__("9735")

var getWhatMonth = __webpack_require__("012c")
var toStringDate = __webpack_require__("fedd")
var isValidDate = __webpack_require__("27ad")

/**
  * 返回前几年或后几年的日期
  *
  * @param {Date} date 日期或数字
  * @param {Number} year 年(默认当前年)、前几个年(数值)、后几个年(数值)
  * @param {Number/String} month 获取哪月(null默认当前年)、年初(first)、年末(last)、指定月份（0-11）
  * @return {Date}
  */
function getWhatYear (date, year, month) {
  var number
  date = toStringDate(date)
  if (isValidDate(date)) {
    if (year) {
      number = year && !isNaN(year) ? year : 0
      date.setFullYear(helperGetDateFullYear(date) + number)
    }
    if (month || !isNaN(month)) {
      if (month === staticStrFirst) {
        return new Date(helperGetDateFullYear(date), 0, 1)
      } else if (month === staticStrLast) {
        date.setMonth(11)
        return getWhatMonth(date, 0, staticStrLast)
      } else {
        date.setMonth(month)
      }
    }
  }
  return date
}

module.exports = getWhatYear


/***/ }),

/***/ "64be":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateTreeFunc = __webpack_require__("eae2")

function findTreeItem (parent, obj, iterate, context, path, node, parseChildren, opts) {
  if (obj) {
    var item, index, len, paths, nodes, match
    for (index = 0, len = obj.length; index < len; index++) {
      item = obj[index]
      paths = path.concat(['' + index])
      nodes = node.concat([item])
      if (iterate.call(context, item, index, obj, paths, parent, nodes)) {
        return { index: index, item: item, path: paths, items: obj, parent: parent, nodes: nodes }
      }
      if (parseChildren && item) {
        match = findTreeItem(item, item[parseChildren], iterate, context, paths.concat([parseChildren]), nodes, parseChildren, opts)
        if (match) {
          return match
        }
      }
    }
  }
}

/**
  * 从树结构中查找匹配第一条数据的键、值、路径
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调
  * @param {Object} options {children: 'children'}
  * @param {Object} context 上下文
  * @return {Object} { item, index, items, path, parent, nodes }
  */
var findTree = helperCreateTreeFunc(findTreeItem)

module.exports = findTree


/***/ }),

/***/ "6528":
/***/ (function(module, exports, __webpack_require__) {

var helperDeleteProperty = __webpack_require__("452e")

var isFunction = __webpack_require__("b484")
var isArray = __webpack_require__("a44c")
var each = __webpack_require__("9a21")
var arrayEach = __webpack_require__("25b3")
var lastEach = __webpack_require__("2742")
var clear = __webpack_require__("c221")
var eqNull = __webpack_require__("9051")

function pluckProperty (name) {
  return function (obj, key) {
    return key === name
  }
}

/**
  * 移除对象属性
  *
  * @param {Object/Array} obj 对象/数组
  * @param {Function/String} iterate 方法或属性
  * @param {Object} context 上下文
  * @return {Object/Array}
  */
function remove (obj, iterate, context) {
  if (obj) {
    if (!eqNull(iterate)) {
      var removeKeys = []
      var rest = []
      if (!isFunction(iterate)) {
        iterate = pluckProperty(iterate)
      }
      each(obj, function (item, index, rest) {
        if (iterate.call(context, item, index, rest)) {
          removeKeys.push(index)
        }
      })
      if (isArray(obj)) {
        lastEach(removeKeys, function (item, key) {
          rest.push(obj[item])
          obj.splice(item, 1)
        })
      } else {
        rest = {}
        arrayEach(removeKeys, function (key) {
          rest[key] = obj[key]
          helperDeleteProperty(obj, key)
        })
      }
      return rest
    }
    return clear(obj)
  }
  return obj
}

module.exports = remove


/***/ }),

/***/ "6547":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "6566":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var defineProperty = __webpack_require__("9bf2").f;
var create = __webpack_require__("7c73");
var redefineAll = __webpack_require__("e2cc");
var bind = __webpack_require__("0366");
var anInstance = __webpack_require__("19aa");
var iterate = __webpack_require__("2266");
var defineIterator = __webpack_require__("7dd0");
var setSpecies = __webpack_require__("2626");
var DESCRIPTORS = __webpack_require__("83ab");
var fastKey = __webpack_require__("f183").fastKey;
var InternalStateModule = __webpack_require__("69f3");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // 23.1.3.6 Map.prototype.get(key)
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // 23.1.3.9 Map.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // 23.2.3.1 Set.prototype.add(value)
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return C;
  },
  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return { value: undefined, done: true };
      }
      // return step by kind
      if (kind == 'keys') return { value: entry.key, done: false };
      if (kind == 'values') return { value: entry.value, done: false };
      return { value: [entry.key, entry.value], done: false };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "656f":
/***/ (function(module, exports) {

/**
  * 判断是否对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
function isPlainObject (obj) {
  return obj ? obj.constructor === Object : false
}

module.exports = isPlainObject


/***/ }),

/***/ "65f0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "6628":
/***/ (function(module, exports, __webpack_require__) {

var helperGetDateTime = __webpack_require__("3ae2")
var helperGetYMD = __webpack_require__("87de")

function helperGetYMDTime (date) {
  return helperGetDateTime(helperGetYMD(date))
}

module.exports = helperGetYMDTime


/***/ }),

/***/ "6724":
/***/ (function(module, exports, __webpack_require__) {

var slice = __webpack_require__("3703")

/**
  * 创建一个只能调用一次的函数,只会返回第一次执行后的结果
  *
  * @param {Function} callback 函数
  * @param {Object} context 上下文
  * @param {*} args 额外的参数
  * @return {Object}
  */
function once (callback, context) {
  var done = false
  var rest = null
  var args = slice(arguments, 2)
  return function () {
    if (done) {
      return rest
    }
    rest = callback.apply(context, slice(arguments).concat(args))
    done = true
    return rest
  }
}

module.exports = once


/***/ }),

/***/ "674e":
/***/ (function(module, exports) {

function helperGetDateMonth (date) {
  return date.getMonth()
}

module.exports = helperGetDateMonth


/***/ }),

/***/ "6757":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var arrayEach = __webpack_require__("25b3")

function flattenDeep (array, deep) {
  var result = []
  arrayEach(array, function (vals) {
    result = result.concat(isArray(vals) ? (deep ? flattenDeep(vals, deep) : vals) : [vals])
  })
  return result
}

/**
  * 将一个多维数组铺平
  * @param {Array} array 数组
  * @param {Boolean} deep 是否深层
  * @return {Array}
  */
function flatten (array, deep) {
  if (isArray(array)) {
    return flattenDeep(array, deep)
  }
  return []
}

module.exports = flatten


/***/ }),

/***/ "6815":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateGetObjects = __webpack_require__("086f")

/**
  * 获取对象所有属性
  *
  * @param {Object} obj 对象/数组
  * @return {Array}
  */
var keys = helperCreateGetObjects('keys', 1)

module.exports = keys


/***/ }),

/***/ "69b8":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var isPlainObject = __webpack_require__("656f")
var each = __webpack_require__("9a21")

function handleMerge (target, source) {
  if ((isPlainObject(target) && isPlainObject(source)) || (isArray(target) && isArray(source))) {
    each(source, function (obj, key) {
      target[key] = handleMerge(target[key], obj)
    })
    return target
  }
  return source
}

/**
  * 将一个或多个源对象合并到目标对象中
  *
  * @param {Object} target 目标对象
  * @param {...Object}
  * @return {Boolean}
  */
 var merge = function (target) {
  if (!target) {
    target = {}
  }
  var args = arguments
  var len = args.length
  for (var source, index = 1; index < len; index++) {
    source = args[index]
    if (source) {
      handleMerge(target, source)
    }
  }
  return target
}

module.exports = merge


/***/ }),

/***/ "69f3":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");
var createNonEnumerableProperty = __webpack_require__("9112");
var objectHas = __webpack_require__("5135");
var shared = __webpack_require__("c6cd");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "6b35":
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__("25b3")
var toArray = __webpack_require__("5d7e")
var map = __webpack_require__("e3c3")

var isArray = __webpack_require__("a44c")
var isFunction = __webpack_require__("b484")
var isPlainObject = __webpack_require__("656f")
var isUndefined = __webpack_require__("7ab1")
var isNull = __webpack_require__("f108")
var eqNull = __webpack_require__("9051")
var get = __webpack_require__("5b2d")
var property = __webpack_require__("f42e")

var ORDER_PROP_ASC = 'asc'
var ORDER_PROP_DESC = 'desc'

// function handleSort (v1, v2) {
//   return v1 > v2 ? 1 : -1
// }

// '' < 数字 < 字符 < null < undefined
function handleSort (v1, v2) {
  if (isUndefined(v1)) {
    return 1
  }
  if (isNull(v1)) {
    return isUndefined(v2) ? -1 : 1
  }
  return v1 && v1.localeCompare ? v1.localeCompare(v2) : (v1 > v2 ? 1 : -1)
}

function buildMultiOrders (name, confs, compares) {
  return function (item1, item2) {
    var v1 = item1[name]
    var v2 = item2[name]
    if (v1 === v2) {
      return compares ? compares(item1, item2) : 0
    }
    return confs.order === ORDER_PROP_DESC ? handleSort(v2, v1) : handleSort(v1, v2)
  }
}

function getSortConfs (arr, list, fieldConfs, context) {
  var sortConfs = []
  fieldConfs = isArray(fieldConfs) ? fieldConfs : [fieldConfs]
  arrayEach(fieldConfs, function (handle, index) {
    if (handle) {
      var field = handle
      var order
      if (isArray(handle)) {
        field = handle[0]
        order = handle[1]
      } else if (isPlainObject(handle)) {
        field = handle.field
        order = handle.order
      }
      sortConfs.push({
        field: field,
        order: order || ORDER_PROP_ASC
      })
      arrayEach(list, isFunction(field) ? function (item, key) {
        item[index] = field.call(context, item.data, key, arr)
      } : function (item) {
        item[index] = field ? get(item.data, field) : item.data
      })
    }
  })
  return sortConfs
}

/**
  * 将数组进行排序
  *
  * @param {Array} arr 数组
  * @param {Function/String/Array} fieldConfs 方法或属性
  * @param {Object} context 上下文
  * @return {Array}
  */
function orderBy (arr, fieldConfs, context) {
  if (arr) {
    if (eqNull(fieldConfs)) {
      return toArray(arr).sort(handleSort)
    }
    var compares
    var list = map(arr, function (item) {
      return { data: item }
    })
    var sortConfs = getSortConfs(arr, list, fieldConfs, context)
    var len = sortConfs.length - 1
    while (len >= 0) {
      compares = buildMultiOrders(len, sortConfs[len], compares)
      len--
    }
    if (compares) {
      list = list.sort(compares)
    }
    return map(list, property('data'))
  }
  return []
}

module.exports = orderBy


/***/ }),

/***/ "6c18":
/***/ (function(module, exports, __webpack_require__) {

var staticLocation = __webpack_require__("dce7")

var parseUrl = __webpack_require__("a87c")

/**
  * 获取地址栏信息
  *
  * @return Object
  */
function locat () {
  return staticLocation ? parseUrl(staticLocation.href) : {}
}

module.exports = locat


/***/ }),

/***/ "6c69":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var values = __webpack_require__("35f1")

/**
  * 从右至左遍历，匹配最近的一条数据
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
function findLast (obj, iterate, context) {
  if (obj) {
    if (!isArray(obj)) {
      obj = values(obj)
    }
    for (var len = obj.length - 1; len >= 0; len--) {
      if (iterate.call(context, obj[len], len, obj)) {
        return obj[len]
      }
    }
  }
}

module.exports = findLast


/***/ }),

/***/ "6d61":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var InternalMetadataModule = __webpack_require__("f183");
var iterate = __webpack_require__("2266");
var anInstance = __webpack_require__("19aa");
var isObject = __webpack_require__("861d");
var fails = __webpack_require__("d039");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var setToStringTag = __webpack_require__("d44e");
var inheritIfRequired = __webpack_require__("7156");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var nativeMethod = NativePrototype[KEY];
    redefine(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        nativeMethod.call(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        nativeMethod.call(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  // eslint-disable-next-line max-len
  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
    new NativeConstructor().entries().next();
  })))) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.REQUIRED = true;
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "6deb":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInInObjectString = __webpack_require__("349b")

/**
  * 判断是否Date对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isDate = helperCreateInInObjectString('Date')

module.exports = isDate


/***/ }),

/***/ "6eda":
/***/ (function(module, exports, __webpack_require__) {

var keys = __webpack_require__("6815")
var findIndexOf = __webpack_require__("0c07")
var isEqual = __webpack_require__("d6c5")

var some = __webpack_require__("de51")
var includeArrays = __webpack_require__("4931")

/**
 * 判断属性中的键和值是否包含在对象中
 *
 * @param {Object/Array} obj 对象
 * @param {Object} source 值
 * @return {Boolean}
 */
function isMatch (obj, source) {
  var objKeys = keys(obj)
  var sourceKeys = keys(source)
  if (sourceKeys.length) {
    if (includeArrays(objKeys, sourceKeys)) {
      return some(sourceKeys, function (key2) {
        return findIndexOf(objKeys, function (key1) {
          return key1 === key2 && isEqual(obj[key1], source[key2])
        }) > -1
      })
    }
  } else {
    return true
  }
  return isEqual(obj, source)
}

module.exports = isMatch


/***/ }),

/***/ "6eeb":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var setGlobal = __webpack_require__("ce4e");
var inspectSource = __webpack_require__("8925");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var state;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) {
      createNonEnumerableProperty(value, 'name', key);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "6fe2":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("de18")
var isString = __webpack_require__("b7c3")

/**
  * 字符串转JSON
  *
  * @param {String} str 字符串
  * @return {Object} 返回转换后对象
  */
function toStringJSON (str) {
  if (isObject(str)) {
    return str
  } else if (isString(str)) {
    try {
      return JSON.parse(str)
    } catch (e) {}
  }
  return {}
}

module.exports = toStringJSON


/***/ }),

/***/ "7156":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var setPrototypeOf = __webpack_require__("d2bb");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    typeof (NewTarget = dummy.constructor) == 'function' &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "7273":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateGetObjects = __webpack_require__("086f")

/**
  * 获取对象所有属性、值
  *
  * @param {Object} obj 对象/数组
  * @return {Array}
  */
var entries = helperCreateGetObjects('entries', 2)

module.exports = entries


/***/ }),

/***/ "7418":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "746f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var has = __webpack_require__("5135");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineProperty = __webpack_require__("9bf2").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "7508":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateTreeFunc = __webpack_require__("eae2")

var arrayEach = __webpack_require__("25b3")

var assign = __webpack_require__("294d")

function searchTreeItem (parentAllow, parent, obj, iterate, context, path, node, parseChildren, opts) {
  var paths, nodes, rest, isAllow, hasChild
  var rests = []
  var hasOriginal = opts.original
  var mapChildren = opts.mapChildren || parseChildren
  arrayEach(obj, function (item, index) {
    paths = path.concat(['' + index])
    nodes = node.concat([item])
    isAllow = parentAllow || iterate.call(context, item, index, obj, paths, parent, nodes)
    hasChild = parseChildren && item[parseChildren]
    if (isAllow || hasChild) {
      rest = hasOriginal ? item : assign({}, item)
    }
    if (isAllow || hasChild) {
      rest[mapChildren] = searchTreeItem(isAllow, item, item[parseChildren], iterate, context, paths, nodes, parseChildren, opts)
      if (isAllow || rest[mapChildren].length) {
        rests.push(rest)
      }
    } else if (isAllow) {
      rests.push(rest)
    }
  })
  return rests
}

/**
  * 从树结构中根据回调查找数据
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调
  * @param {Object} options {children: 'children'}
  * @param {Object} context 上下文
  * @return {Array}
  */
var searchTree = helperCreateTreeFunc(function (parent, obj, iterate, context, path, nodes, parseChildren, opts) {
  return searchTreeItem(0, parent, obj, iterate, context, path, nodes, parseChildren, opts)
})

module.exports = searchTree


/***/ }),

/***/ "77f9":
/***/ (function(module, exports, __webpack_require__) {

var staticWindow = __webpack_require__("6163")

/**
  * 判断是否Window对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
function isWindow (obj) {
  return staticWindow && !!(obj && obj === obj.window)
}

module.exports = isWindow


/***/ }),

/***/ "7839":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "789e":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberDecimal = __webpack_require__("6223")
var toNumberString = __webpack_require__("416f")
var toNumber = __webpack_require__("34e4")

/**
 * 乘法运算
 *
 * @param { Number } num1 数值1
 * @param { Number } num2 数值2
 * @return {Number}
 */
function multiply (num1, num2) {
  var multiplier = toNumber(num1)
  var multiplicand = toNumber(num2)
  var str1 = toNumberString(multiplier)
  var str2 = toNumberString(multiplicand)
  return parseInt(str1.replace('.', '')) * parseInt(str2.replace('.', '')) / Math.pow(10, helperNumberDecimal(str1) + helperNumberDecimal(str2))
}

module.exports = multiply


/***/ }),

/***/ "7ab1":
/***/ (function(module, exports, __webpack_require__) {

var staticStrUndefined = __webpack_require__("39bc")

var helperCreateInTypeof = __webpack_require__("ca22")

/**
  * 判断是否Undefined
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isUndefined = helperCreateInTypeof(staticStrUndefined)

module.exports = isUndefined


/***/ }),

/***/ "7b0b":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7b36":
/***/ (function(module, exports) {

function lastArrayEach (obj, iterate, context) {
  for (var len = obj.length - 1; len >= 0; len--) {
    iterate.call(context, obj[len], len, obj)
  }
}

module.exports = lastArrayEach


/***/ }),

/***/ "7bf6":
/***/ (function(module, exports, __webpack_require__) {

var map = __webpack_require__("e3c3")
var property = __webpack_require__("f42e")

/**
  * 获取数组对象中某属性值，返回一个数组
  *
  * @param {Array} array 数组
  * @param {String} key 属性值
  * @return {Array}
  */
function pluck (obj, key) {
  return map(obj, property(key))
}

module.exports = pluck


/***/ }),

/***/ "7c73":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var defineProperties = __webpack_require__("37e8");
var enumBugKeys = __webpack_require__("7839");
var hiddenKeys = __webpack_require__("d012");
var html = __webpack_require__("1be4");
var documentCreateElement = __webpack_require__("cc12");
var sharedKey = __webpack_require__("f772");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "7ce4":
/***/ (function(module, exports, __webpack_require__) {

var staticDocument = __webpack_require__("e681")

/**
  * 判断是否Document对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
function isDocument (obj) {
  return !!(obj && staticDocument && obj.nodeType === 9)
}

module.exports = isDocument


/***/ }),

/***/ "7d58":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberDecimal = __webpack_require__("6223")
var toNumberString = __webpack_require__("416f")
var multiply = __webpack_require__("789e")

function helperNumberDivide (divisor, dividend) {
  var str1 = toNumberString(divisor)
  var str2 = toNumberString(dividend)
  var divisorDecimal = helperNumberDecimal(str1)
  var dividendDecimal = helperNumberDecimal(str2)
  var powY = dividendDecimal - divisorDecimal
  var isMinus = powY < 0
  var multiplicand = Math.pow(10, isMinus ? Math.abs(powY) : powY)
  return multiply(str1.replace('.', '') / str2.replace('.', ''), isMinus ? 1 / multiplicand : multiplicand)
}

module.exports = helperNumberDivide


/***/ }),

/***/ "7db0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $find = __webpack_require__("b727").find;
var addToUnscopables = __webpack_require__("44d2");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var FIND = 'find';
var SKIPS_HOLES = true;

var USES_TO_LENGTH = arrayMethodUsesToLength(FIND);

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);


/***/ }),

/***/ "7dd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createIteratorConstructor = __webpack_require__("9ed3");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var setToStringTag = __webpack_require__("d44e");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");
var Iterators = __webpack_require__("3f8c");
var IteratorsCore = __webpack_require__("ae93");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "7e07":
/***/ (function(module, exports, __webpack_require__) {

var isString = __webpack_require__("b7c3")
var isNumber = __webpack_require__("366b")

/**
  * 判断是否Element对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
function isElement (obj) {
  return !!(obj && isString(obj.nodeName) && isNumber(obj.nodeType))
}

module.exports = isElement


/***/ }),

/***/ "7f34":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")

/**
  * 去除字符串右边的空格
  *
  * @param {String} str 字符串
  * @return {String}
  */
function trimRight (str) {
  return str && str.trimRight ? str.trimRight() : toValString(str).replace(/[\s\uFEFF\xA0]+$/g, '')
}

module.exports = trimRight


/***/ }),

/***/ "7f67":
/***/ (function(module, exports) {

var staticEncodeURIComponent = encodeURIComponent

module.exports = staticEncodeURIComponent


/***/ }),

/***/ "7f9a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var inspectSource = __webpack_require__("8925");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "7fd6":
/***/ (function(module, exports) {

module.exports = require("xe-utils/ctor");

/***/ }),

/***/ "80c6":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateTreeFunc = __webpack_require__("eae2")
var each = __webpack_require__("9a21")

function eachTreeItem (parent, obj, iterate, context, path, node, parseChildren, opts) {
  var paths, nodes
  each(obj, function (item, index) {
    paths = path.concat(['' + index])
    nodes = node.concat([item])
    iterate.call(context, item, index, obj, paths, parent, nodes)
    if (item && parseChildren) {
      paths.push(parseChildren)
      eachTreeItem(item, item[parseChildren], iterate, context, paths, nodes, parseChildren, opts)
    }
  })
}

/**
  * 从树结构中遍历数据的键、值、路径
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调
  * @param {Object} options {children: 'children', mapChildren: 'children}
  * @param {Object} context 上下文
  */
var eachTree = helperCreateTreeFunc(eachTreeItem)

module.exports = eachTree


/***/ }),

/***/ "81c7":
/***/ (function(module, exports, __webpack_require__) {

var values = __webpack_require__("35f1")
var each = __webpack_require__("9a21")

/**
 * 根据键数组、值数组对转换为对象
 *
 * @param {Array} props 键数组
 * @param {Number} arr 值数组
 * @return {Object}
 */
function zipObject (props, arr) {
  var result = {}
  arr = arr || []
  each(values(props), function (val, key) {
    result[val] = arr[key]
  })
  return result
}

module.exports = zipObject


/***/ }),

/***/ "825a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "8418":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("c04e");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "857a":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

var quot = /"/g;

// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
// https://tc39.github.io/ecma262/#sec-createhtml
module.exports = function (string, tag, attribute, value) {
  var S = String(requireObjectCoercible(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};


/***/ }),

/***/ "861d":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "87de":
/***/ (function(module, exports, __webpack_require__) {

var helperGetDateFullYear = __webpack_require__("9735")
var helperGetDateMonth = __webpack_require__("674e")

function helperGetYMD (date) {
  return new Date(helperGetDateFullYear(date), helperGetDateMonth(date), date.getDate())
}

module.exports = helperGetYMD


/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "88e3":
/***/ (function(module, exports, __webpack_require__) {

var values = __webpack_require__("35f1")

/**
  * 获取对象最后一个值
  *
  * @param {Object} obj 对象/数组
  * @return {Object}
  */
function last (obj) {
  var list = values(obj)
  return list[list.length - 1]
}

module.exports = last


/***/ }),

/***/ "8925":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("c6cd");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "8966":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var hasOwnProp = __webpack_require__("9de7")

/**
  * 已废弃，被 some, every 替换
  * @deprecated
  */
function forOf (obj, iterate, context) {
  if (obj) {
    if (isArray(obj)) {
      for (var index = 0, len = obj.length; index < len; index++) {
        if (iterate.call(context, obj[index], index, obj) === false) {
          break
        }
      }
    } else {
      for (var key in obj) {
        if (hasOwnProp(obj, key)) {
          if (iterate.call(context, obj[key], key, obj) === false) {
            break
          }
        }
      }
    }
  }
}

module.exports = forOf


/***/ }),

/***/ "8aa5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "8b91":
/***/ (function(module, exports) {

var staticEscapeMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#x27;',
  '`': '&#x60;'
}

module.exports = staticEscapeMap


/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),

/***/ "8eb3":
/***/ (function(module, exports) {

function helperStringLowerCase (str) {
  return str.toLowerCase()
}

module.exports = helperStringLowerCase


/***/ }),

/***/ "9051":
/***/ (function(module, exports, __webpack_require__) {

var isNull = __webpack_require__("f108")
var isUndefined = __webpack_require__("7ab1")

/**
 * 判断是否 undefined 和 null
 * @param {Object} obj 对象
 * @return {Boolean}
 */
function eqNull (obj) {
  return isNull(obj) || isUndefined(obj)
}

module.exports = eqNull


/***/ }),

/***/ "90e3":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "9112":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "9263":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpFlags = __webpack_require__("ad6d");
var stickyHelpers = __webpack_require__("9f7f");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = regexpFlags.call(re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = flags.replace('y', '');
      if (flags.indexOf('g') === -1) {
        flags += 'g';
      }

      strCopy = String(str).slice(re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = match.input.slice(charsAdded);
        match[0] = match[0].slice(charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "94ca":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "955b":
/***/ (function(module, exports) {

function arrayLastIndexOf (list, val) {
  if (list.lastIndexOf) {
    return list.lastIndexOf(val)
  }
  for (var len = list.length - 1; len >= 0; len--) {
    if (val === list[len]) {
      return len
    }
  }
  return -1
}

module.exports = arrayLastIndexOf


/***/ }),

/***/ "9735":
/***/ (function(module, exports) {

function helperGetDateFullYear (date) {
  return date.getFullYear()
}

module.exports = helperGetDateFullYear


/***/ }),

/***/ "9759":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberDecimal = __webpack_require__("6223")
var toNumberString = __webpack_require__("416f")
var toNumber = __webpack_require__("34e4")
var toFixed = __webpack_require__("092a")

/**
 * 减法运算
 *
 * @param { Number } num1 被减数
 * @param { Number } num2 减数
 * @return {Number}
 */
function subtract (num1, num2) {
  var subtrahend = toNumber(num1)
  var minuend = toNumber(num2)
  var str1 = toNumberString(subtrahend)
  var str2 = toNumberString(minuend)
  var digit1 = helperNumberDecimal(str1)
  var digit2 = helperNumberDecimal(str2)
  var ratio = Math.pow(10, Math.max(digit1, digit2))
  var precision = (digit1 >= digit2) ? digit1 : digit2
  return parseFloat(toFixed((subtrahend * ratio - minuend * ratio) / ratio, precision))
}

module.exports = subtract


/***/ }),

/***/ "9855":
/***/ (function(module, exports, __webpack_require__) {

var helperEqualCompare = __webpack_require__("3fc4")
var helperDefaultCompare = __webpack_require__("2c94")

var isFunction = __webpack_require__("b484")
var isUndefined = __webpack_require__("7ab1")

/**
 * 深度比较两个对象之间的值是否相等，使用自定义比较函数
 *
 * @param {Object} obj1 值1
 * @param {Object} obj2 值2
 * @param {Function} func 自定义函数
 * @return {Boolean}
 */
function isEqualWith (obj1, obj2, func) {
  if (isFunction(func)) {
    return helperEqualCompare(obj1, obj2, function (v1, v2, key, obj1, obj2) {
      var result = func(v1, v2, key, obj1, obj2)
      return isUndefined(result) ? helperDefaultCompare(v1, v2) : !!result
    }, func)
  }
  return helperEqualCompare(obj1, obj2, helperDefaultCompare)
}

module.exports = isEqualWith


/***/ }),

/***/ "9861":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__("e260");
var $ = __webpack_require__("23e7");
var getBuiltIn = __webpack_require__("d066");
var USE_NATIVE_URL = __webpack_require__("0d3b");
var redefine = __webpack_require__("6eeb");
var redefineAll = __webpack_require__("e2cc");
var setToStringTag = __webpack_require__("d44e");
var createIteratorConstructor = __webpack_require__("9ed3");
var InternalStateModule = __webpack_require__("69f3");
var anInstance = __webpack_require__("19aa");
var hasOwn = __webpack_require__("5135");
var bind = __webpack_require__("0366");
var classof = __webpack_require__("f5df");
var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var getIterator = __webpack_require__("9a1f");
var getIteratorMethod = __webpack_require__("35a1");
var wellKnownSymbol = __webpack_require__("b622");

var $fetch = getBuiltIn('fetch');
var Headers = getBuiltIn('Headers');
var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState = InternalStateModule.set;
var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);

var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function (bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function (sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function (it) {
  var result = it.replace(plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = result.replace(percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};

var find = /[!'()~]|%20/g;

var replace = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function (match) {
  return replace[match];
};

var serialize = function (it) {
  return encodeURIComponent(it).replace(find, replacer);
};

var parseSearchParams = function (result, query) {
  if (query) {
    var attributes = query.split('&');
    var index = 0;
    var attribute, entry;
    while (index < attributes.length) {
      attribute = attributes[index++];
      if (attribute.length) {
        entry = attribute.split('=');
        result.push({
          key: deserialize(entry.shift()),
          value: deserialize(entry.join('='))
        });
      }
    }
  }
};

var updateSearchParams = function (query) {
  this.entries.length = 0;
  parseSearchParams(this.entries, query);
};

var validateArgumentsLength = function (passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
};

var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
});

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  var that = this;
  var entries = [];
  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;

  setInternalState(that, {
    type: URL_SEARCH_PARAMS,
    entries: entries,
    updateURL: function () { /* empty */ },
    updateSearchParams: updateSearchParams
  });

  if (init !== undefined) {
    if (isObject(init)) {
      iteratorMethod = getIteratorMethod(init);
      if (typeof iteratorMethod === 'function') {
        iterator = iteratorMethod.call(init);
        next = iterator.next;
        while (!(step = next.call(iterator)).done) {
          entryIterator = getIterator(anObject(step.value));
          entryNext = entryIterator.next;
          if (
            (first = entryNext.call(entryIterator)).done ||
            (second = entryNext.call(entryIterator)).done ||
            !entryNext.call(entryIterator).done
          ) throw TypeError('Expected sequence with length 2');
          entries.push({ key: first.value + '', value: second.value + '' });
        }
      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });
    } else {
      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');
    }
  }
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

redefineAll(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    state.entries.push({ key: name + '', value: value + '' });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = name + '';
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) entries.splice(index, 1);
      else index++;
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) result.push(entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = name + '';
    var val = value + '';
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) entries.splice(index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) entries.push({ key: key, value: val });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    var entries = state.entries;
    // Array#sort is not stable in some engines
    var slice = entries.slice();
    var entry, entriesIndex, sliceIndex;
    entries.length = 0;
    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {
      entry = slice[sliceIndex];
      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {
        if (entries[entriesIndex].key > entry.key) {
          entries.splice(entriesIndex, 0, entry);
          break;
        }
      }
      if (entriesIndex === sliceIndex) entries.push(entry);
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
redefine(URLSearchParamsPrototype, 'toString', function toString() {
  var entries = getInternalParamsState(this).entries;
  var result = [];
  var index = 0;
  var entry;
  while (index < entries.length) {
    entry = entries[index++];
    result.push(serialize(entry.key) + '=' + serialize(entry.value));
  } return result.join('&');
}, { enumerable: true });

setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

$({ global: true, forced: !USE_NATIVE_URL }, {
  URLSearchParams: URLSearchParamsConstructor
});

// Wrap `fetch` for correct work with polyfilled `URLSearchParams`
// https://github.com/zloirock/core-js/issues/674
if (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {
  $({ global: true, enumerable: true, forced: true }, {
    fetch: function fetch(input /* , init */) {
      var args = [input];
      var init, body, headers;
      if (arguments.length > 1) {
        init = arguments[1];
        if (isObject(init)) {
          body = init.body;
          if (classof(body) === URL_SEARCH_PARAMS) {
            headers = init.headers ? new Headers(init.headers) : new Headers();
            if (!headers.has('content-type')) {
              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
            }
            init = create(init, {
              body: createPropertyDescriptor(0, String(body)),
              headers: createPropertyDescriptor(0, headers)
            });
          }
        }
        args.push(init);
      } return $fetch.apply(this, args);
    }
  });
}

module.exports = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};


/***/ }),

/***/ "99af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var arraySpeciesCreate = __webpack_require__("65f0");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "9a0c":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/zloirock/core-js/issues/280
var userAgent = __webpack_require__("342f");

// eslint-disable-next-line unicorn/no-unsafe-regex
module.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);


/***/ }),

/***/ "9a1f":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var getIteratorMethod = __webpack_require__("35a1");

module.exports = function (it) {
  var iteratorMethod = getIteratorMethod(it);
  if (typeof iteratorMethod != 'function') {
    throw TypeError(String(it) + ' is not iterable');
  } return anObject(iteratorMethod.call(it));
};


/***/ }),

/***/ "9a21":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var arrayEach = __webpack_require__("25b3")
var objectEach = __webpack_require__("0b17")

/**
  * 迭代器
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
function each (obj, iterate, context) {
  if (obj) {
    return (isArray(obj) ? arrayEach : objectEach)(obj, iterate, context)
  }
  return obj
}

module.exports = each


/***/ }),

/***/ "9a87":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberDivide = __webpack_require__("7d58")
var toNumber = __webpack_require__("34e4")

/**
 * 除法运算
 *
 * @param { Number } num1 数值1
 * @param { Number } num2 数值2
 * @return {Number}
 */
function divide (num1, num2) {
  return helperNumberDivide(toNumber(num1), toNumber(num2))
}

module.exports = divide


/***/ }),

/***/ "9b19":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateiterateIndexOf = __webpack_require__("3d9d")

/**
  * 从最后开始的索引值,返回对象第一个索引值
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
var findLastIndexOf = helperCreateiterateIndexOf(function (obj, iterate, context) {
  for (var len = obj.length - 1; len >= 0; len--) {
    if (iterate.call(context, obj[len], len, obj)) {
      return len
    }
  }
  return -1
})

module.exports = findLastIndexOf


/***/ }),

/***/ "9b2c":
/***/ (function(module, exports) {

function helperGetHGSKeys (property) {
  // 以最快的方式判断数组，可忽略准确性
  return property ? (property.splice && property.join ? property : ('' + property).split('.')) : []
}

module.exports = helperGetHGSKeys


/***/ }),

/***/ "9bdd":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var iteratorClose = __webpack_require__("2a62");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    iteratorClose(iterator);
    throw error;
  }
};


/***/ }),

/***/ "9bf2":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");
var anObject = __webpack_require__("825a");
var toPrimitive = __webpack_require__("c04e");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9de7":
/***/ (function(module, exports) {

/**
  * 判断对象自身属性中是否具有指定的属性
  *
  * @param {Object} obj 对象
  * @param {String/Number} key 键值
  * @return {Boolean}
  */
function hasOwnProp (obj, key) {
  return obj && obj.hasOwnProperty ? obj.hasOwnProperty(key) : false
}

module.exports = hasOwnProp


/***/ }),

/***/ "9ed3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("ae93").IteratorPrototype;
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var setToStringTag = __webpack_require__("d44e");
var Iterators = __webpack_require__("3f8c");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "9f7f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__("d039");

// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function RE(s, f) {
  return RegExp(s, f);
}

exports.UNSUPPORTED_Y = fails(function () {
  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
  var re = RE('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

exports.BROKEN_CARET = fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = RE('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});


/***/ }),

/***/ "9fe0":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")

var isUndefined = __webpack_require__("7ab1")

var helperStringRepeat = __webpack_require__("c718")

/**
  * 用指定字符从前面开始补全字符串
  *
  * @param {String} str 字符串
  * @param {Number} targetLength 结果长度
  * @param {Number} padString 补全字符
  * @return {String}
  */
function padStart (str, targetLength, padString) {
  var rest = toValString(str)
  targetLength = targetLength >> 0
  padString = isUndefined(padString) ? ' ' : '' + padString
  if (rest.padStart) {
    return rest.padStart(targetLength, padString)
  }
  if (targetLength > rest.length) {
    targetLength -= rest.length
    if (targetLength > padString.length) {
      padString += helperStringRepeat(padString, targetLength / padString.length)
    }
    return padString.slice(0, targetLength) + rest
  }
  return rest
}

module.exports = padStart


/***/ }),

/***/ "a0a1":
/***/ (function(module, exports, __webpack_require__) {

var staticWeekTime = __webpack_require__("fd89")
var staticStrFirst = __webpack_require__("b39a")

var helperGetYMDTime = __webpack_require__("6628")

var getWhatMonth = __webpack_require__("012c")
var toStringDate = __webpack_require__("fedd")
var getWhatWeek = __webpack_require__("1dd9")

var isValidDate = __webpack_require__("27ad")

/**
  * 返回某个月的第几周
  *
  * @param {Date} date 日期或数字
  * @return {Number}
  */
function getMonthWeek (date) {
  var monthFirst, monthFirstWeek
  var currentDate = toStringDate(date)
  if (isValidDate(currentDate)) {
    monthFirst = getWhatMonth(currentDate, 0, staticStrFirst)
    monthFirstWeek = getWhatWeek(monthFirst, 0, 1)
    if (monthFirstWeek < monthFirst) {
      monthFirstWeek = getWhatWeek(monthFirst, 1, 1)
    }
    if (currentDate >= monthFirstWeek) {
      return Math.floor((helperGetYMDTime(currentDate) - helperGetYMDTime(monthFirstWeek)) / staticWeekTime) + 1
    }
    return getMonthWeek(getWhatWeek(currentDate, 0, 1))
  }
  return NaN
}

module.exports = getMonthWeek


/***/ }),

/***/ "a15b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IndexedObject = __webpack_require__("44ad");
var toIndexedObject = __webpack_require__("fc6a");
var arrayMethodIsStrict = __webpack_require__("a640");

var nativeJoin = [].join;

var ES3_STRINGS = IndexedObject != Object;
var STRICT_METHOD = arrayMethodIsStrict('join', ',');

// `Array.prototype.join` method
// https://tc39.github.io/ecma262/#sec-array.prototype.join
$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
  join: function join(separator) {
    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "a16a":
/***/ (function(module, exports) {

function arrayIndexOf (list, val) {
  if (list.indexOf) {
    return list.indexOf(val)
  }
  for (var index = 0, len = list.length; index < len; index++) {
    if (val === list[index]) {
      return index
    }
  }
}

module.exports = arrayIndexOf


/***/ }),

/***/ "a434":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var toAbsoluteIndex = __webpack_require__("23cb");
var toInteger = __webpack_require__("a691");
var toLength = __webpack_require__("50c4");
var toObject = __webpack_require__("7b0b");
var arraySpeciesCreate = __webpack_require__("65f0");
var createProperty = __webpack_require__("8418");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');
var USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });

var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "a44c":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInInObjectString = __webpack_require__("349b")

/**
  * 判断是否数组
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isArray = Array.isArray || helperCreateInInObjectString('Array')

module.exports = isArray


/***/ }),

/***/ "a4d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var IS_PURE = __webpack_require__("c430");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var createPropertyDescriptor = __webpack_require__("5c6c");
var nativeObjectCreate = __webpack_require__("7c73");
var objectKeys = __webpack_require__("df75");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertyNamesExternal = __webpack_require__("057f");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var shared = __webpack_require__("5692");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");
var uid = __webpack_require__("90e3");
var wellKnownSymbol = __webpack_require__("b622");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineWellKnownSymbol = __webpack_require__("746f");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");
var $forEach = __webpack_require__("b727").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "a5ed":
/***/ (function(module, exports) {

function helperStringSubstring (str, start, end) {
  return str.substring(start, end)
}

module.exports = helperStringSubstring


/***/ }),

/***/ "a623":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $every = __webpack_require__("b727").every;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('every');
var USES_TO_LENGTH = arrayMethodUsesToLength('every');

// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "a630":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var from = __webpack_require__("4df4");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "a640":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "a691":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "a695":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateMathNumber = __webpack_require__("3cd7")

/**
 * 将数值向下舍入
 *
 * @param {string|number} num 数值
 * @param {number} digits 小数保留位数
 * @return {number}
 */
var floor = helperCreateMathNumber('floor')

module.exports = floor


/***/ }),

/***/ "a719":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("a44c")
var hasOwnProp = __webpack_require__("9de7")

function helperCreateIndexOf (name, callback) {
  return function (obj, val) {
    if (obj) {
      if (typeof obj === 'string' || isArray(obj)) {
        if (obj[name]) {
          return obj[name](val)
        }
        return callback(obj, val)
      }
      for (var key in obj) {
        if (hasOwnProp(obj, key)) {
          if (val === obj[key]) {
            return key
          }
        }
      }
    }
    return -1
  }
}

module.exports = helperCreateIndexOf


/***/ }),

/***/ "a87c":
/***/ (function(module, exports, __webpack_require__) {

var staticLocation = __webpack_require__("dce7")

var unserialize = __webpack_require__("b6c5")

var helperGetLocatOrigin = __webpack_require__("35c4")

function parseURLQuery (uri) {
  return unserialize(uri.split('?')[1] || '')
}

function parseUrl (url) {
  var hashs, portText, searchs, parsed
  var href = '' + url
  if (href.indexOf('//') === 0) {
    href = (staticLocation ? staticLocation.protocol : '') + href
  } else if (href.indexOf('/') === 0) {
    href = helperGetLocatOrigin() + href
  }
  searchs = href.replace(/#.*/, '').match(/(\?.*)/)
  parsed = {
    href: href,
    hash: '',
    host: '',
    hostname: '',
    protocol: '',
    port: '',
    search: searchs && searchs[1] && searchs[1].length > 1 ? searchs[1] : ''
  }
  parsed.path = href.replace(/^([a-z0-9.+-]*:)\/\//, function (text, protocol) {
    parsed.protocol = protocol
    return ''
  }).replace(/^([a-z0-9.+-]*)(:\d+)?\/?/, function (text, hostname, port) {
    portText = port || ''
    parsed.port = portText.replace(':', '')
    parsed.hostname = hostname
    parsed.host = hostname + portText
    return '/'
  }).replace(/(#.*)/, function (text, hash) {
    parsed.hash = hash.length > 1 ? hash : ''
    return ''
  })
  hashs = parsed.hash.match(/#((.*)\?|(.*))/)
  parsed.pathname = parsed.path.replace(/(\?|#.*).*/, '')
  parsed.origin = parsed.protocol + '//' + parsed.host
  parsed.hashKey = hashs ? (hashs[2] || hashs[1] || '') : ''
  parsed.hashQuery = parseURLQuery(parsed.hash)
  parsed.searchQuery = parseURLQuery(parsed.search)
  return parsed
}

module.exports = parseUrl


/***/ }),

/***/ "a8c4":
/***/ (function(module, exports, __webpack_require__) {

var helperGetDateTime = __webpack_require__("3ae2")
var helperNewDate = __webpack_require__("4955")

/**
 * 返回当前时间戳
 *
 * @returns Number
 */
var now = Date.now || function () {
  return helperGetDateTime(helperNewDate())
}

module.exports = now


/***/ }),

/***/ "a98b":
/***/ (function(module, exports) {

/**
  * 获取一个全局唯一标识
  *
  * @param {String} prefix 前缀
  * @return {Number}
  */
var __uniqueId = 0
function uniqueId (prefix) {
  return [prefix, ++__uniqueId].join('')
}

module.exports = uniqueId


/***/ }),

/***/ "a9ca":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable valid-typeof */
var staticStrUndefined = __webpack_require__("39bc")

/**
  * 判断是否Map对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
 */
var supportMap = typeof Map !== staticStrUndefined
function isMap (obj) {
  return supportMap && obj instanceof Map
}

module.exports = isMap


/***/ }),

/***/ "a9e3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var has = __webpack_require__("5135");
var classof = __webpack_require__("c6b6");
var inheritIfRequired = __webpack_require__("7156");
var toPrimitive = __webpack_require__("c04e");
var fails = __webpack_require__("d039");
var create = __webpack_require__("7c73");
var getOwnPropertyNames = __webpack_require__("241c").f;
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var defineProperty = __webpack_require__("9bf2").f;
var trim = __webpack_require__("58a8").trim;

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;

// `ToNumber` abstract operation
// https://tc39.github.io/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  var first, third, radix, maxCode, digits, length, index, code;
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = it.charCodeAt(0);
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = it.slice(2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = digits.charCodeAt(index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var dummy = this;
    return dummy instanceof NumberWrapper
      // check on 1..constructor(foo) case
      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)
        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);
  };
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "ab13":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "ac1f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var exec = __webpack_require__("9263");

$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "acd0":
/***/ (function(module, exports, __webpack_require__) {

var keys = __webpack_require__("6815")

var slice = __webpack_require__("3703")
var includes = __webpack_require__("20b3")
var arrayEach = __webpack_require__("25b3")

var assign = __webpack_require__("294d")

/**
  * 将一个或者多个对象值解构到目标对象
  *
  * @param {Object} destination 目标对象
  * @param {...Object}
  * @return {Boolean}
  */
function destructuring (destination, sources) {
  if (destination && sources) {
    var rest = assign.apply(this, [{}].concat(slice(arguments, 1)))
    var restKeys = keys(rest)
    arrayEach(keys(destination), function (key) {
      if (includes(restKeys, key)) {
        destination[key] = rest[key]
      }
    })
  }
  return destination
}

module.exports = destructuring


/***/ }),

/***/ "ad4e":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var staticStrUndefined = __webpack_require__("39bc")
var staticDocument = __webpack_require__("e681")
var staticWindow = __webpack_require__("6163")

var assign = __webpack_require__("294d")
var arrayEach = __webpack_require__("25b3")

/* eslint-disable valid-typeof */
function isBrowseStorage (storage) {
  try {
    var testKey = '__xe_t'
    storage.setItem(testKey, 1)
    storage.removeItem(testKey)
    return true
  } catch (e) {
    return false
  }
}

function isBrowseType (type) {
  return navigator.userAgent.indexOf(type) > -1
}

/**
  * 获取浏览器内核
  * @return Object
  */
function browse () {
  var $body, isChrome, isEdge
  var isMobile = false
  var result = {
    isNode: false,
    isMobile: isMobile,
    isPC: false,
    isDoc: !!staticDocument
  }
  if (!staticWindow && typeof process !== staticStrUndefined) {
    result.isNode = true
  } else {
    isEdge = isBrowseType('Edge')
    isChrome = isBrowseType('Chrome')
    isMobile = /(Android|webOS|iPhone|iPad|iPod|SymbianOS|BlackBerry|Windows Phone)/.test(navigator.userAgent)
    if (result.isDoc) {
      $body = staticDocument.body || staticDocument.documentElement
      arrayEach(['webkit', 'khtml', 'moz', 'ms', 'o'], function (core) {
        result['-' + core] = !!$body[core + 'MatchesSelector']
      })
    }
    assign(result, {
      edge: isEdge,
      firefox: isBrowseType('Firefox'),
      msie: !isEdge && result['-ms'],
      safari: !isChrome && !isEdge && isBrowseType('Safari'),
      isMobile: isMobile,
      isPC: !isMobile,
      isLocalStorage: isBrowseStorage(staticWindow.localStorage),
      isSessionStorage: isBrowseStorage(staticWindow.sessionStorage)
    })
  }
  return result
}

module.exports = browse

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "ad54":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable valid-typeof */
var staticStrUndefined = __webpack_require__("39bc")

/**
  * 判断是否Symbol对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var supportSymbol = typeof Symbol !== staticStrUndefined
function isSymbol (obj) {
  return supportSymbol && Symbol.isSymbol ? Symbol.isSymbol(obj) : (typeof obj === 'symbol')
}

module.exports = isSymbol


/***/ }),

/***/ "ad6d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__("825a");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "ae40":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");

var defineProperty = Object.defineProperty;
var cache = {};

var thrower = function (it) { throw it; };

module.exports = function (METHOD_NAME, options) {
  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
  if (!options) options = {};
  var method = [][METHOD_NAME];
  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
  var argument0 = has(options, 0) ? options[0] : thrower;
  var argument1 = has(options, 1) ? options[1] : undefined;

  return cache[METHOD_NAME] = !!method && !fails(function () {
    if (ACCESSORS && !DESCRIPTORS) return true;
    var O = { length: -1 };

    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });
    else O[1] = 1;

    method.call(O, argument0, argument1);
  });
};


/***/ }),

/***/ "ae93":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__("e163");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "aeaf":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateIterateHandle = __webpack_require__("4730")

/**
  * 查找匹配第一条数据的键
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Object}
  */
var findKey = helperCreateIterateHandle('', 0, 2, true)

module.exports = findKey


/***/ }),

/***/ "aeb9":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateIndexOf = __webpack_require__("a719")

var arrayLastIndexOf = __webpack_require__("955b")

/**
  * 从最后开始的索引值,返回对象第一个索引值
  *
  * @param {Object} array 对象
  * @param {Object} val 值
  * @return {Number}
  */
var lastIndexOf = helperCreateIndexOf('lastIndexOf', arrayLastIndexOf)

module.exports = lastIndexOf


/***/ }),

/***/ "af03":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// check the existence of a method, lowercase
// of a tag and escaping quotes in arguments
module.exports = function (METHOD_NAME) {
  return fails(function () {
    var test = ''[METHOD_NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  });
};


/***/ }),

/***/ "b000":
/***/ (function(module, exports, __webpack_require__) {

var random = __webpack_require__("f8cd")

var values = __webpack_require__("35f1")

/**
  * 将一个数组随机打乱，返回一个新的数组
  *
  * @param {Array} array 数组
  * @return {Array}
  */
function shuffle (array) {
  var index
  var result = []
  var list = values(array)
  var len = list.length - 1
  for (; len >= 0; len--) {
    index = len > 0 ? random(0, len) : 0
    result.push(list[index])
    list.splice(index, 1)
  }
  return result
}

module.exports = shuffle


/***/ }),

/***/ "b041":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classof = __webpack_require__("f5df");

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "b0c0":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var defineProperty = __webpack_require__("9bf2").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "b267":
/***/ (function(module, exports, __webpack_require__) {

var isDate = __webpack_require__("6deb")
var toStringDate = __webpack_require__("fedd")

var helperNewDate = __webpack_require__("4955")

/**
  * 判断是否闰年
  *
  * @param {Date} date 日期或数字
  * @return {Boolean}
  */
function isLeapYear (date) {
  var year
  var currentDate = date ? toStringDate(date) : helperNewDate()
  if (isDate(currentDate)) {
    year = currentDate.getFullYear()
    return (year % 4 === 0) && (year % 100 !== 0 || year % 400 === 0)
  }
  return false
}

module.exports = isLeapYear


/***/ }),

/***/ "b39a":
/***/ (function(module, exports) {

var staticStrFirst = 'first'

module.exports = staticStrFirst


/***/ }),

/***/ "b484":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInTypeof = __webpack_require__("ca22")

/**
  * 判断是否方法
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isFunction = helperCreateInTypeof('function')

module.exports = isFunction


/***/ }),

/***/ "b580":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable valid-typeof */
var staticStrUndefined = __webpack_require__("39bc")

/**
  * 判断是否WeakSet对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
 */
var supportWeakSet = typeof WeakSet !== staticStrUndefined
function isWeakSet (obj) {
  return supportWeakSet && obj instanceof WeakSet
}

module.exports = isWeakSet


/***/ }),

/***/ "b622":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var shared = __webpack_require__("5692");
var has = __webpack_require__("5135");
var uid = __webpack_require__("90e3");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "b64b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var toObject = __webpack_require__("7b0b");
var nativeKeys = __webpack_require__("df75");
var fails = __webpack_require__("d039");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "b680":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var toInteger = __webpack_require__("a691");
var thisNumberValue = __webpack_require__("408a");
var repeat = __webpack_require__("1148");
var fails = __webpack_require__("d039");

var nativeToFixed = 1.0.toFixed;
var floor = Math.floor;

var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

var FORCED = nativeToFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !fails(function () {
  // V8 ~ Android 4.3-
  nativeToFixed.call({});
});

// `Number.prototype.toFixed` method
// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed
$({ target: 'Number', proto: true, forced: FORCED }, {
  // eslint-disable-next-line max-statements
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue(this);
    var fractDigits = toInteger(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k;

    var multiply = function (n, c) {
      var index = -1;
      var c2 = c;
      while (++index < 6) {
        c2 += n * data[index];
        data[index] = c2 % 1e7;
        c2 = floor(c2 / 1e7);
      }
    };

    var divide = function (n) {
      var index = 6;
      var c = 0;
      while (--index >= 0) {
        c += data[index];
        data[index] = floor(c / n);
        c = (c % n) * 1e7;
      }
    };

    var dataToString = function () {
      var index = 6;
      var s = '';
      while (--index >= 0) {
        if (s !== '' || index === 0 || data[index] !== 0) {
          var t = String(data[index]);
          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;
        }
      } return s;
    };

    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare
    if (number != number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return String(number);
    if (number < 0) {
      sign = '-';
      number = -number;
    }
    if (number > 1e-21) {
      e = log(number * pow(2, 69, 1)) - 69;
      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = fractDigits;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        result = dataToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        result = dataToString() + repeat.call('0', fractDigits);
      }
    }
    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits
        ? '0.' + repeat.call('0', fractDigits - k) + result
        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));
    } else {
      result = sign + result;
    } return result;
  }
});


/***/ }),

/***/ "b6c5":
/***/ (function(module, exports, __webpack_require__) {

var staticDecodeURIComponent = __webpack_require__("4f91")

var arrayEach = __webpack_require__("25b3")

var isString = __webpack_require__("b7c3")

/**
 * 反序列化查询参数
 * @param {String} query 字符串
 */
function unserialize (str) {
  var items
  var result = {}
  if (str && isString(str)) {
    arrayEach(str.split('&'), function (param) {
      items = param.split('=')
      result[staticDecodeURIComponent(items[0])] = staticDecodeURIComponent(items[1] || '')
    })
  }
  return result
}

module.exports = unserialize


/***/ }),

/***/ "b6e3":
/***/ (function(module, exports, __webpack_require__) {

var toDateString = __webpack_require__("4054")

/**
 * 比较两个日期
 *
 * @param {Number/String/Date} date1 日期
 * @param {Number/String/Date} date2 日期
 * @param {String} format 对比格式
 */
function isDateSame (date1, date2, format) {
  if (date1 && date2) {
    date1 = toDateString(date1, format)
    return date1 !== 'Invalid Date' && date1 === toDateString(date2, format)
  }
  return false
}

module.exports = isDateSame


/***/ }),

/***/ "b727":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("0366");
var IndexedObject = __webpack_require__("44ad");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var arraySpeciesCreate = __webpack_require__("65f0");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6)
};


/***/ }),

/***/ "b76e":
/***/ (function(module, exports, __webpack_require__) {

var isEmpty = __webpack_require__("5d3a")
var isObject = __webpack_require__("de18")
var isFunction = __webpack_require__("b484")
var property = __webpack_require__("f42e")
var each = __webpack_require__("9a21")

function createiterateEmpty (iterate) {
  return function () {
    return isEmpty(iterate)
  }
}

/**
  * 集合分组,默认使用键值分组,如果有iterate则使用结果进行分组
  *
  * @param {Array} obj 对象
  * @param {Function} iterate 回调/对象属性
  * @param {Object} context 上下文
  * @return {Object}
  */
function groupBy (obj, iterate, context) {
  var groupKey
  var result = {}
  if (obj) {
    if (iterate && isObject(iterate)) {
      iterate = createiterateEmpty(iterate)
    } else if (!isFunction(iterate)) {
      iterate = property(iterate)
    }
    each(obj, function (val, key) {
      groupKey = iterate ? iterate.call(context, val, key, obj) : val
      if (result[groupKey]) {
        result[groupKey].push(val)
      } else {
        result[groupKey] = [val]
      }
    })
  }
  return result
}

module.exports = groupBy


/***/ }),

/***/ "b7c3":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInTypeof = __webpack_require__("ca22")

/**
  * 判断是否String对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isString = helperCreateInTypeof('string')

module.exports = isString


/***/ }),

/***/ "ba43":
/***/ (function(module, exports) {

/**
  * 序号列表生成函数
  *
  * @param {Number} start 起始值
  * @param {Number} stop 结束值
  * @param {Number} step 自增值
  * @return {Object}
  */
function range (start, stop, step) {
  var index, len
  var result = []
  var args = arguments
  if (args.length < 2) {
    stop = args[0]
    start = 0
  }
  index = start >> 0
  len = stop >> 0
  if (index < stop) {
    step = step >> 0 || 1
    for (; index < len; index += step) {
      result.push(index)
    }
  }
  return result
}

module.exports = range


/***/ }),

/***/ "baa5":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var lastIndexOf = __webpack_require__("e58c");

// `Array.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
$({ target: 'Array', proto: true, forced: lastIndexOf !== [].lastIndexOf }, {
  lastIndexOf: lastIndexOf
});


/***/ }),

/***/ "bacb":
/***/ (function(module, exports, __webpack_require__) {

var orderBy = __webpack_require__("6b35")

var sortBy = orderBy

module.exports = sortBy


/***/ }),

/***/ "bb2f":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "bdd6":
/***/ (function(module, exports, __webpack_require__) {

var uniq = __webpack_require__("1458")
var toArray = __webpack_require__("5d7e")

/**
  * 将多个数的值返回唯一的并集数组
  *
  * @param {...Array} 数组
  * @return {Array}
  */
function union () {
  var args = arguments
  var result = []
  var index = 0
  var len = args.length
  for (; index < len; index++) {
    result = result.concat(toArray(args[index]))
  }
  return uniq(result)
}

module.exports = union


/***/ }),

/***/ "be51":
/***/ (function(module, exports, __webpack_require__) {

var pluck = __webpack_require__("7bf6")

var max = __webpack_require__("1124")

/**
 * 与 zip 相反
 *
 * @param {Array} arrays 数组集合
 */
function unzip (arrays) {
  var index, maxItem, len
  var result = []
  if (arrays && arrays.length) {
    index = 0
    maxItem = max(arrays, function (item) {
      return item ? item.length : 0
    })
    for (len = maxItem ? maxItem.length : 0; index < len; index++) {
      result.push(pluck(arrays, index))
    }
  }
  return result
}

module.exports = unzip


/***/ }),

/***/ "bee9":
/***/ (function(module, exports, __webpack_require__) {

var eqNull = __webpack_require__("9051")
var isNumber = __webpack_require__("366b")
var toNumberString = __webpack_require__("416f")

function toValString (obj) {
  if (isNumber(obj)) {
    return toNumberString(obj)
  }
  return '' + (eqNull(obj) ? '' : obj)
}

module.exports = toValString


/***/ }),

/***/ "bfcd":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberAdd = __webpack_require__("fdc7")

var isFunction = __webpack_require__("b484")
var each = __webpack_require__("9a21")
var get = __webpack_require__("5b2d")

/**
  * 求和函数，将数值相加
  *
  * @param {Array} array 数组
  * @param {Function/String} iterate 方法或属性
  * @param {Object} context 上下文
  * @return {Number}
  */
function sum (array, iterate, context) {
  var result = 0
  each(array, iterate ? isFunction(iterate) ? function () {
    result = helperNumberAdd(result, iterate.apply(context, arguments))
  } : function (val) {
    result = helperNumberAdd(result, get(val, iterate))
  } : function (val) {
    result = helperNumberAdd(result, val)
  })
  return result
}

module.exports = sum


/***/ }),

/***/ "c04e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "c194":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInInObjectString = __webpack_require__("349b")

/**
  * 判断是否Arguments对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isArguments = helperCreateInInObjectString('Arguments')

module.exports = isArguments


/***/ }),

/***/ "c221":
/***/ (function(module, exports, __webpack_require__) {

var helperDeleteProperty = __webpack_require__("452e")

var isPlainObject = __webpack_require__("656f")
var isObject = __webpack_require__("de18")
var isArray = __webpack_require__("a44c")
var isNull = __webpack_require__("f108")
var assign = __webpack_require__("294d")
var objectEach = __webpack_require__("0b17")

/**
  * 清空对象
  *
  * @param {Object} obj 对象
  * @param {*} defs 默认值,如果不传（清空所有属性）、如果传对象（清空并继承)、如果传值(给所有赋值)
  * @param {Object/Array} assigns 默认值
  * @return {Object}
  */
function clear (obj, defs, assigns) {
  if (obj) {
    var len
    var isDefs = arguments.length > 1 && (isNull(defs) || !isObject(defs))
    var extds = isDefs ? assigns : defs
    if (isPlainObject(obj)) {
      objectEach(obj, isDefs ? function (val, key) {
        obj[key] = defs
      } : function (val, key) {
        helperDeleteProperty(obj, key)
      })
      if (extds) {
        assign(obj, extds)
      }
    } else if (isArray(obj)) {
      if (isDefs) {
        len = obj.length
        while (len > 0) {
          len--
          obj[len] = defs
        }
      } else {
        obj.length = 0
      }
      if (extds) {
        obj.push.apply(obj, extds)
      }
    }
  }
  return obj
}

module.exports = clear


/***/ }),

/***/ "c430":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "c695":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// 核心
var XEUtils = __webpack_require__("d3f7")

// 对象相关的方法
var assign = __webpack_require__("294d")
var objectEach = __webpack_require__("0b17")
var lastObjectEach = __webpack_require__("5b18")
var objectMap = __webpack_require__("1108")
var merge = __webpack_require__("69b8")

// 数组相关的方法
var map = __webpack_require__("e3c3")
var some = __webpack_require__("de51")
var every = __webpack_require__("d46f")
var includeArrays = __webpack_require__("4931")
var arrayEach = __webpack_require__("25b3")
var lastArrayEach = __webpack_require__("7b36")
var uniq = __webpack_require__("1458")
var union = __webpack_require__("bdd6")
var toArray = __webpack_require__("5d7e")
var sortBy = __webpack_require__("bacb")
var orderBy = __webpack_require__("6b35")
var shuffle = __webpack_require__("b000")
var sample = __webpack_require__("f4fe")
var slice = __webpack_require__("3703")
var filter = __webpack_require__("29b2")
var findKey = __webpack_require__("aeaf")
var includes = __webpack_require__("20b3")
var find = __webpack_require__("612b")
var findLast = __webpack_require__("6c69")
var reduce = __webpack_require__("3371")
var copyWithin = __webpack_require__("24a5")
var chunk = __webpack_require__("13da")
var zip = __webpack_require__("4ea2")
var unzip = __webpack_require__("be51")
var zipObject = __webpack_require__("81c7")
var flatten = __webpack_require__("6757")
var pluck = __webpack_require__("7bf6")
var invoke = __webpack_require__("4035")
var toArrayTree = __webpack_require__("5292")
var toTreeArray = __webpack_require__("1553")
var findTree = __webpack_require__("64be")
var eachTree = __webpack_require__("80c6")
var mapTree = __webpack_require__("42c3")
var filterTree = __webpack_require__("f4c2")
var searchTree = __webpack_require__("7508")
var arrayIndexOf = __webpack_require__("a16a")
var arrayLastIndexOf = __webpack_require__("955b")

// 基础方法
var hasOwnProp = __webpack_require__("9de7")
var isArray = __webpack_require__("a44c")
var isNull = __webpack_require__("f108")
var isNumberNaN = __webpack_require__("0065")
var isUndefined = __webpack_require__("7ab1")
var isFunction = __webpack_require__("b484")
var isObject = __webpack_require__("de18")
var isString = __webpack_require__("b7c3")
var isPlainObject = __webpack_require__("656f")
var isLeapYear = __webpack_require__("b267")
var isDate = __webpack_require__("6deb")
var eqNull = __webpack_require__("9051")
var each = __webpack_require__("9a21")
var forOf = __webpack_require__("8966")
var lastForOf = __webpack_require__("0e1c")
var indexOf = __webpack_require__("0b11")
var lastIndexOf = __webpack_require__("aeb9")
var keys = __webpack_require__("6815")
var values = __webpack_require__("35f1")
var clone = __webpack_require__("e643")
var getSize = __webpack_require__("35e1")
var lastEach = __webpack_require__("2742")
var remove = __webpack_require__("6528")
var clear = __webpack_require__("c221")
var isNumberFinite = __webpack_require__("4237")
var isFloat = __webpack_require__("0b43")
var isInteger = __webpack_require__("4396")
var isBoolean = __webpack_require__("5d32")
var isNumber = __webpack_require__("366b")
var isRegExp = __webpack_require__("ef6a")
var isError = __webpack_require__("59e7")
var isTypeError = __webpack_require__("cb44")
var isEmpty = __webpack_require__("5d3a")
var isSymbol = __webpack_require__("ad54")
var isArguments = __webpack_require__("c194")
var isElement = __webpack_require__("7e07")
var isDocument = __webpack_require__("7ce4")
var isWindow = __webpack_require__("77f9")
var isFormData = __webpack_require__("596e")
var isMap = __webpack_require__("a9ca")
var isWeakMap = __webpack_require__("33b5")
var isSet = __webpack_require__("4964")
var isWeakSet = __webpack_require__("b580")
var isMatch = __webpack_require__("6eda")
var isEqual = __webpack_require__("d6c5")
var isEqualWith = __webpack_require__("9855")
var getType = __webpack_require__("f8eb")
var uniqueId = __webpack_require__("a98b")
var findIndexOf = __webpack_require__("0c07")
var findLastIndexOf = __webpack_require__("9b19")
var toStringJSON = __webpack_require__("6fe2")
var toJSONString = __webpack_require__("05ea")
var entries = __webpack_require__("7273")
var pick = __webpack_require__("0a5b")
var omit = __webpack_require__("f469")
var first = __webpack_require__("f739")
var last = __webpack_require__("88e3")
var has = __webpack_require__("08a8")
var get = __webpack_require__("5b2d")
var set = __webpack_require__("04d4")
var groupBy = __webpack_require__("b76e")
var countBy = __webpack_require__("36c6")
var range = __webpack_require__("ba43")
var destructuring = __webpack_require__("acd0")

// 数值相关方法
var random = __webpack_require__("f8cd")
var max = __webpack_require__("1124")
var min = __webpack_require__("616c")
var commafy = __webpack_require__("349d")
var round = __webpack_require__("c9cd")
var ceil = __webpack_require__("f9f2")
var floor = __webpack_require__("a695")
var toFixed = __webpack_require__("092a")
var toInteger = __webpack_require__("068d")
var toNumber = __webpack_require__("34e4")
var toNumberString = __webpack_require__("416f")
var add = __webpack_require__("468d")
var subtract = __webpack_require__("9759")
var multiply = __webpack_require__("789e")
var divide = __webpack_require__("9a87")
var sum = __webpack_require__("bfcd")
var mean = __webpack_require__("1d46")

// 日期相关的方法
var getWhatYear = __webpack_require__("62e1")
var getWhatMonth = __webpack_require__("012c")
var getWhatDay = __webpack_require__("3a48")
var toStringDate = __webpack_require__("fedd")
var toDateString = __webpack_require__("4054")
var now = __webpack_require__("a8c4")
var timestamp = __webpack_require__("51ef")
var isValidDate = __webpack_require__("27ad")
var isDateSame = __webpack_require__("b6e3")
var getWhatWeek = __webpack_require__("1dd9")
var getYearDay = __webpack_require__("0946")
var getYearWeek = __webpack_require__("6175")
var getMonthWeek = __webpack_require__("a0a1")
var getDayOfYear = __webpack_require__("2ae6")
var getDayOfMonth = __webpack_require__("13ea")
var getDateDiff = __webpack_require__("f339")

// 字符串相关的方法
var padEnd = __webpack_require__("1b3c")
var padStart = __webpack_require__("9fe0")
var repeat = __webpack_require__("0119")
var trim = __webpack_require__("f33a")
var trimRight = __webpack_require__("7f34")
var trimLeft = __webpack_require__("f266")
var escape = __webpack_require__("d2b6")
var unescape = __webpack_require__("5e3a")
var camelCase = __webpack_require__("1abc")
var kebabCase = __webpack_require__("f54d")
var startsWith = __webpack_require__("24ac")
var endsWith = __webpack_require__("04bb")
var template = __webpack_require__("4cfc")
var toValString = __webpack_require__("bee9")

// 函数相关的方法
var noop = __webpack_require__("fe37")
var property = __webpack_require__("f42e")
var bind = __webpack_require__("c8de")
var once = __webpack_require__("6724")
var after = __webpack_require__("2242")
var before = __webpack_require__("258e")
var throttle = __webpack_require__("4f3d")
var debounce = __webpack_require__("e65b")
var delay = __webpack_require__("fca9")

// 地址相关的方法
var unserialize = __webpack_require__("b6c5")
var serialize = __webpack_require__("e503")
var parseUrl = __webpack_require__("a87c")

// 浏览器相关的方法
var getBaseURL = __webpack_require__("0ba0")
var locat = __webpack_require__("6c18")
var cookie = __webpack_require__("e8ca")
var browse = __webpack_require__("ad4e")

assign(XEUtils, {
  // object
  assign: assign,
  objectEach: objectEach,
  lastObjectEach: lastObjectEach,
  objectMap: objectMap,
  merge: merge,

  // array
  uniq: uniq,
  union: union,
  sortBy: sortBy,
  orderBy: orderBy,
  shuffle: shuffle,
  sample: sample,
  some: some,
  every: every,
  slice: slice,
  filter: filter,
  find: find,
  findLast: findLast,
  findKey: findKey,
  includes: includes,
  arrayIndexOf: arrayIndexOf,
  arrayLastIndexOf: arrayLastIndexOf,
  map: map,
  reduce: reduce,
  copyWithin: copyWithin,
  chunk: chunk,
  zip: zip,
  unzip: unzip,
  zipObject: zipObject,
  flatten: flatten,
  toArray: toArray,
  includeArrays: includeArrays,
  pluck: pluck,
  invoke: invoke,
  arrayEach: arrayEach,
  lastArrayEach: lastArrayEach,
  toArrayTree: toArrayTree,
  toTreeArray: toTreeArray,
  findTree: findTree,
  eachTree: eachTree,
  mapTree: mapTree,
  filterTree: filterTree,
  searchTree: searchTree,

  // base
  hasOwnProp: hasOwnProp,
  eqNull: eqNull,
  isNaN: isNumberNaN,
  isFinite: isNumberFinite,
  isUndefined: isUndefined,
  isArray: isArray,
  isFloat: isFloat,
  isInteger: isInteger,
  isFunction: isFunction,
  isBoolean: isBoolean,
  isString: isString,
  isNumber: isNumber,
  isRegExp: isRegExp,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isDate: isDate,
  isError: isError,
  isTypeError: isTypeError,
  isEmpty: isEmpty,
  isNull: isNull,
  isSymbol: isSymbol,
  isArguments: isArguments,
  isElement: isElement,
  isDocument: isDocument,
  isWindow: isWindow,
  isFormData: isFormData,
  isMap: isMap,
  isWeakMap: isWeakMap,
  isSet: isSet,
  isWeakSet: isWeakSet,
  isLeapYear: isLeapYear,
  isMatch: isMatch,
  isEqual: isEqual,
  isEqualWith: isEqualWith,
  getType: getType,
  uniqueId: uniqueId,
  getSize: getSize,
  indexOf: indexOf,
  lastIndexOf: lastIndexOf,
  findIndexOf: findIndexOf,
  findLastIndexOf: findLastIndexOf,
  toStringJSON: toStringJSON,
  toJSONString: toJSONString,
  keys: keys,
  values: values,
  entries: entries,
  pick: pick,
  omit: omit,
  first: first,
  last: last,
  each: each,
  forOf: forOf,
  lastForOf: lastForOf,
  lastEach: lastEach,
  has: has,
  get: get,
  set: set,
  groupBy: groupBy,
  countBy: countBy,
  clone: clone,
  clear: clear,
  remove: remove,
  range: range,
  destructuring: destructuring,

  // number
  random: random,
  min: min,
  max: max,
  commafy: commafy,
  round: round,
  ceil: ceil,
  floor: floor,
  toFixed: toFixed,
  toNumber: toNumber,
  toNumberString: toNumberString,
  toInteger: toInteger,
  add: add,
  subtract: subtract,
  multiply: multiply,
  divide: divide,
  sum: sum,
  mean: mean,

  // date
  now: now,
  timestamp: timestamp,
  isValidDate: isValidDate,
  isDateSame: isDateSame,
  toStringDate: toStringDate,
  toDateString: toDateString,
  getWhatYear: getWhatYear,
  getWhatMonth: getWhatMonth,
  getWhatWeek: getWhatWeek,
  getWhatDay: getWhatDay,
  getYearDay: getYearDay,
  getYearWeek: getYearWeek,
  getMonthWeek: getMonthWeek,
  getDayOfYear: getDayOfYear,
  getDayOfMonth: getDayOfMonth,
  getDateDiff: getDateDiff,

  // string
  trim: trim,
  trimLeft: trimLeft,
  trimRight: trimRight,
  escape: escape,
  unescape: unescape,
  camelCase: camelCase,
  kebabCase: kebabCase,
  repeat: repeat,
  padStart: padStart,
  padEnd: padEnd,
  startsWith: startsWith,
  endsWith: endsWith,
  template: template,
  toString: toValString,

  // function
  noop: noop,
  property: property,
  bind: bind,
  once: once,
  after: after,
  before: before,
  throttle: throttle,
  debounce: debounce,
  delay: delay,

  // url
  unserialize: unserialize,
  serialize: serialize,
  parseUrl: parseUrl,

  // web
  getBaseURL: getBaseURL,
  locat: locat,
  browse: browse,
  cookie: cookie
})

module.exports = XEUtils


/***/ }),

/***/ "c6b6":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "c6cd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var setGlobal = __webpack_require__("ce4e");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "c718":
/***/ (function(module, exports, __webpack_require__) {

var staticParseInt = __webpack_require__("cef5")

function helperStringRepeat (str, count) {
  if (str.repeat) {
    return str.repeat(count)
  }
  var list = isNaN(count) ? [] : new Array(staticParseInt(count))
  return list.join(str) + (list.length > 0 ? str : '')
}

module.exports = helperStringRepeat


/***/ }),

/***/ "c7cd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createHTML = __webpack_require__("857a");
var forcedStringHTMLMethod = __webpack_require__("af03");

// `String.prototype.fixed` method
// https://tc39.github.io/ecma262/#sec-string.prototype.fixed
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fixed') }, {
  fixed: function fixed() {
    return createHTML(this, 'tt', '', '');
  }
});


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c8d2":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var whitespaces = __webpack_require__("5899");

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),

/***/ "c8de":
/***/ (function(module, exports, __webpack_require__) {

var slice = __webpack_require__("3703")

/**
  * 创建一个绑定上下文的函数
  *
  * @param {Function} callback 函数
  * @param {Object} context 上下文
  * @param {*} args 额外的参数
  * @return {Object}
  */
function bind (callback, context) {
  var args = slice(arguments, 2)
  return function () {
    return callback.apply(context, slice(arguments).concat(args))
  }
}

module.exports = bind


/***/ }),

/***/ "c975":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $indexOf = __webpack_require__("4d64").indexOf;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf');
var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "c9cd":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateMathNumber = __webpack_require__("3cd7")

/**
 * 将数值四舍五入
 *
 * @param {string|number} num 数值
 * @param {number} digits 小数保留位数
 * @return {number}
 */
var round = helperCreateMathNumber('round')

module.exports = round


/***/ }),

/***/ "ca22":
/***/ (function(module, exports) {

/* eslint-disable valid-typeof */
function helperCreateInTypeof (type) {
  return function (obj) {
    return typeof obj === type
  }
}

module.exports = helperCreateInTypeof


/***/ }),

/***/ "ca84":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toIndexedObject = __webpack_require__("fc6a");
var indexOf = __webpack_require__("4d64").indexOf;
var hiddenKeys = __webpack_require__("d012");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "caad":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $includes = __webpack_require__("4d64").includes;
var addToUnscopables = __webpack_require__("44d2");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });

// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "cb44":
/***/ (function(module, exports) {

/**
  * 判断是否TypeError对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
function isTypeError (obj) {
  return obj ? obj.constructor === TypeError : false
}

module.exports = isTypeError


/***/ }),

/***/ "cc12":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "ce4e":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "cef5":
/***/ (function(module, exports) {

var staticParseInt = parseInt

module.exports = staticParseInt


/***/ }),

/***/ "d012":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "d039":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "d066":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var global = __webpack_require__("da84");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d0e5":
/***/ (function(module, exports) {

var staticStrLast = 'last'

module.exports = staticStrLast


/***/ }),

/***/ "d1e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "d28b":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("746f");

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "d2b6":
/***/ (function(module, exports, __webpack_require__) {

var staticEscapeMap = __webpack_require__("8b91")

var helperFormatEscaper = __webpack_require__("6149")

/**
  * 转义HTML字符串，替换&, <, >, ", ', `字符
  *
  * @param {String} str 字符串
  * @return {String}
  */
var escape = helperFormatEscaper(staticEscapeMap)

module.exports = escape


/***/ }),

/***/ "d2bb":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aPossiblePrototype = __webpack_require__("3bbe");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "d3b7":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var redefine = __webpack_require__("6eeb");
var toString = __webpack_require__("b041");

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d3f7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var setupDefaults = __webpack_require__("27e0")

var arrayEach = __webpack_require__("25b3")
var each = __webpack_require__("9a21")
var isFunction = __webpack_require__("b484")

var assign = __webpack_require__("294d")

function XEUtils () {}

function mixin () {
  arrayEach(arguments, function (methods) {
    each(methods, function (fn, name) {
      XEUtils[name] = isFunction(fn) ? function () {
        var result = fn.apply(XEUtils.$context, arguments)
        XEUtils.$context = null
        return result
      } : fn
    })
  })
}

function setup (options) {
  return assign(setupDefaults, options)
}

XEUtils.v = 'v3'
XEUtils.mixin = mixin
XEUtils.setup = setup

module.exports = XEUtils


/***/ }),

/***/ "d44e":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("9bf2").f;
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "d46f":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateIterateHandle = __webpack_require__("4730")

/**
  * 对象中的值中的每一项运行给定函数,如果该函数对每一项都返回true,则返回true,否则返回false
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Boolean}
  */
var every = helperCreateIterateHandle('every', 1, 1, false, true)

module.exports = every


/***/ }),

/***/ "d58f":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");
var toObject = __webpack_require__("7b0b");
var IndexedObject = __webpack_require__("44ad");
var toLength = __webpack_require__("50c4");

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aFunction(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = toLength(O.length);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};


/***/ }),

/***/ "d6c5":
/***/ (function(module, exports, __webpack_require__) {

var helperEqualCompare = __webpack_require__("3fc4")
var helperDefaultCompare = __webpack_require__("2c94")

/**
 * 深度比较两个对象之间的值是否相等
 *
 * @param {Object} obj1 值1
 * @param {Object} obj2 值2
 * @return {Boolean}
 */
function isEqual (obj1, obj2) {
  return helperEqualCompare(obj1, obj2, helperDefaultCompare)
}

module.exports = isEqual


/***/ }),

/***/ "d784":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__("ac1f");
var redefine = __webpack_require__("6eeb");
var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var regexpExec = __webpack_require__("9263");
var createNonEnumerableProperty = __webpack_require__("9112");

var SPECIES = wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  return 'a'.replace(/./, '$0') === '$0';
})();

var REPLACE = wellKnownSymbol('replace');
// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

module.exports = function (KEY, length, exec, sham) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !(
      REPLACE_SUPPORTS_NAMED_GROUPS &&
      REPLACE_KEEPS_$0 &&
      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    )) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === regexpExec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    }, {
      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    });
    var stringMethod = methods[0];
    var regexMethod = methods[1];

    redefine(String.prototype, KEY, stringMethod);
    redefine(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return regexMethod.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return regexMethod.call(string, this); }
    );
  }

  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "d81d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $map = __webpack_require__("b727").map;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');
// FF49- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('map');

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "da84":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func
  (function () { return this; })() || Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "dbb4":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var ownKeys = __webpack_require__("56ef");
var toIndexedObject = __webpack_require__("fc6a");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var createProperty = __webpack_require__("8418");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "dce7":
/***/ (function(module, exports, __webpack_require__) {

var staticStrUndefined = __webpack_require__("39bc")

/* eslint-disable valid-typeof */
var staticLocation = typeof location === staticStrUndefined ? 0 : location

module.exports = staticLocation


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var ArrayIteratorMethods = __webpack_require__("e260");
var createNonEnumerableProperty = __webpack_require__("9112");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "de18":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInTypeof = __webpack_require__("ca22")

/**
  * 判断是否Object对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isObject = helperCreateInTypeof('object')

module.exports = isObject


/***/ }),

/***/ "de51":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateIterateHandle = __webpack_require__("4730")

/**
  * 对象中的值中的每一项运行给定函数,如果函数对任一项返回true,则返回true,否则返回false
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Boolean}
  */
var some = helperCreateIterateHandle('some', 1, 0, true, false)

module.exports = some


/***/ }),

/***/ "df75":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "df7c":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "dffc":
/***/ (function(module, exports) {

function helperStringUpperCase (str) {
  return str.toUpperCase()
}

module.exports = helperStringUpperCase


/***/ }),

/***/ "e01a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var has = __webpack_require__("5135");
var isObject = __webpack_require__("861d");
var defineProperty = __webpack_require__("9bf2").f;
var copyConstructorProperties = __webpack_require__("e893");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "e11b":
/***/ (function(module, exports) {

var staticDayTime = 86400000

module.exports = staticDayTime


/***/ }),

/***/ "e163":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toObject = __webpack_require__("7b0b");
var sharedKey = __webpack_require__("f772");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "e177":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "e260":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var addToUnscopables = __webpack_require__("44d2");
var Iterators = __webpack_require__("3f8c");
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "e2cc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("6eeb");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "e3c3":
/***/ (function(module, exports, __webpack_require__) {

var each = __webpack_require__("9a21")

/**
  * 指定方法后的返回值组成的新数组
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, obj) 回调
  * @param {Object} context 上下文
  * @return {Array}
  */
function map (obj, iterate, context) {
  var result = []
  if (obj && arguments.length > 1) {
    if (obj.map) {
      return obj.map(iterate, context)
    } else {
      each(obj, function () {
        result.push(iterate.apply(context, arguments))
      })
    }
  }
  return result
}

module.exports = map


/***/ }),

/***/ "e439":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyDescriptor = __webpack_require__("06cf").f;
var DESCRIPTORS = __webpack_require__("83ab");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "e503":
/***/ (function(module, exports, __webpack_require__) {

var staticEncodeURIComponent = __webpack_require__("7f67")

var each = __webpack_require__("9a21")
var isArray = __webpack_require__("a44c")
var isNull = __webpack_require__("f108")
var isUndefined = __webpack_require__("7ab1")
var isPlainObject = __webpack_require__("656f")

function stringifyParams (resultVal, resultKey, isArr) {
  var _arr
  var result = []
  each(resultVal, function (item, key) {
    _arr = isArray(item)
    if (isPlainObject(item) || _arr) {
      result = result.concat(stringifyParams(item, resultKey + '[' + key + ']', _arr))
    } else {
      result.push(staticEncodeURIComponent(resultKey + '[' + (isArr ? '' : key) + ']') + '=' + staticEncodeURIComponent(isNull(item) ? '' : item))
    }
  })
  return result
}

/**
 * 序列化查询参数
 *
 * @param {Object} query 查询参数
 */
function serialize (query) {
  var _arr
  var params = []
  each(query, function (item, key) {
    if (!isUndefined(item)) {
      _arr = isArray(item)
      if (isPlainObject(item) || _arr) {
        params = params.concat(stringifyParams(item, key, _arr))
      } else {
        params.push(staticEncodeURIComponent(key) + '=' + staticEncodeURIComponent(isNull(item) ? '' : item))
      }
    }
  })
  return params.join('&').replace(/%20/g, '+')
}

module.exports = serialize


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "e58c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var toInteger = __webpack_require__("a691");
var toLength = __webpack_require__("50c4");
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var min = Math.min;
var nativeLastIndexOf = [].lastIndexOf;
var NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');
// For preventing possible almost infinite loop in non-standard implementations, test the forward version of the method
var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });
var FORCED = NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH;

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
module.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;
  var O = toIndexedObject(this);
  var length = toLength(O.length);
  var index = length - 1;
  if (arguments.length > 1) index = min(index, toInteger(arguments[1]));
  if (index < 0) index = length + index;
  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
  return -1;
} : nativeLastIndexOf;


/***/ }),

/***/ "e643":
/***/ (function(module, exports, __webpack_require__) {

var objectToString = __webpack_require__("0d1b")

var isArray = __webpack_require__("a44c")
var isPlainObject = __webpack_require__("656f")

var objectMap = __webpack_require__("1108")

var map = __webpack_require__("e3c3")

function handleObjectAndArrayClone (func, obj, deep) {
  return func(obj, deep ? function (val) {
    return copyValue(val, deep)
  } : function (val) {
    return val
  })
}

function handleValueClone (val, deep) {
  if (deep && val) {
    var Ctor = val.constructor;
    switch(objectToString.call(val)) {
      case "[object Date]":
      case "[object RegExp]":
        return new Ctor(val.valueOf())
      case "[object Set]":
        var set = new Ctor()
        val.forEach(function (v) {
          set.add(v)
        })
        return set
      case "[object Map]":
        var map = new Ctor()
        val.forEach(function (v, k) {
          map.set(k, v)
        })
        return map
    }
  }
  return val
}

function copyValue (val, deep) {
  if (isPlainObject(val)) {
    return handleObjectAndArrayClone(objectMap, val, deep)
  } else if (isArray(val)) {
    return handleObjectAndArrayClone(map, val, deep)
  }
  return handleValueClone(val, deep)
}

/**
  * 浅拷贝/深拷贝
  *
  * @param {Object} obj 对象/数组
  * @param {Boolean} deep 是否深拷贝
  * @return {Object}
  */
function clone (obj, deep) {
  if (obj) {
    return copyValue(obj, deep)
  }
  return obj
}

module.exports = clone


/***/ }),

/***/ "e65b":
/***/ (function(module, exports) {

/**
  * 函数去抖；当被调用 n 毫秒后才会执行，如果在这时间内又被调用则将重新计算执行时间
  *
  * @param {Function} callback 回调
  * @param {Number} wait 多少秒毫
  * @param {Object} options 参数{leading: 是否在之前执行, trailing: 是否在之后执行}
  * @return {Function}
  */
function debounce (callback, wait, options) {
  var args, context
  var opts = options || {}
  var runFlag = false
  var timeout = 0
  var isLeading = typeof options === 'boolean'
  var optLeading = 'leading' in opts ? opts.leading : isLeading
  var optTrailing = 'trailing' in opts ? opts.trailing : !isLeading
  var runFn = function () {
    runFlag = true
    timeout = 0
    callback.apply(context, args)
  }
  var endFn = function () {
    if (optLeading === true) {
      timeout = 0
    }
    if (!runFlag && optTrailing === true) {
      runFn()
    }
  }
  var cancelFn = function () {
    var rest = timeout !== 0
    clearTimeout(timeout)
    timeout = 0
    return rest
  }
  var debounced = function () {
    runFlag = false
    args = arguments
    context = this
    if (timeout === 0) {
      if (optLeading === true) {
        runFn()
      }
    } else {
      clearTimeout(timeout)
    }
    timeout = setTimeout(endFn, wait)
  }
  debounced.cancel = cancelFn
  return debounced
}

module.exports = debounce


/***/ }),

/***/ "e681":
/***/ (function(module, exports, __webpack_require__) {

var staticStrUndefined = __webpack_require__("39bc")

/* eslint-disable valid-typeof */
var staticDocument = typeof document === staticStrUndefined ? 0 : document

module.exports = staticDocument


/***/ }),

/***/ "e893":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var ownKeys = __webpack_require__("56ef");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "e8b5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "e8ca":
/***/ (function(module, exports, __webpack_require__) {

var setupDefaults = __webpack_require__("27e0")
var staticDocument = __webpack_require__("e681")
var staticDecodeURIComponent = __webpack_require__("4f91")
var staticEncodeURIComponent = __webpack_require__("7f67")

var isArray = __webpack_require__("a44c")
var isObject = __webpack_require__("de18")
var isDate = __webpack_require__("6deb")
var isUndefined = __webpack_require__("7ab1")
var includes = __webpack_require__("20b3")
var keys = __webpack_require__("6815")

var assign = __webpack_require__("294d")

var arrayEach = __webpack_require__("25b3")

var helperNewDate = __webpack_require__("4955")
var helperGetDateTime = __webpack_require__("3ae2")
var getWhatYear = __webpack_require__("62e1")
var getWhatMonth = __webpack_require__("012c")
var getWhatDay = __webpack_require__("3a48")

function toCookieUnitTime (unit, expires) {
  var num = parseFloat(expires)
  var nowdate = helperNewDate()
  var time = helperGetDateTime(nowdate)
  switch (unit) {
    case 'y': return helperGetDateTime(getWhatYear(nowdate, num))
    case 'M': return helperGetDateTime(getWhatMonth(nowdate, num))
    case 'd': return helperGetDateTime(getWhatDay(nowdate, num))
    case 'h':
    case 'H': return time + num * 60 * 60 * 1000
    case 'm': return time + num * 60 * 1000
    case 's': return time + num * 1000
  }
  return time
}

function toCookieUTCString (date) {
  return (isDate(date) ? date : new Date(date)).toUTCString()
}

/**
  * cookie操作函数
  * @param {String/Array/Object} name 键/数组/对象
  * @param {String} value 值
  * @param {Object} options 参数
  *   @param {String} name: 键
  *   @param {Object} value: 值
  *   @param {String} path: 路径
  *   @param {String} domain: 作用域
  *   @param {Boolean} secure: 设置为安全的,只能用https协议
  *   @param {Number} expires: 过期时间,可以指定日期或者字符串，默认天
  */
function cookie (name, value, options) {
  if (staticDocument) {
    var opts, expires, values, result, cookies, keyIndex
    var inserts = []
    var args = arguments
    if (isArray(name)) {
      inserts = name
    } else if (args.length > 1) {
      inserts = [assign({ name: name, value: value }, options)]
    } else if (isObject(name)) {
      inserts = [name]
    }
    if (inserts.length > 0) {
      arrayEach(inserts, function (obj) {
        opts = assign({}, setupDefaults.cookies, obj)
        values = []
        if (opts.name) {
          expires = opts.expires
          values.push(staticEncodeURIComponent(opts.name) + '=' + staticEncodeURIComponent(isObject(opts.value) ? JSON.stringify(opts.value) : opts.value))
          if (expires) {
            if (isNaN(expires)) {
              // UTCString || Unit
              expires = expires.replace(/^([0-9]+)(y|M|d|H|h|m|s)$/, function (text, num, unit) {
                return toCookieUTCString(toCookieUnitTime(unit, num))
              })
            } else if (/^[0-9]{11,13}$/.test(expires) || isDate(expires)) {
              // Date || now
              expires = toCookieUTCString(expires)
            } else {
              // day
              expires = toCookieUTCString(toCookieUnitTime('d', expires))
            }
            opts.expires = expires
          }
          arrayEach(['expires', 'path', 'domain', 'secure'], function (key) {
            if (!isUndefined(opts[key])) {
              values.push(opts[key] && key === 'secure' ? key : (key + '=' + opts[key]))
            }
          })
        }
        staticDocument.cookie = values.join('; ')
      })
      return true
    } else {
      result = {}
      cookies = staticDocument.cookie
      if (cookies) {
        arrayEach(cookies.split('; '), function (val) {
          keyIndex = val.indexOf('=')
          result[staticDecodeURIComponent(val.substring(0, keyIndex))] = staticDecodeURIComponent(val.substring(keyIndex + 1) || '')
        })
      }
      return args.length === 1 ? result[name] : result
    }
  }
  return false
}

function hasCookieItem (key) {
  return includes(cookieKeys(), key)
}

function getCookieItem (name, key) {
  return cookie(name, key)
}

function setCookieItem (name, key, options) {
  cookie(name, key, options)
  return cookie
}

function removeCookieItem (name, options) {
  cookie(name, 0, assign({ expires: -1 }, setupDefaults.cookies, options))
}

function cookieKeys () {
  return keys(cookie())
}

assign(cookie, {
  has: hasCookieItem,
  set: setCookieItem,
  setItem: setCookieItem,
  get: getCookieItem,
  getItem: cookie,
  remove: removeCookieItem,
  removeItem: removeCookieItem,
  keys: cookieKeys,
  getJSON: cookie
})

module.exports = cookie


/***/ }),

/***/ "e95a":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var Iterators = __webpack_require__("3f8c");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "e9ea":
/***/ (function(module, exports) {

var staticHGKeyRE = /(.+)?\[(\d+)\]$/

module.exports = staticHGKeyRE


/***/ }),

/***/ "ea20":
/***/ (function(module, exports) {

function helperGetUTCDateTime (dates) {
  return Date.UTC(dates[0], dates[1], dates[2], dates[3], dates[4], dates[5], dates[6])
}

module.exports = helperGetUTCDateTime


/***/ }),

/***/ "eae2":
/***/ (function(module, exports) {

function helperCreateTreeFunc (handle) {
  return function (obj, iterate, options, context) {
    var opts = options || {}
    var optChildren = opts.children || 'children'
    return handle(null, obj, iterate, context, [], [], optChildren, opts)
  }
}

module.exports = helperCreateTreeFunc


/***/ }),

/***/ "eae28":
/***/ (function(module, exports) {

function helperNumberOffsetPoint (str, offsetIndex) {
  return str.substring(0, offsetIndex) + '.' + str.substring(offsetIndex, str.length)
}

module.exports = helperNumberOffsetPoint


/***/ }),

/***/ "ef6a":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateInInObjectString = __webpack_require__("349b")

/**
  * 判断是否RegExp对象
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
var isRegExp = helperCreateInInObjectString('RegExp')

module.exports = isRegExp


/***/ }),

/***/ "f108":
/***/ (function(module, exports) {

/**
  * 判断是否为Null
  *
  * @param {Object} obj 对象
  * @return {Boolean}
  */
function isNull (obj) {
  return obj === null
}

module.exports = isNull


/***/ }),

/***/ "f183":
/***/ (function(module, exports, __webpack_require__) {

var hiddenKeys = __webpack_require__("d012");
var isObject = __webpack_require__("861d");
var has = __webpack_require__("5135");
var defineProperty = __webpack_require__("9bf2").f;
var uid = __webpack_require__("90e3");
var FREEZING = __webpack_require__("bb2f");

var METADATA = uid('meta');
var id = 0;

var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + ++id, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "f266":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")

/**
  * 去除字符串左边的空格
  *
  * @param {String} str 字符串
  * @return {String}
  */
function trimLeft (str) {
  return str && str.trimLeft ? str.trimLeft() : toValString(str).replace(/^[\s\uFEFF\xA0]+/g, '')
}

module.exports = trimLeft


/***/ }),

/***/ "f339":
/***/ (function(module, exports, __webpack_require__) {

var setupDefaults = __webpack_require__("27e0")

var helperGetDateTime = __webpack_require__("3ae2")
var helperNewDate = __webpack_require__("4955")

var toStringDate = __webpack_require__("fedd")

var isValidDate = __webpack_require__("27ad")

/**
  * 返回两个日期之间差距,如果结束日期小于开始日期done为fasle
  *
  * @param {Date} startDate 开始日期
  * @param {Date} endDate 结束日期或当期日期
  * @param {Date} rule 自定义计算规则
  * @return {Object}
  */
function getDateDiff (startDate, endDate, rules) {
  var startTime, endTime, item, diffTime, rule, len, index
  var result = { done: false, time: 0 }
  startDate = toStringDate(startDate)
  endDate = endDate ? toStringDate(endDate) : helperNewDate()
  if (isValidDate(startDate) && isValidDate(endDate)) {
    startTime = helperGetDateTime(startDate)
    endTime = helperGetDateTime(endDate)
    if (startTime < endTime) {
      diffTime = result.time = endTime - startTime
      rule = rules && rules.length > 0 ? rules : setupDefaults.dateDiffRules
      result.done = true
      for (index = 0, len = rule.length; index < len; index++) {
        item = rule[index]
        if (diffTime >= item[1]) {
          if (index === len - 1) {
            result[item[0]] = diffTime || 0
          } else {
            result[item[0]] = Math.floor(diffTime / item[1])
            diffTime -= result[item[0]] * item[1]
          }
        } else {
          result[item[0]] = 0
        }
      }
    }
  }
  return result
}

module.exports = getDateDiff


/***/ }),

/***/ "f33a":
/***/ (function(module, exports, __webpack_require__) {

var trimRight = __webpack_require__("7f34")
var trimLeft = __webpack_require__("f266")

/**
  * 去除字符串左右两边的空格
  *
  * @param {String} str 字符串
  * @return {String}
  */
function trim (str) {
  return str && str.trim ? str.trim() : trimRight(trimLeft(str))
}

module.exports = trim


/***/ }),

/***/ "f42e":
/***/ (function(module, exports, __webpack_require__) {

var isNull = __webpack_require__("f108")

/**
 * 返回一个获取对象属性的函数
 *
 * @param {String} name 属性名
 * @param {Object} defs 空值
 */
function property (name, defs) {
  return function (obj) {
    return isNull(obj) ? defs : obj[name]
  }
}

module.exports = property


/***/ }),

/***/ "f469":
/***/ (function(module, exports, __webpack_require__) {

var helperCreatePickOmit = __webpack_require__("38bd")

/**
 * 根据 key 排除指定的属性值，返回一个新的对象
 *
 * @param {Object} obj 对象
 * @param {String/Array} key 键数组
 * @return {Object}
 */
var omit = helperCreatePickOmit(0, 1)

module.exports = omit


/***/ }),

/***/ "f4c2":
/***/ (function(module, exports, __webpack_require__) {

var eachTree = __webpack_require__("80c6")

/**
  * 从树结构中根据回调过滤数据
  *
  * @param {Object} obj 对象/数组
  * @param {Function} iterate(item, index, items, path, parent) 回调
  * @param {Object} options {children: 'children'}
  * @param {Object} context 上下文
  * @return {Array}
  */
function filterTree (obj, iterate, options, context) {
  var result = []
  if (obj && iterate) {
    eachTree(obj, function (item, index, items, path, parent, nodes) {
      if (iterate.call(context, item, index, items, path, parent, nodes)) {
        result.push(item)
      }
    }, options)
  }
  return result
}

module.exports = filterTree


/***/ }),

/***/ "f4fe":
/***/ (function(module, exports, __webpack_require__) {

var shuffle = __webpack_require__("b000")

/**
  * 从一个数组中随机返回几个元素
  *
  * @param {Array} array 数组
  * @param {Number} number 个数
  * @return {Array}
  */
function sample (array, number) {
  var result = shuffle(array)
  if (arguments.length <= 1) {
    return result[0]
  }
  if (number < result.length) {
    result.length = number || 0
  }
  return result
}

module.exports = sample


/***/ }),

/***/ "f54d":
/***/ (function(module, exports, __webpack_require__) {

var toValString = __webpack_require__("bee9")
var helperStringSubstring = __webpack_require__("a5ed")
var helperStringLowerCase = __webpack_require__("8eb3")

var kebabCacheMaps = {}

/**
  * 将带驼峰字符串转成字符串,例如： projectName 转为 project-name
  *
  * @param {String} str 字符串
  * @return {String}
  */
function kebabCase (str) {
  str = toValString(str)
  if (kebabCacheMaps[str]) {
    return kebabCacheMaps[str]
  }
  var rest = str.replace(/([a-z]?)([A-Z]+)([a-z]?)/g, function (text, prevLower, upper, nextLower, index) {
    var upperLen = upper.length
    if (upperLen > 1) {
      if (prevLower) {
        prevLower += '-'
      }
      if (nextLower) {
        return (prevLower || '') + helperStringLowerCase(helperStringSubstring(upper, 0, upperLen - 1)) + '-' + helperStringLowerCase(helperStringSubstring(upper, upperLen - 1, upperLen)) + nextLower
      }
    }
    return (prevLower || '') + (index ? '-' : '') + helperStringLowerCase(upper) + (nextLower || '')
  })
  rest = rest.replace(/([-]+)/g, function (text, flag, index) {
    return index && index + flag.length < rest.length ? '-' : ''
  })
  kebabCacheMaps[str] =  rest
  return rest
}

module.exports = kebabCase


/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classofRaw = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "f739":
/***/ (function(module, exports, __webpack_require__) {

var values = __webpack_require__("35f1")

/**
  * 获取对象第一个值
  *
  * @param {Object} obj 对象/数组
  * @return {Object}
  */
function first (obj) {
  return values(obj)[0]
}

module.exports = first


/***/ }),

/***/ "f772":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5692");
var uid = __webpack_require__("90e3");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "f8cd":
/***/ (function(module, exports) {

/**
  * 获取一个指定范围内随机数
  *
  * @param {Number} minVal 最小值
  * @param {Number} maxVal 最大值
  * @return {Number}
  */
function random (minVal, maxVal) {
  return minVal >= maxVal ? minVal : ((minVal = minVal >> 0) + Math.round(Math.random() * ((maxVal || 9) - minVal)))
}

module.exports = random


/***/ }),

/***/ "f8eb":
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__("ad54")
var isDate = __webpack_require__("6deb")
var isArray = __webpack_require__("a44c")
var isRegExp = __webpack_require__("ef6a")
var isError = __webpack_require__("59e7")
var isNull = __webpack_require__("f108")

/**
  * 获取对象类型
  *
  * @param {Object} obj 对象
  * @return {String}
  */
function getType (obj) {
  if (isNull(obj)) {
    return 'null'
  }
  if (isSymbol(obj)) {
    return 'symbol'
  }
  if (isDate(obj)) {
    return 'date'
  }
  if (isArray(obj)) {
    return 'array'
  }
  if (isRegExp(obj)) {
    return 'regexp'
  }
  if (isError(obj)) {
    return 'error'
  }
  return typeof obj
}

module.exports = getType


/***/ }),

/***/ "f9f2":
/***/ (function(module, exports, __webpack_require__) {

var helperCreateMathNumber = __webpack_require__("3cd7")

/**
 * 将数值向上舍入
 *
 * @param {string|number} num 数值
 * @param {number} digits 小数保留位数
 * @return {number}
 */
var ceil = helperCreateMathNumber('ceil')

module.exports = ceil


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "VXETableInstance", function() { return /* reexport */ v_x_e_table_VXETableInstance; });
__webpack_require__.d(__webpack_exports__, "VXETable", function() { return /* reexport */ VXETable; });
__webpack_require__.d(__webpack_exports__, "Column", function() { return /* reexport */ Column; });
__webpack_require__.d(__webpack_exports__, "Header", function() { return /* reexport */ Header; });
__webpack_require__.d(__webpack_exports__, "Footer", function() { return /* reexport */ Footer; });
__webpack_require__.d(__webpack_exports__, "Grid", function() { return /* reexport */ Grid; });
__webpack_require__.d(__webpack_exports__, "Toolbar", function() { return /* reexport */ Toolbar; });
__webpack_require__.d(__webpack_exports__, "Pager", function() { return /* reexport */ Pager; });
__webpack_require__.d(__webpack_exports__, "Checkbox", function() { return /* reexport */ Checkbox; });
__webpack_require__.d(__webpack_exports__, "Radio", function() { return /* reexport */ Radio; });
__webpack_require__.d(__webpack_exports__, "Input", function() { return /* reexport */ Input; });
__webpack_require__.d(__webpack_exports__, "Textarea", function() { return /* reexport */ Textarea; });
__webpack_require__.d(__webpack_exports__, "Button", function() { return /* reexport */ Button; });
__webpack_require__.d(__webpack_exports__, "ModalController", function() { return /* reexport */ ModalController; });
__webpack_require__.d(__webpack_exports__, "Modal", function() { return /* reexport */ Modal; });
__webpack_require__.d(__webpack_exports__, "Tooltip", function() { return /* reexport */ Tooltip; });
__webpack_require__.d(__webpack_exports__, "Form", function() { return /* reexport */ Form; });
__webpack_require__.d(__webpack_exports__, "Select", function() { return /* reexport */ Select; });
__webpack_require__.d(__webpack_exports__, "Switch", function() { return /* reexport */ Switch; });
__webpack_require__.d(__webpack_exports__, "List", function() { return /* reexport */ List; });
__webpack_require__.d(__webpack_exports__, "Pulldown", function() { return /* reexport */ Pulldown; });
__webpack_require__.d(__webpack_exports__, "Filter", function() { return /* reexport */ Filter; });
__webpack_require__.d(__webpack_exports__, "Menu", function() { return /* reexport */ Menu; });
__webpack_require__.d(__webpack_exports__, "Edit", function() { return /* reexport */ Edit; });
__webpack_require__.d(__webpack_exports__, "Export", function() { return /* reexport */ Export; });
__webpack_require__.d(__webpack_exports__, "Keyboard", function() { return /* reexport */ Keyboard; });
__webpack_require__.d(__webpack_exports__, "Validator", function() { return /* reexport */ Validator; });
__webpack_require__.d(__webpack_exports__, "Table", function() { return /* reexport */ Table; });

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./styles/index.scss
var styles_0 = __webpack_require__("1a97");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("4160");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("159b");

// EXTERNAL MODULE: external {"root":"XEUtils","commonjs":"xe-utils/ctor","commonjs2":"xe-utils/ctor","amd":"xe-utils"}
var ctor_amd_xe_utils_ = __webpack_require__("7fd6");
var ctor_amd_xe_utils_default = /*#__PURE__*/__webpack_require__.n(ctor_amd_xe_utils_);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.index-of.js
var es_array_index_of = __webpack_require__("c975");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// CONCATENATED MODULE: ./packages/conf/index.ts
var iconPrefix = 'vxe-icon--';
var GlobalConfig = {
  size: null,
  zIndex: 100,
  version: 0,
  // resizeInterval: 500,
  emptyCell: '　',
  table: {
    fit: true,
    showHeader: true,
    animat: true,
    delayHover: 250,
    // keepSource: false,
    // showOverflow: null,
    // showHeaderOverflow: null,
    // showFooterOverflow: null,
    // resizeInterval: 500,
    // size: null,
    // zIndex: null,
    // resizable: false,
    // autoResize: false,
    // stripe: false,
    // border: false,
    // round: false,
    // emptyRender: {
    //   name: ''
    // },
    // radioConfig: {
    //   trigger: 'default'
    // },
    // checkboxConfig: {
    //   trigger: 'default'
    // },
    // tooltipConfig: {
    //   theme: 'dark',
    //   enterable: false
    // },
    // validConfig: {
    //   message: 'default'
    // },
    // menuConfig: {
    //   visibleMethod () {}
    // },
    // customConfig: {
    //  storage: false,
    //  checkMethod () {}
    // },
    // rowId: '_XID', // 行数据的唯一主键字段名
    sortConfig: {
      // remote: false,
      // trigger: 'default',
      // orders: ['asc', 'desc', null],
      // sortMethod: null,
      showIcon: true
    },
    filterConfig: {
      // remote: false,
      // filterMethod: null,
      showIcon: true
    },
    treeConfig: {
      children: 'children',
      hasChild: 'hasChild',
      indent: 20,
      showIcon: true
    },
    expandConfig: {
      // trigger: 'default',
      showIcon: true
    },
    editConfig: {
      // mode: 'cell',
      showIcon: true,
      showAsterisk: true
    },
    importConfig: {
      modes: ['insert', 'covering']
    },
    exportConfig: {
      modes: ['current', 'selected']
    },
    printConfig: {
      modes: ['current', 'selected']
    },
    mouseConfig: {
      extension: true
    },
    scrollX: {
      gt: 60 // oSize: 0

    },
    scrollY: {
      gt: 100 // oSize: 0

    }
  },
  export: {
    types: {}
  },
  icon: {
    // table
    TABLE_SORT_ASC: iconPrefix + 'caret-top',
    TABLE_SORT_DESC: iconPrefix + 'caret-bottom',
    TABLE_FILTER_NONE: iconPrefix + 'funnel',
    TABLE_FILTER_MATCH: iconPrefix + 'funnel',
    TABLE_EDIT: iconPrefix + 'edit-outline',
    TABLE_HELP: iconPrefix + 'question',
    TABLE_TREE_LOADED: iconPrefix + 'refresh roll',
    TABLE_TREE_OPEN: iconPrefix + 'caret-right rotate90',
    TABLE_TREE_CLOSE: iconPrefix + 'caret-right',
    TABLE_EXPAND_LOADED: iconPrefix + 'refresh roll',
    TABLE_EXPAND_OPEN: iconPrefix + 'arrow-right rotate90',
    TABLE_EXPAND_CLOSE: iconPrefix + 'arrow-right',
    // button
    BUTTON_DROPDOWN: iconPrefix + 'arrow-bottom',
    BUTTON_LOADING: iconPrefix + 'refresh roll',
    // select
    SELECT_OPEN: iconPrefix + 'caret-bottom rotate180',
    SELECT_CLOSE: iconPrefix + 'caret-bottom',
    // pager
    PAGER_JUMP_PREV: iconPrefix + 'd-arrow-left',
    PAGER_JUMP_NEXT: iconPrefix + 'd-arrow-right',
    PAGER_PREV_PAGE: iconPrefix + 'arrow-left',
    PAGER_NEXT_PAGE: iconPrefix + 'arrow-right',
    PAGER_JUMP_MORE: iconPrefix + 'more',
    // input
    INPUT_CLEAR: iconPrefix + 'close',
    INPUT_PWD: iconPrefix + 'eye-slash',
    INPUT_SHOW_PWD: iconPrefix + 'eye',
    INPUT_PREV_NUM: iconPrefix + 'caret-top',
    INPUT_NEXT_NUM: iconPrefix + 'caret-bottom',
    INPUT_DATE: iconPrefix + 'calendar',
    INPUT_SEARCH: iconPrefix + 'search',
    // modal
    MODAL_ZOOM_IN: iconPrefix + 'square',
    MODAL_ZOOM_OUT: iconPrefix + 'zoomout',
    MODAL_CLOSE: iconPrefix + 'close',
    MODAL_INFO: iconPrefix + 'info',
    MODAL_SUCCESS: iconPrefix + 'success',
    MODAL_WARNING: iconPrefix + 'warning',
    MODAL_ERROR: iconPrefix + 'error',
    MODAL_QUESTION: iconPrefix + 'question',
    MODAL_LOADING: iconPrefix + 'refresh roll',
    // toolbar
    TOOLBAR_TOOLS_REFRESH: iconPrefix + 'refresh',
    TOOLBAR_TOOLS_REFRESH_LOADING: iconPrefix + 'refresh roll',
    TOOLBAR_TOOLS_IMPORT: iconPrefix + 'upload',
    TOOLBAR_TOOLS_EXPORT: iconPrefix + 'download',
    TOOLBAR_TOOLS_PRINT: iconPrefix + 'print',
    TOOLBAR_TOOLS_ZOOM_IN: iconPrefix + 'zoomin',
    TOOLBAR_TOOLS_ZOOM_OUT: iconPrefix + 'zoomout',
    TOOLBAR_TOOLS_CUSTOM: iconPrefix + 'menu',
    // form
    FORM_PREFIX: iconPrefix + 'question',
    FORM_SUFFIX: iconPrefix + 'question',
    FORM_FOLDING: iconPrefix + 'arrow-top rotate180',
    FORM_UNFOLDING: iconPrefix + 'arrow-top'
  },
  grid: {
    // size: null,
    // zoomConfig: {
    //   escRestore: true
    // },
    // pagerConfig: {
    //   perfect: false
    // },
    // toolbarConfig: {
    //   perfect: false
    // },
    proxyConfig: {
      autoLoad: true,
      message: true,
      props: {
        list: null,
        result: 'result',
        total: 'page.total',
        message: 'message'
      } // beforeItem: null,
      // beforeColumn: null,
      // beforeQuery: null,
      // afterQuery: null,
      // beforeDelete: null,
      // afterDelete: null,
      // beforeSave: null,
      // afterSave: null

    }
  },
  tooltip: {
    // size: null,
    trigger: 'hover',
    theme: 'dark',
    leaveDelay: 300
  },
  pager: {// size: null,
    // autoHidden: false,
    // perfect: true,
    // pageSize: 10,
    // pagerCount: 7,
    // pageSizes: [10, 15, 20, 50, 100],
    // layouts: ['PrevJump', 'PrevPage', 'Jump', 'PageCount', 'NextPage', 'NextJump', 'Sizes', 'Total']
  },
  form: {
    // preventSubmit: false,
    // validConfig: {
    //   autoPos: true
    // },
    // size: null,
    // colon: false,
    titleAsterisk: true
  },
  input: {
    // size: null,
    // transfer: false
    // parseFormat: 'yyyy-MM-dd HH:mm:ss.SSS',
    // labelFormat: '',
    // valueFormat: '',
    minDate: new Date(1900, 0, 1),
    maxDate: new Date(2100, 0, 1),
    startWeek: 1,
    digits: 2,
    controls: true
  },
  textarea: {// size: null,
    // autosize: {
    //   minRows: 1,
    //   maxRows: 10
    // }
  },
  select: {
    // size: null,
    // transfer: false,
    multiCharOverflow: 8
  },
  toolbar: {// size: null,
    // import: {
    //   mode: 'covering'
    // },
    // export: {
    //   types: ['csv', 'html', 'xml', 'txt']
    // },
    // custom: {
    //   isFooter: true
    // },
    // buttons: []
  },
  button: {// size: null,
    // transfer: false
  },
  radio: {// size: null
  },
  checkbox: {// size: null
  },
  switch: {// size: null
  },
  modal: {
    // size: null,
    minWidth: 340,
    minHeight: 140,
    lockView: true,
    mask: true,
    duration: 3000,
    marginSize: 0,
    dblclickZoom: true,
    showTitleOverflow: true,
    animat: true,
    // storage: false,
    storageKey: 'VXE_MODAL_POSITION'
  },
  list: {
    // size: null,
    scrollY: {
      gt: 100 // oSize: 0

    }
  },
  i18n: function i18n(key) {
    return key;
  }
};
/* harmony default export */ var conf = (GlobalConfig);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("d81d");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
var es_regexp_exec = __webpack_require__("ac1f");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
var es_string_split = __webpack_require__("1276");

// CONCATENATED MODULE: ./packages/v-x-e-table/src/interceptor.ts





var eventTypes = 'clearActived,clearFilter,showMenu,keydown,export,import'.split(',').map(function (name) {
  return "event.".concat(name);
});
var storeMap = {};
var interceptor = {
  mixin: function mixin(options) {
    ctor_amd_xe_utils_default.a.each(options, function (callback, type) {
      return interceptor.add(type, callback);
    });
    return interceptor;
  },
  get: function get(type) {
    return storeMap[type] || [];
  },
  add: function add(type, callback) {
    if (callback && eventTypes.indexOf(type) > -1) {
      var eList = storeMap[type];

      if (!eList) {
        eList = storeMap[type] = [];
      }

      eList.push(callback);
    }

    return interceptor;
  },
  delete: function _delete(type, callback) {
    var eList = storeMap[type];

    if (eList) {
      if (callback) {
        ctor_amd_xe_utils_default.a.remove(eList, function (fn) {
          return fn === callback;
        });
      } else {
        delete storeMap[type];
      }
    }
  }
};
/* harmony default export */ var src_interceptor = (interceptor);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("99af");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js
var es_array_find = __webpack_require__("7db0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js
var es_array_join = __webpack_require__("a15b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.to-fixed.js
var es_number_to_fixed = __webpack_require__("b680");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__("5319");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("a4d3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("4de4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("e439");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("dbb4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("b64b");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js









function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__("8bbf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.last-index-of.js
var es_array_last_index_of = __webpack_require__("baa5");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("fb6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("25f0");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("e01a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("d28b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("a630");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("ddb0");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js







function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js







function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
// EXTERNAL MODULE: ./node_modules/xe-utils/index.js
var xe_utils = __webpack_require__("c695");
var xe_utils_default = /*#__PURE__*/__webpack_require__.n(xe_utils);

// CONCATENATED MODULE: ./packages/v-x-e-table/src/store.ts



/**
 * 创建数据仓库
 */

var store_Store = /*#__PURE__*/function () {
  function Store() {
    _classCallCheck(this, Store);

    this.store = {};
  }

  _createClass(Store, [{
    key: "mixin",
    value: function mixin(options) {
      Object.assign(this.store, options);
      return this;
    }
  }, {
    key: "has",
    value: function has(name) {
      return !!this.get(name);
    }
  }, {
    key: "get",
    value: function get(name) {
      return this.store[name];
    }
  }, {
    key: "add",
    value: function add(name, render) {
      this.store[name] = render;
      return this;
    }
  }, {
    key: "delete",
    value: function _delete(name) {
      delete this.store[name];
    }
  }, {
    key: "forEach",
    value: function forEach(callback) {
      xe_utils_default.a.objectEach(this.store, callback);
    }
  }]);

  return Store;
}();

/* harmony default export */ var store = (store_Store);
// CONCATENATED MODULE: ./packages/v-x-e-table/src/formats.ts

var formats = new store();
/* harmony default export */ var src_formats = (formats);
// CONCATENATED MODULE: ./packages/tools/src/utils.ts













var zindexIndex = 0;
var lastZindex = 1;

function getColFuncWidth(isExists) {
  var defaultWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;
  return isExists ? defaultWidth : 0;
}

function getLog(message, params) {
  return "[vxe-table] ".concat(conf.i18n(message, params));
}

function outLog(type) {
  return function (message, params) {
    var msg = getLog(message, params);
    console[type](msg);
    return msg;
  };
}

var UtilTools = {
  warn: outLog('warn'),
  error: outLog('error'),
  getLog: getLog,
  getFuncText: function getFuncText(content) {
    return content ? ctor_amd_xe_utils_default.a.toString(conf.translate ? conf.translate('' + content) : content) : '';
  },
  nextZIndex: function nextZIndex() {
    lastZindex = conf.zIndex + zindexIndex++;
    return lastZindex;
  },
  getLastZIndex: function getLastZIndex() {
    return lastZindex;
  },
  // 获取所有的列，排除分组
  getColumnList: function getColumnList(columns) {
    var result = [];
    columns.forEach(function (column) {
      result.push.apply(result, _toConsumableArray(column.children && column.children.length ? UtilTools.getColumnList(column.children) : [column]));
    });
    return result;
  },
  toFilters: function toFilters(filters) {
    if (filters && ctor_amd_xe_utils_default.a.isArray(filters)) {
      return filters.map(function (_ref) {
        var label = _ref.label,
            value = _ref.value,
            data = _ref.data,
            resetValue = _ref.resetValue,
            checked = _ref.checked;
        return {
          label: label,
          value: value,
          data: data,
          resetValue: resetValue,
          checked: !!checked,
          _checked: !!checked
        };
      });
    }

    return filters;
  },
  getClass: function getClass(property, params) {
    return property ? ctor_amd_xe_utils_default.a.isFunction(property) ? property(params) : property : '';
  },
  formatText: function formatText(value, placeholder) {
    return '' + (value === '' || value === null || value === undefined ? placeholder ? conf.emptyCell : '' : value);
  },
  getCellValue: function getCellValue(row, column) {
    return ctor_amd_xe_utils_default.a.get(row, column.property);
  },
  getCellLabel: function getCellLabel(row, column, params) {
    var formatter = column.formatter;
    var cellValue = UtilTools.getCellValue(row, column);
    var cellLabel = cellValue;

    if (params && formatter) {
      var rest, formatData;
      var $table = params.$table;
      var internalData = $table.internalData;
      var fullAllDataRowMap = internalData.fullAllDataRowMap;
      var colid = column.id;
      var cacheFormat = fullAllDataRowMap.has(row);
      var formatParams = {
        cellValue: cellValue,
        row: row,
        column: column
      };

      if (cacheFormat) {
        rest = fullAllDataRowMap.get(row);
        formatData = rest.formatData;

        if (!formatData) {
          formatData = fullAllDataRowMap.get(row).formatData = {};
        }

        if (rest && formatData[colid]) {
          if (formatData[colid].value === cellValue) {
            return formatData[colid].label;
          }
        }
      }

      if (ctor_amd_xe_utils_default.a.isString(formatter)) {
        var globalFunc = src_formats.get(formatter);
        cellLabel = globalFunc ? globalFunc(formatParams) : '';
      } else if (ctor_amd_xe_utils_default.a.isArray(formatter)) {
        var _globalFunc = src_formats.get(formatter[0]);

        cellLabel = _globalFunc ? _globalFunc.apply(void 0, [formatParams].concat(_toConsumableArray(formatter.slice(1)))) : '';
      } else {
        cellLabel = formatter(formatParams);
      }

      if (formatData) {
        formatData[colid] = {
          value: cellValue,
          label: cellLabel
        };
      }
    }

    return cellLabel;
  },
  setCellValue: function setCellValue(row, column, value) {
    return ctor_amd_xe_utils_default.a.set(row, column.property, value);
  },
  hasChildrenList: function hasChildrenList(item) {
    return item && item.children && item.children.length > 0;
  },
  getColMinWidth: function getColMinWidth($xetable, column) {
    var computeMaps = $xetable.computeMaps;
    var computeSortOpts = computeMaps.computeSortOpts,
        computeFilterOpts = computeMaps.computeFilterOpts,
        computeEditOpts = computeMaps.computeEditOpts;
    var sortOpts = computeSortOpts.value;
    var filterOpts = computeFilterOpts.value;
    var editOpts = computeEditOpts.value;
    var type = column.type,
        filters = column.filters,
        sortable = column.sortable,
        editRender = column.editRender,
        titleHelp = column.titleHelp;
    return 40 + getColFuncWidth(type === 'checkbox', 18) + getColFuncWidth(titleHelp, 18) + getColFuncWidth(filters && filterOpts.showIcon) + getColFuncWidth(sortable && sortOpts.showIcon) + getColFuncWidth(editRender && editOpts.showIcon, 32);
  },
  parseFile: function parseFile(file) {
    var name = file.name;
    var tIndex = ctor_amd_xe_utils_default.a.lastIndexOf(name, '.');
    var type = name.substring(tIndex + 1, name.length);
    var filename = name.substring(0, tIndex);
    return {
      filename: filename,
      type: type
    };
  },
  isNumVal: function isNumVal(num) {
    return !isNaN(parseFloat('' + num));
  }
};
/* harmony default export */ var utils = (UtilTools);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.constructor.js
var es_regexp_constructor = __webpack_require__("4d63");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.match.js
var es_string_match = __webpack_require__("466d");

// CONCATENATED MODULE: ./packages/tools/src/dom.ts







var browse = ctor_amd_xe_utils_default.a.browse();
var htmlElem = browse.isDoc ? document.querySelector('html') : 0;
var dom_bodyElem = browse.isDoc ? document.body : 0;
var reClsMap = {};

function getClsRE(cls) {
  if (!reClsMap[cls]) {
    reClsMap[cls] = new RegExp("(?:^|\\s)".concat(cls, "(?!\\S)"), 'g');
  }

  return reClsMap[cls];
}

function getNodeOffset(elem, container, rest) {
  if (elem) {
    var parentElem = elem.parentNode;
    rest.top += elem.offsetTop;
    rest.left += elem.offsetLeft;

    if (parentElem && parentElem !== htmlElem && parentElem !== dom_bodyElem) {
      rest.top -= parentElem.scrollTop;
      rest.left -= parentElem.scrollLeft;
    }

    if (container && (elem === container || elem.offsetParent === container) ? 0 : elem.offsetParent) {
      return getNodeOffset(elem.offsetParent, container, rest);
    }
  }

  return rest;
}

function isScale(val) {
  return val && /^\d+%$/.test(val);
}

function hasClass(elem, cls) {
  return elem && elem.className && elem.className.match && elem.className.match(getClsRE(cls));
}

function removeClass(elem, cls) {
  if (elem && hasClass(elem, cls)) {
    elem.className = elem.className.replace(getClsRE(cls), '');
  }
}

function getDomNode() {
  var documentElement = document.documentElement;
  var bodyElem = document.body;
  return {
    scrollTop: documentElement.scrollTop || bodyElem.scrollTop,
    scrollLeft: documentElement.scrollLeft || bodyElem.scrollLeft,
    visibleHeight: documentElement.clientHeight || bodyElem.clientHeight,
    visibleWidth: documentElement.clientWidth || bodyElem.clientWidth
  };
}

var DomTools = {
  browse: browse,
  isPx: function isPx(val) {
    return val && /^\d+(px)?$/.test(val);
  },
  isScale: isScale,
  hasClass: hasClass,
  removeClass: removeClass,
  addClass: function addClass(elem, cls) {
    if (elem && !hasClass(elem, cls)) {
      removeClass(elem, cls);
      elem.className = "".concat(elem.className, " ").concat(cls);
    }
  },
  updateCellTitle: function updateCellTitle(overflowElem, column) {
    var content = column.type === 'html' ? overflowElem.innerText : overflowElem.textContent;

    if (overflowElem.getAttribute('title') !== content) {
      overflowElem.setAttribute('title', content);
    }
  },
  getDomNode: getDomNode,

  /**
   * 检查触发源是否属于目标节点
   */
  getEventTargetNode: function getEventTargetNode(evnt, container, queryCls, queryMethod) {
    var targetElem;
    var target = evnt.target;

    while (target && target.nodeType && target !== document) {
      if (queryCls && hasClass(target, queryCls) && (!queryMethod || queryMethod(target))) {
        targetElem = target;
      } else if (target === container) {
        return {
          flag: queryCls ? !!targetElem : true,
          container: container,
          targetElem: targetElem
        };
      }

      target = target.parentNode;
    }

    return {
      flag: false
    };
  },

  /**
   * 获取元素相对于 document 的位置
   */
  getOffsetPos: function getOffsetPos(elem, container) {
    return getNodeOffset(elem, container, {
      left: 0,
      top: 0
    });
  },
  getAbsolutePos: function getAbsolutePos(elem) {
    var bounding = elem.getBoundingClientRect();
    var boundingTop = bounding.top;
    var boundingLeft = bounding.left;

    var _getDomNode = getDomNode(),
        scrollTop = _getDomNode.scrollTop,
        scrollLeft = _getDomNode.scrollLeft,
        visibleHeight = _getDomNode.visibleHeight,
        visibleWidth = _getDomNode.visibleWidth;

    return {
      boundingTop: boundingTop,
      top: scrollTop + boundingTop,
      boundingLeft: boundingLeft,
      left: scrollLeft + boundingLeft,
      visibleHeight: visibleHeight,
      visibleWidth: visibleWidth
    };
  },
  toView: function toView(elem) {
    var scrollIntoViewIfNeeded = 'scrollIntoViewIfNeeded';
    var scrollIntoView = 'scrollIntoView';

    if (elem) {
      if (elem[scrollIntoViewIfNeeded]) {
        elem[scrollIntoViewIfNeeded]();
      } else if (elem[scrollIntoView]) {
        elem[scrollIntoView]();
      }
    }
  },
  triggerEvent: function triggerEvent(targetElem, type) {
    var evnt;

    if (typeof Event === 'function') {
      evnt = new Event(type);
    } else {
      evnt = document.createEvent('Event');
      evnt.initEvent(type, true, true);
    }

    targetElem.dispatchEvent(evnt);
  }
};
/* harmony default export */ var dom = (DomTools);
// CONCATENATED MODULE: ./packages/tools/src/event.ts


 // 监听全局事件

var event_browse = dom.browse;
var wheelName = event_browse.firefox ? 'DOMMouseScroll' : 'mousewheel';
var eventStore = [];

function event_triggerEvent(evnt) {
  var isWheel = evnt.type === wheelName;
  eventStore.forEach(function (_ref) {
    var type = _ref.type,
        cb = _ref.cb;

    if (type === evnt.type || isWheel && type === 'mousewheel') {
      cb(evnt);
    }
  });
}

var GlobalEvent = {
  on: function on(comp, type, cb) {
    if (cb) {
      eventStore.push({
        comp: comp,
        type: type,
        cb: cb
      });
    }
  },
  off: function off(comp, type) {
    ctor_amd_xe_utils_default.a.remove(eventStore, function (item) {
      return item.comp === comp && item.type === type;
    });
  },
  trigger: event_triggerEvent
};

if (event_browse.isDoc) {
  if (!event_browse.msie) {
    document.addEventListener('copy', event_triggerEvent, false);
    document.addEventListener('cut', event_triggerEvent, false);
    document.addEventListener('paste', event_triggerEvent, false);
  }

  document.addEventListener('keydown', event_triggerEvent, false);
  document.addEventListener('contextmenu', event_triggerEvent, false);
  window.addEventListener('mousedown', event_triggerEvent, false);
  window.addEventListener('blur', event_triggerEvent, false);
  window.addEventListener('resize', event_triggerEvent, false);
  window.addEventListener(wheelName, ctor_amd_xe_utils_default.a.throttle(event_triggerEvent, 100, {
    leading: true,
    trailing: false
  }), {
    passive: true,
    capture: false
  });
}

/* harmony default export */ var src_event = (GlobalEvent);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.some.js
var es_array_some = __webpack_require__("45fc");

// CONCATENATED MODULE: ./packages/tools/src/resize.ts







/**
 * 监听 resize 事件
 * 如果项目中已使用了 resize-observer-polyfill，那么只需要将方法定义全局，该组件就会自动使用
 */

var resizeTimeout;
var resize_eventStore = [];
var defaultInterval = 500;

function eventHandle() {
  if (resize_eventStore.length) {
    resize_eventStore.forEach(function (item) {
      item.tarList.forEach(function (observer) {
        var target = observer.target,
            width = observer.width,
            heighe = observer.heighe;
        var clientWidth = target.clientWidth;
        var clientHeight = target.clientHeight;
        var rWidth = clientWidth && width !== clientWidth;
        var rHeight = clientHeight && heighe !== clientHeight;

        if (rWidth || rHeight) {
          observer.width = clientWidth;
          observer.heighe = clientHeight;
          requestAnimationFrame(item.callback);
        }
      });
    });
    /* eslint-disable @typescript-eslint/no-use-before-define */

    eventListener();
  }
}

function eventListener() {
  clearTimeout(resizeTimeout);
  resizeTimeout = setTimeout(eventHandle, conf.resizeInterval || defaultInterval);
}

var resize_XEResizeObserver = /*#__PURE__*/function () {
  function XEResizeObserver(callback) {
    _classCallCheck(this, XEResizeObserver);

    this.tarList = [];
    this.callback = callback;
  }

  _createClass(XEResizeObserver, [{
    key: "observe",
    value: function observe(target) {
      var _this = this;

      if (target) {
        var tarList = this.tarList;

        if (!tarList.some(function (observer) {
          return observer.target === target;
        })) {
          tarList.push({
            target: target,
            width: target.clientWidth,
            heighe: target.clientHeight
          });
        }

        if (!resize_eventStore.length) {
          eventListener();
        }

        if (!resize_eventStore.some(function (item) {
          return item === _this;
        })) {
          resize_eventStore.push(this);
        }
      }
    }
  }, {
    key: "unobserve",
    value: function unobserve(target) {
      ctor_amd_xe_utils_default.a.remove(resize_eventStore, function (item) {
        return item.tarList.some(function (observer) {
          return observer.target === target;
        });
      });
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      var _this2 = this;

      ctor_amd_xe_utils_default.a.remove(resize_eventStore, function (item) {
        return item === _this2;
      });
    }
  }]);

  return XEResizeObserver;
}();
function createResizeEvent(callback) {
  if (window.ResizeObserver) {
    return new window.ResizeObserver(callback);
  }

  return new resize_XEResizeObserver(callback);
}
// CONCATENATED MODULE: ./packages/tools/src/vn.ts
function getOnName(type) {
  return 'on' + type.substring(0, 1).toLocaleUpperCase() + type.substring(1);
}

var VNTools = {
  getOnName: getOnName
};
/* harmony default export */ var vn = (VNTools);
// CONCATENATED MODULE: ./packages/tools/index.ts





// CONCATENATED MODULE: ./packages/v-x-e-table/src/renderer.ts















var renderer_getOnName = VNTools.getOnName;
var elementDefaultModalEvents = 'input';
var elementModalEvents = {
  select: 'change'
};
var elementDefaultChangeEvents = 'change';
var elementChangeEvents = {
  input: 'input'
};
var componentDefaultChangeEvents = 'modelValue';
var inputEventTypes = ['input', 'textarea'];
var defaultCompProps = {
  transfer: true
};

function isEmptyValue(cellValue) {
  return cellValue === null || cellValue === undefined || cellValue === '';
}

function getChangeEvent(renderOpts) {
  return inputEventTypes.indexOf(renderOpts.name) > -1 ? 'input' : 'change';
}

function parseDate(value, props) {
  return value && props.valueFormat ? ctor_amd_xe_utils_default.a.toStringDate(value, props.valueFormat) : value;
}

function getFormatDate(value, props, defaultFormat) {
  var _props$dateConfig = props.dateConfig,
      dateConfig = _props$dateConfig === void 0 ? {} : _props$dateConfig;
  return ctor_amd_xe_utils_default.a.toDateString(parseDate(value, props), dateConfig.labelFormat || defaultFormat);
}

function getLabelFormatDate(value, props) {
  return getFormatDate(value, props, conf.i18n("vxe.input.date.labelFormat.".concat(props.type)));
}

function getComponentName(name) {
  return "vxe-".concat(name.replace('$', ''));
}

function getDefaultComponent(_ref) {
  var name = _ref.name;
  return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])(getComponentName(name));
}

function handleConfirmFilter(params, checked, option) {
  var $panel = params.$panel;
  $panel.changeOption({}, checked, option);
}

function getNativeAttrs(renderOpts) {
  var name = renderOpts.name,
      attrs = renderOpts.attrs;

  if (name === 'input') {
    attrs = Object.assign({
      type: 'text'
    }, attrs);
  }

  return attrs;
}

function getCellEditFilterProps(renderOpts, params, value, defaultProps) {
  return ctor_amd_xe_utils_default.a.assign({}, defaultCompProps, defaultProps, renderOpts.props, _defineProperty({}, componentDefaultChangeEvents, value));
}

function getComponentFormItemProps(renderOpts, params, value, defaultProps) {
  return ctor_amd_xe_utils_default.a.assign({}, defaultCompProps, defaultProps, renderOpts.props, _defineProperty({}, componentDefaultChangeEvents, value));
}
/**
 * 原生事件处理
 * @param renderOpts
 * @param params
 * @param modelFunc
 * @param changeFunc
 */


function getElementOns(renderOpts, params, modelFunc, changeFunc) {
  var name = renderOpts.name,
      events = renderOpts.events;
  var modelEvent = elementModalEvents[name] || elementDefaultModalEvents;
  var changeEvent = elementChangeEvents[name] || elementDefaultChangeEvents;
  var isSameEvent = changeEvent === modelEvent;
  var ons = {};

  if (events) {
    ctor_amd_xe_utils_default.a.objectEach(events, function (func, key) {
      ons[renderer_getOnName(key)] = function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        func.apply(void 0, [params].concat(args));
      };
    });
  }

  if (modelFunc) {
    ons[renderer_getOnName(modelEvent)] = function (targetEvnt) {
      modelFunc(targetEvnt);

      if (isSameEvent && changeFunc) {
        changeFunc(targetEvnt);
      }

      if (events && events[modelEvent]) {
        events[modelEvent](params, targetEvnt);
      }
    };
  }

  if (!isSameEvent && changeFunc) {
    ons[renderer_getOnName(changeEvent)] = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      changeFunc.apply(void 0, args);

      if (events && events[changeEvent]) {
        events[changeEvent].apply(events, [params].concat(args));
      }
    };
  }

  return ons;
}
/**
 * 组件事件处理
 * @param renderOpts
 * @param params
 * @param modelFunc
 * @param changeFunc
 */


function getComponentOns(renderOpts, params, modelFunc, changeFunc) {
  var events = renderOpts.events;
  var modelEvent = 'update:modelValue';
  var changeEvent = getChangeEvent(renderOpts);
  var ons = {};
  ctor_amd_xe_utils_default.a.objectEach(events, function (func, key) {
    ons[renderer_getOnName(key)] = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      func.apply(void 0, [params].concat(args));
    };
  });

  if (modelFunc) {
    ons[renderer_getOnName(modelEvent)] = function (targetEvnt) {
      modelFunc(targetEvnt);

      if (events && events[modelEvent]) {
        events[modelEvent](params, targetEvnt);
      }
    };
  }

  if (changeFunc) {
    ons[renderer_getOnName(changeEvent)] = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      changeFunc.apply(void 0, args);

      if (events && events[changeEvent]) {
        events[changeEvent].apply(events, [params].concat(args));
      }
    };
  }

  return ons;
}

function getEditOns(renderOpts, params) {
  var $table = params.$table,
      row = params.row,
      column = params.column;
  return getComponentOns(renderOpts, params, function (value) {
    // 处理 model 值双向绑定
    ctor_amd_xe_utils_default.a.set(row, column.property, value);
  }, function () {
    // 处理 change 事件相关逻辑
    $table.updateStatus(params);
  });
}

function getFilterOns(renderOpts, params, option) {
  return getComponentOns(renderOpts, params, function (value) {
    // 处理 model 值双向绑定
    option.data = value;
  }, function () {
    handleConfirmFilter(params, !ctor_amd_xe_utils_default.a.eqNull(option.data), option);
  });
}

function getItemOns(renderOpts, params) {
  var $form = params.$form,
      data = params.data,
      property = params.property;
  return getComponentOns(renderOpts, params, function (value) {
    // 处理 model 值双向绑定
    ctor_amd_xe_utils_default.a.set(data, property, value);
  }, function () {
    // 处理 change 事件相关逻辑
    $form.updateStatus(params);
  });
}

function isSyncCell(renderOpts, params) {
  return renderOpts.immediate || params.$type === 'cell';
}

function getNativeEditOns(renderOpts, params) {
  var $table = params.$table,
      row = params.row,
      column = params.column;
  var model = column.model;
  return getElementOns(renderOpts, params, function (evnt) {
    // 处理 model 值双向绑定
    var cellValue = evnt.target.value;

    if (isSyncCell(renderOpts, params)) {
      UtilTools.setCellValue(row, column, cellValue);
    } else {
      model.update = true;
      model.value = cellValue;
    }
  }, function (evnt) {
    // 处理 change 事件相关逻辑
    var cellValue = evnt.target.value;
    $table.updateStatus(params, cellValue);
  });
}

function getNativeFilterOns(renderOpts, params, option) {
  return getElementOns(renderOpts, params, function (evnt) {
    // 处理 model 值双向绑定
    option.data = evnt.target.value;
  }, function () {
    handleConfirmFilter(params, !ctor_amd_xe_utils_default.a.eqNull(option.data), option);
  });
}

function getNativeItemOns(renderOpts, params) {
  var $form = params.$form,
      data = params.data,
      property = params.property;
  return getElementOns(renderOpts, params, function (evnt) {
    // 处理 model 值双向绑定
    var itemValue = evnt.target.value;
    ctor_amd_xe_utils_default.a.set(data, property, itemValue);
  }, function () {
    // 处理 change 事件相关逻辑
    $form.updateStatus(params);
  });
}
/**
 * 单元格可编辑渲染-原生的标签
 * input、textarea、select
 */


function nativeEditRender(renderOpts, params) {
  var row = params.row,
      column = params.column;
  var name = renderOpts.name;
  var cellValue = isSyncCell(renderOpts, params) ? UtilTools.getCellValue(row, column) : column.model.value;
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(name, _objectSpread2(_objectSpread2({
    class: "vxe-default-".concat(name)
  }, getNativeAttrs(renderOpts)), {}, {
    value: cellValue
  }, getNativeEditOns(renderOpts, params)))];
}

function defaultEditRender(renderOpts, params) {
  var row = params.row,
      column = params.column;
  var cellValue = UtilTools.getCellValue(row, column);
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(getDefaultComponent(renderOpts), _objectSpread2(_objectSpread2({}, getCellEditFilterProps(renderOpts, params, cellValue)), getEditOns(renderOpts, params)))];
}

function defaultButtonEditRender(renderOpts, params) {
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('vxe-button', _objectSpread2(_objectSpread2({}, getCellEditFilterProps(renderOpts, params, null)), getComponentOns(renderOpts, params)))];
}

function defaultButtonsEditRender(renderOpts, params) {
  return renderOpts.children.map(function (childRenderOpts) {
    return defaultButtonEditRender(childRenderOpts, params)[0];
  });
}

function renderNativeOptgroups(renderOpts, params, renderOptionsMethods) {
  var optionGroups = renderOpts.optionGroups,
      _renderOpts$optionGro = renderOpts.optionGroupProps,
      optionGroupProps = _renderOpts$optionGro === void 0 ? {} : _renderOpts$optionGro;
  var groupOptions = optionGroupProps.options || 'options';
  var groupLabel = optionGroupProps.label || 'label';
  return optionGroups.map(function (group, gIndex) {
    return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('optgroup', {
      key: gIndex,
      label: group[groupLabel]
    }, renderOptionsMethods(group[groupOptions], renderOpts, params));
  });
}
/**
 * 渲染原生的 option 标签
 */


function renderNativeOptions(options, renderOpts, params) {
  var _renderOpts$optionPro = renderOpts.optionProps,
      optionProps = _renderOpts$optionPro === void 0 ? {} : _renderOpts$optionPro;
  var row = params.row,
      column = params.column;
  var labelProp = optionProps.label || 'label';
  var valueProp = optionProps.value || 'value';
  var disabledProp = optionProps.disabled || 'disabled';
  var cellValue = isSyncCell(renderOpts, params) ? UtilTools.getCellValue(row, column) : column.model.value;
  return options.map(function (option, oIndex) {
    return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('option', {
      key: oIndex,
      value: option[valueProp],
      disabled: option[disabledProp],

      /* eslint-disable eqeqeq */
      selected: option[valueProp] == cellValue
    }, option[labelProp]);
  });
}

function nativeFilterRender(renderOpts, params) {
  var column = params.column;
  var name = renderOpts.name;
  var attrs = getNativeAttrs(renderOpts);
  return column.filters.map(function (option, oIndex) {
    return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(name, _objectSpread2(_objectSpread2({
      key: oIndex,
      class: "vxe-default-".concat(name)
    }, attrs), {}, {
      value: option.data
    }, getNativeFilterOns(renderOpts, params, option)));
  });
}

function defaultFilterRender(renderOpts, params) {
  var column = params.column;
  return column.filters.map(function (option, oIndex) {
    var optionValue = option.data;
    return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(getDefaultComponent(renderOpts), _objectSpread2(_objectSpread2({
      key: oIndex
    }, getCellEditFilterProps(renderOpts, renderOpts, optionValue)), getFilterOns(renderOpts, params, option)));
  });
}

function handleFilterMethod(_ref2) {
  var option = _ref2.option,
      row = _ref2.row,
      column = _ref2.column;
  var data = option.data;
  var cellValue = ctor_amd_xe_utils_default.a.get(row, column.property);
  /* eslint-disable eqeqeq */

  return cellValue == data;
}

function nativeSelectEditRender(renderOpts, params) {
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('select', _objectSpread2(_objectSpread2({
    class: 'vxe-default-select'
  }, getNativeAttrs(renderOpts)), getNativeEditOns(renderOpts, params)), renderOpts.optionGroups ? renderNativeOptgroups(renderOpts, params, renderNativeOptions) : renderNativeOptions(renderOpts.options, renderOpts, params))];
}

function defaultSelectEditRender(renderOpts, params) {
  var row = params.row,
      column = params.column;
  var options = renderOpts.options,
      optionProps = renderOpts.optionProps,
      optionGroups = renderOpts.optionGroups,
      optionGroupProps = renderOpts.optionGroupProps;
  var cellValue = UtilTools.getCellValue(row, column);
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(getDefaultComponent(renderOpts), _objectSpread2(_objectSpread2({}, getCellEditFilterProps(renderOpts, params, cellValue, {
    options: options,
    optionProps: optionProps,
    optionGroups: optionGroups,
    optionGroupProps: optionGroupProps
  })), getEditOns(renderOpts, params)))];
}

function getSelectCellValue(renderOpts, _ref3) {
  var row = _ref3.row,
      column = _ref3.column;
  var _renderOpts$props = renderOpts.props,
      props = _renderOpts$props === void 0 ? {} : _renderOpts$props,
      options = renderOpts.options,
      optionGroups = renderOpts.optionGroups,
      _renderOpts$optionPro2 = renderOpts.optionProps,
      optionProps = _renderOpts$optionPro2 === void 0 ? {} : _renderOpts$optionPro2,
      _renderOpts$optionGro2 = renderOpts.optionGroupProps,
      optionGroupProps = _renderOpts$optionGro2 === void 0 ? {} : _renderOpts$optionGro2;
  var cellValue = ctor_amd_xe_utils_default.a.get(row, column.property);
  var selectItem;
  var labelProp = optionProps.label || 'label';
  var valueProp = optionProps.value || 'value';

  if (!isEmptyValue(cellValue)) {
    return ctor_amd_xe_utils_default.a.map(props.multiple ? cellValue : [cellValue], optionGroups ? function (value) {
      var groupOptions = optionGroupProps.options || 'options';

      for (var index = 0; index < optionGroups.length; index++) {
        /* eslint-disable eqeqeq */
        selectItem = ctor_amd_xe_utils_default.a.find(optionGroups[index][groupOptions], function (item) {
          return item[valueProp] == value;
        });

        if (selectItem) {
          break;
        }
      }

      return selectItem ? selectItem[labelProp] : value;
    } : function (value) {
      /* eslint-disable eqeqeq */
      selectItem = ctor_amd_xe_utils_default.a.find(options, function (item) {
        return item[valueProp] == value;
      });
      return selectItem ? selectItem[labelProp] : value;
    }).join(', ');
  }

  return null;
}
/**
 * 渲染表单-项
 * 用于渲染原生的标签
 */


function nativeItemRender(renderOpts, params) {
  var data = params.data,
      property = params.property;
  var name = renderOpts.name;
  var attrs = getNativeAttrs(renderOpts);
  var itemValue = ctor_amd_xe_utils_default.a.get(data, property);
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(name, _objectSpread2(_objectSpread2({
    class: "vxe-default-".concat(name)
  }, attrs), {}, {
    value: attrs && name === 'input' && (attrs.type === 'submit' || attrs.type === 'reset') ? null : itemValue
  }, getNativeItemOns(renderOpts, params)))];
}

function defaultItemRender(renderOpts, params) {
  var data = params.data,
      property = params.property;
  var itemValue = ctor_amd_xe_utils_default.a.get(data, property);
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(getDefaultComponent(renderOpts), _objectSpread2(_objectSpread2({}, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)))];
}

function defaultButtonItemRender(renderOpts, params) {
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-button'), _objectSpread2(_objectSpread2({}, getComponentFormItemProps(renderOpts, params, null)), getComponentOns(renderOpts, params)))];
}

function defaultButtonsItemRender(renderOpts, params) {
  return renderOpts.children.map(function (childRenderOpts) {
    return defaultButtonItemRender(childRenderOpts, params)[0];
  });
}
/**
 * 渲染原生的 select 标签
 */


function renderNativeFormOptions(options, renderOpts, params) {
  var data = params.data,
      property = params.property;
  var _renderOpts$optionPro3 = renderOpts.optionProps,
      optionProps = _renderOpts$optionPro3 === void 0 ? {} : _renderOpts$optionPro3;
  var labelProp = optionProps.label || 'label';
  var valueProp = optionProps.value || 'value';
  var disabledProp = optionProps.disabled || 'disabled';
  var cellValue = ctor_amd_xe_utils_default.a.get(data, property);
  return options.map(function (item, oIndex) {
    return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('option', {
      key: oIndex,
      value: item[valueProp],
      disabled: item[disabledProp],

      /* eslint-disable eqeqeq */
      selected: item[valueProp] == cellValue
    }, item[labelProp]);
  });
}

function handleExportSelectMethod(params) {
  var row = params.row,
      column = params.column,
      options = params.options;
  return options.original ? UtilTools.getCellValue(row, column) : getSelectCellValue(column.editRender || column.cellRender, params);
}
/**
 * 渲染表单-项中
 * 单选框和复选框
 */


function defaultFormItemRadioAndCheckboxRender(renderOpts, params) {
  var name = renderOpts.name,
      options = renderOpts.options,
      _renderOpts$optionPro4 = renderOpts.optionProps,
      optionProps = _renderOpts$optionPro4 === void 0 ? {} : _renderOpts$optionPro4;
  var data = params.data,
      property = params.property;
  var labelProp = optionProps.label || 'label';
  var valueProp = optionProps.value || 'value';
  var disabledProp = optionProps.disabled || 'disabled';
  var itemValue = ctor_amd_xe_utils_default.a.get(data, property);
  var compName = getComponentName(name);
  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])("".concat(compName, "-group")), _objectSpread2(_objectSpread2({}, getComponentFormItemProps(renderOpts, params, itemValue)), getItemOns(renderOpts, params)), {
    default: function _default() {
      return options.map(function (item, index) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])(compName), {
          key: index,
          label: item[valueProp],
          content: item[labelProp],
          disabled: item[disabledProp]
        });
      });
    }
  })];
}
/**
 * 内置的组件渲染
 */


var renderMap = {
  input: {
    autofocus: 'input',
    renderEdit: nativeEditRender,
    renderDefault: nativeEditRender,
    renderFilter: nativeFilterRender,
    filterMethod: handleFilterMethod,
    renderItemContent: nativeItemRender
  },
  textarea: {
    autofocus: 'textarea',
    renderEdit: nativeEditRender,
    renderItemContent: nativeItemRender
  },
  select: {
    renderEdit: nativeSelectEditRender,
    renderDefault: nativeSelectEditRender,
    renderCell: function renderCell(renderOpts, params) {
      return getSelectCellValue(renderOpts, params);
    },
    renderFilter: function renderFilter(renderOpts, params) {
      var column = params.column;
      return column.filters.map(function (option, oIndex) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('select', _objectSpread2(_objectSpread2({
          key: oIndex,
          class: 'vxe-default-select'
        }, getNativeAttrs(renderOpts)), getNativeFilterOns(renderOpts, params, option)), renderOpts.optionGroups ? renderNativeOptgroups(renderOpts, params, renderNativeOptions) : renderNativeOptions(renderOpts.options, renderOpts, params));
      });
    },
    filterMethod: handleFilterMethod,
    renderItemContent: function renderItemContent(renderOpts, params) {
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('select', _objectSpread2(_objectSpread2({
        class: 'vxe-default-select'
      }, getNativeAttrs(renderOpts)), getNativeItemOns(renderOpts, params)), renderOpts.optionGroups ? renderNativeOptgroups(renderOpts, params, renderNativeFormOptions) : renderNativeFormOptions(renderOpts.options, renderOpts, params))];
    },
    cellExportMethod: handleExportSelectMethod
  },
  $input: {
    autofocus: '.vxe-input--inner',
    renderEdit: defaultEditRender,
    renderCell: function renderCell(renderOpts, params) {
      var _renderOpts$props2 = renderOpts.props,
          props = _renderOpts$props2 === void 0 ? {} : _renderOpts$props2;
      var row = params.row,
          column = params.column;
      var digits = props.digits || conf.input.digits;
      var cellValue = ctor_amd_xe_utils_default.a.get(row, column.property);

      if (cellValue) {
        switch (props.type) {
          case 'date':
          case 'week':
          case 'month':
          case 'year':
            cellValue = getLabelFormatDate(cellValue, props);
            break;

          case 'float':
            cellValue = ctor_amd_xe_utils_default.a.toFixed(ctor_amd_xe_utils_default.a.floor(cellValue, digits), digits);
            break;
        }
      }

      return cellValue;
    },
    renderDefault: defaultEditRender,
    renderFilter: defaultFilterRender,
    filterMethod: handleFilterMethod,
    renderItemContent: defaultItemRender
  },
  $textarea: {
    autofocus: '.vxe-textarea--inner',
    renderItemContent: defaultItemRender
  },
  $button: {
    renderDefault: defaultButtonEditRender,
    renderItemContent: defaultButtonItemRender
  },
  $buttons: {
    renderDefault: defaultButtonsEditRender,
    renderItemContent: defaultButtonsItemRender
  },
  $select: {
    autofocus: '.vxe-input--inner',
    renderEdit: defaultSelectEditRender,
    renderDefault: defaultSelectEditRender,
    renderCell: function renderCell(renderOpts, params) {
      return getSelectCellValue(renderOpts, params);
    },
    renderFilter: function renderFilter(renderOpts, params) {
      var column = params.column;
      var options = renderOpts.options,
          optionProps = renderOpts.optionProps,
          optionGroups = renderOpts.optionGroups,
          optionGroupProps = renderOpts.optionGroupProps;
      return column.filters.map(function (option, oIndex) {
        var optionValue = option.data;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(getDefaultComponent(renderOpts), _objectSpread2(_objectSpread2({
          key: oIndex
        }, getCellEditFilterProps(renderOpts, params, optionValue, {
          options: options,
          optionProps: optionProps,
          optionGroups: optionGroups,
          optionGroupProps: optionGroupProps
        })), getFilterOns(renderOpts, params, option)));
      });
    },
    filterMethod: handleFilterMethod,
    renderItemContent: function renderItemContent(renderOpts, params) {
      var data = params.data,
          property = params.property;
      var options = renderOpts.options,
          optionProps = renderOpts.optionProps,
          optionGroups = renderOpts.optionGroups,
          optionGroupProps = renderOpts.optionGroupProps;
      var itemValue = ctor_amd_xe_utils_default.a.get(data, property);
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(getDefaultComponent(renderOpts), _objectSpread2(_objectSpread2({}, getComponentFormItemProps(renderOpts, params, itemValue, {
        options: options,
        optionProps: optionProps,
        optionGroups: optionGroups,
        optionGroupProps: optionGroupProps
      })), getItemOns(renderOpts, params)))];
    },
    cellExportMethod: handleExportSelectMethod
  },
  $radio: {
    autofocus: '.vxe-radio--input',
    renderItemContent: defaultFormItemRadioAndCheckboxRender
  },
  $checkbox: {
    autofocus: '.vxe-checkbox--input',
    renderItemContent: defaultFormItemRadioAndCheckboxRender
  },
  $switch: {
    autofocus: '.vxe-switch--button',
    renderEdit: defaultEditRender,
    renderDefault: defaultEditRender,
    renderItemContent: defaultItemRender
  }
};
/**
 * 全局渲染器
 */

var renderer = {
  mixin: function mixin(opts) {
    ctor_amd_xe_utils_default.a.each(opts, function (options, name) {
      return renderer.add(name, options);
    });
    return renderer;
  },
  get: function get(name) {
    return renderMap[name] || null;
  },
  add: function add(name, options) {
    if (name && options) {
      var renders = renderMap[name];

      if (renders) {
        Object.assign(renders, options);
      } else {
        renderMap[name] = options;
      }
    }

    return renderer;
  },
  delete: function _delete(name) {
    delete renderMap[name];
    return renderer;
  }
};
/* harmony default export */ var src_renderer = (renderer);
// CONCATENATED MODULE: ./packages/v-x-e-table/src/commands.ts

var commands = new store();
/* harmony default export */ var src_commands = (commands);
// CONCATENATED MODULE: ./packages/v-x-e-table/src/menus.ts

var menus = new store();
/* harmony default export */ var src_menus = (menus);
// CONCATENATED MODULE: ./packages/v-x-e-table/src/hooks.ts

var hooks = new store();
/* harmony default export */ var src_hooks = (hooks);
// CONCATENATED MODULE: ./packages/v-x-e-table/src/setup.ts


/**
 * 全局参数设置
 */

var setup_setup = function setup(options) {
  return ctor_amd_xe_utils_default.a.merge(GlobalConfig, options);
};

/* harmony default export */ var src_setup = (setup_setup);
// CONCATENATED MODULE: ./packages/v-x-e-table/index.ts













var installedPlugins = [];

function getExportOrImpotType(types, flag) {
  var rest = [];
  ctor_amd_xe_utils_default.a.objectEach(types, function (val, type) {
    if (val === 0 || val === flag) {
      rest.push(type);
    }
  });
  return rest;
}

var v_x_e_table_VXETableInstance = /*#__PURE__*/function () {
  function VXETableInstance() {
    _classCallCheck(this, VXETableInstance);

    this.v = 'v4';
    this.setup = src_setup;
    this.interceptor = src_interceptor;
    this.renderer = src_renderer;
    this.commands = src_commands;
    this.formats = src_formats;
    this.menus = src_menus;
    this.hooks = src_hooks;
  }
  /**
   * 获取当前的 zIndex
   */


  _createClass(VXETableInstance, [{
    key: "use",
    value: function use(Plugin, options) {
      /* eslint-disable @typescript-eslint/no-use-before-define */
      if (Plugin && Plugin.install) {
        if (installedPlugins.indexOf(Plugin) === -1) {
          Plugin.install(VXETable, options);
          installedPlugins.push(Plugin);
        }
      }

      return VXETable;
    }
  }, {
    key: "t",
    value: function t(key) {
      return conf.i18n(key);
    }
  }, {
    key: "zIndex",
    get: function get() {
      return UtilTools.getLastZIndex;
    }
    /**
     * 获取下一个 zIndex
     */

  }, {
    key: "nextZIndex",
    get: function get() {
      return UtilTools.nextZIndex;
    }
    /**
     * 获取所有导出类型
     */

  }, {
    key: "exportTypes",
    get: function get() {
      return getExportOrImpotType(conf.export.types, 1);
    }
    /**
     * 获取所有导入类型
     */

  }, {
    key: "importTypes",
    get: function get() {
      return getExportOrImpotType(conf.export.types, 2);
    }
  }]);

  return VXETableInstance;
}();
var VXETable = new v_x_e_table_VXETableInstance();
/* harmony default export */ var v_x_e_table = (VXETable);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.every.js
var es_array_every = __webpack_require__("a623");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("caad");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js
var es_array_reduce = __webpack_require__("13d5");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.splice.js
var es_array_splice = __webpack_require__("a434");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.map.js
var es_map = __webpack_require__("4ec9");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("2532");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.trim.js
var es_string_trim = __webpack_require__("498a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.fixed.js
var es_string_fixed = __webpack_require__("c7cd");

// CONCATENATED MODULE: ./packages/hooks/size.ts

function useSize(props) {
  // 组件尺寸上下文
  var xesize = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('xesize', null);
  var computeSize = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
    return props.size || (xesize ? xesize.value : null);
  });
  Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('xesize', computeSize);
  return computeSize;
}
// CONCATENATED MODULE: ./packages/table/src/columnInfo.ts









var columnInfo_toFilters = UtilTools.toFilters;
var columnInfo_ColumnInfo = /*#__PURE__*/function () {
  /* eslint-disable @typescript-eslint/no-use-before-define */
  function ColumnInfo($xetable, _vm) {
    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        renderHeader = _ref.renderHeader,
        renderCell = _ref.renderCell,
        renderFooter = _ref.renderFooter,
        renderData = _ref.renderData;

    _classCallCheck(this, ColumnInfo);

    var $xegrid = $xetable.xegrid;
    var formatter = _vm.formatter;
    var visible = ctor_amd_xe_utils_default.a.isBoolean(_vm.visible) ? _vm.visible : true;

    if (false) { var _globalFunc, globalFunc, treeOpts, computeTreeOpts, treeConfig, tableProps, tableComputeMaps, types; }

    Object.assign(this, {
      // 基本属性
      type: _vm.type,
      property: _vm.field,
      title: _vm.title,
      width: _vm.width,
      minWidth: _vm.minWidth,
      resizable: _vm.resizable,
      fixed: _vm.fixed,
      align: _vm.align,
      headerAlign: _vm.headerAlign,
      footerAlign: _vm.footerAlign,
      showOverflow: _vm.showOverflow,
      showHeaderOverflow: _vm.showHeaderOverflow,
      showFooterOverflow: _vm.showFooterOverflow,
      className: _vm.className,
      headerClassName: _vm.headerClassName,
      footerClassName: _vm.footerClassName,
      formatter: formatter,
      sortable: _vm.sortable,
      sortBy: _vm.sortBy,
      filters: columnInfo_toFilters(_vm.filters),
      filterMultiple: ctor_amd_xe_utils_default.a.isBoolean(_vm.filterMultiple) ? _vm.filterMultiple : true,
      filterMethod: _vm.filterMethod,
      filterRender: _vm.filterRender,
      treeNode: _vm.treeNode,
      cellType: _vm.cellType,
      cellRender: _vm.cellRender,
      editRender: _vm.editRender,
      contentRender: _vm.contentRender,
      exportMethod: _vm.exportMethod,
      footerExportMethod: _vm.footerExportMethod,
      titleHelp: _vm.titleHelp,
      // 自定义参数
      params: _vm.params,
      // 渲染属性
      id: _vm.colId || ctor_amd_xe_utils_default.a.uniqueId('col_'),
      parentId: null,
      visible: visible,
      halfVisible: false,
      defaultVisible: visible,
      checked: false,
      halfChecked: false,
      disabled: false,
      level: 1,
      rowSpan: 1,
      colSpan: 1,
      order: null,
      renderWidth: 0,
      renderHeight: 0,
      resizeWidth: 0,
      renderLeft: 0,
      renderArgs: [],
      model: {},
      renderHeader: renderHeader || _vm.renderHeader,
      renderCell: renderCell || _vm.renderCell,
      renderFooter: renderFooter || _vm.renderFooter,
      renderData: renderData,
      // 单元格插槽，只对 grid 有效
      slots: _vm.slots
    });

    if ($xegrid) {
      var gridComputeMaps = $xegrid.computeMaps;
      var computeProxyOpts = gridComputeMaps.computeProxyOpts;
      var proxyOpts = computeProxyOpts.value;

      if (proxyOpts.beforeColumn) {
        proxyOpts.beforeColumn({
          $grid: $xegrid,
          column: this
        });
      }
    }
  }

  _createClass(ColumnInfo, [{
    key: "getTitle",
    value: function getTitle() {
      return UtilTools.getFuncText(this.title || (this.type === 'seq' ? conf.i18n('vxe.table.seqTitle') : ''));
    }
  }, {
    key: "getKey",
    value: function getKey() {
      return this.property || (this.type ? "type=".concat(this.type) : null);
    }
  }, {
    key: "update",
    value: function update(name, value) {
      // 不支持双向的属性
      if (name !== 'filters') {
        if (name === 'field') {
          this.property = value;
        } else {
          this[name] = value;
        }
      }
    }
  }]);

  return ColumnInfo;
}();
// CONCATENATED MODULE: ./packages/table/src/util.ts










/**
 * 生成行的唯一主键
 */

function getRowUniqueId() {
  return ctor_amd_xe_utils_default.a.uniqueId('row_');
} // 行主键 key

function getRowkey($xetable) {
  var props = $xetable.props;
  var rowId = props.rowId;
  return rowId || '_XID';
} // 行主键 value

function getRowid($xetable, row) {
  var rowId = ctor_amd_xe_utils_default.a.get(row, getRowkey($xetable));
  return rowId ? encodeURIComponent(rowId) : '';
}
/**
 * 单元格的值为：'' | null | undefined 时都属于空值
 */

function eqCellNull(cellValue) {
  return cellValue === '' || ctor_amd_xe_utils_default.a.eqNull(cellValue);
}
function isColumnInfo(column) {
  return column && (column.constructor === columnInfo_ColumnInfo || column instanceof columnInfo_ColumnInfo);
}
function util_createColumn($xetable, options, renderOptions) {
  return isColumnInfo(options) ? options : new columnInfo_ColumnInfo($xetable, options, renderOptions);
}
function watchColumn(props, column) {
  Object.keys(props).forEach(function (name) {
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props[name];
    }, function (value) {
      column.update(name, value);
    });
  });
}
function assemColumn($xetable, $el, column, colgroup) {
  var reactData = $xetable.reactData;
  var staticColumns = reactData.staticColumns;
  var parentElem = $el.parentNode;
  var parentColumn = colgroup ? colgroup.column : null;
  var parentCols = parentColumn ? parentColumn.children : staticColumns;

  if (parentElem && parentCols) {
    parentCols.splice(ctor_amd_xe_utils_default.a.arrayIndexOf(parentElem.children, $el), 0, column);
    reactData.staticColumns = staticColumns.slice(0);
  }
}
function destroyColumn($xetable, column) {
  var reactData = $xetable.reactData;
  var staticColumns = reactData.staticColumns;
  var matchObj = ctor_amd_xe_utils_default.a.findTree(staticColumns, function (item) {
    return item.id === column.id;
  }, {
    children: 'children'
  });

  if (matchObj) {
    matchObj.items.splice(matchObj.index, 1);
  }

  reactData.staticColumns = staticColumns.slice(0);
}
function mergeBodyMethod(mergeList, _rowIndex, _columnIndex) {
  for (var mIndex = 0; mIndex < mergeList.length; mIndex++) {
    var _mergeList$mIndex = mergeList[mIndex],
        mergeRowIndex = _mergeList$mIndex.row,
        mergeColIndex = _mergeList$mIndex.col,
        mergeRowspan = _mergeList$mIndex.rowspan,
        mergeColspan = _mergeList$mIndex.colspan;

    if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {
      if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {
        return {
          rowspan: mergeRowspan,
          colspan: mergeColspan
        };
      }

      if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {
        return {
          rowspan: 0,
          colspan: 0
        };
      }
    }
  }
}
function clearTableDefaultStatus($xetable) {
  var props = $xetable.props,
      internalData = $xetable.internalData;
  internalData.inited = false;
  $xetable.clearSort();
  $xetable.clearCurrentRow();
  $xetable.clearCurrentColumn();
  $xetable.clearRadioRow();
  $xetable.clearRadioReserve();
  $xetable.clearCheckboxRow();
  $xetable.clearCheckboxReserve();
  $xetable.clearRowExpand();
  $xetable.clearTreeExpand();
  $xetable.clearTreeExpandReserve();

  if ($xetable.clearFilter) {
    $xetable.clearFilter();
  }

  if ($xetable.clearSelected && (props.keyboardConfig || props.mouseConfig)) {
    $xetable.clearSelected();
  }

  if ($xetable.clearCellAreas && props.mouseConfig) {
    $xetable.clearCellAreas();
    $xetable.clearCopyCellArea();
  }

  return $xetable.clearScroll();
}
function clearTableAllStatus($xetable) {
  if ($xetable.clearFilter) {
    return $xetable.clearFilter();
  }

  return clearTableDefaultStatus($xetable);
}
function rowToVisible($xetable, row) {
  var reactData = $xetable.reactData,
      internalData = $xetable.internalData,
      refMaps = $xetable.refMaps;
  var refTableBody = refMaps.refTableBody;
  var scrollYLoad = reactData.scrollYLoad;
  var afterFullData = internalData.afterFullData,
      scrollYStore = internalData.scrollYStore;
  var tableBody = refTableBody.value;
  var bodyElem = tableBody.$el;
  var trElem = bodyElem.querySelector("[data-rowid=\"".concat(getRowid($xetable, row), "\"]"));

  if (trElem) {
    var bodyHeight = bodyElem.clientHeight;
    var bodySrcollTop = bodyElem.scrollTop;
    var trOffsetParent = trElem.offsetParent;
    var trOffsetTop = trElem.offsetTop + (trOffsetParent ? trOffsetParent.offsetTop : 0);
    var trHeight = trElem.clientHeight; // 检测行是否在可视区中

    if (trOffsetTop < bodySrcollTop || trOffsetTop > bodySrcollTop + bodyHeight) {
      // 向上定位
      return $xetable.scrollTo(null, trOffsetTop);
    } else if (trOffsetTop + trHeight >= bodyHeight + bodySrcollTop) {
      // 向下定位
      return $xetable.scrollTo(null, bodySrcollTop + trHeight);
    }
  } else {
    // 如果是虚拟渲染跨行滚动
    if (scrollYLoad) {
      return $xetable.scrollTo(null, (afterFullData.indexOf(row) - 1) * scrollYStore.rowHeight);
    }
  }

  return Promise.resolve();
}
function colToVisible($xetable, column) {
  var reactData = $xetable.reactData,
      internalData = $xetable.internalData,
      refMaps = $xetable.refMaps;
  var refTableBody = refMaps.refTableBody;
  var scrollXLoad = reactData.scrollXLoad;
  var visibleColumn = internalData.visibleColumn;
  var tableBody = refTableBody.value;
  var bodyElem = tableBody.$el;
  var tdElem = bodyElem.querySelector(".".concat(column.id));

  if (tdElem) {
    var bodyWidth = bodyElem.clientWidth;
    var bodySrcollLeft = bodyElem.scrollLeft;
    var tdOffsetParent = tdElem.offsetParent;
    var tdOffsetLeft = tdElem.offsetLeft + (tdOffsetParent ? tdOffsetParent.offsetLeft : 0);
    var tdWidth = tdElem.clientWidth; // 检测行是否在可视区中

    if (tdOffsetLeft < bodySrcollLeft || tdOffsetLeft > bodySrcollLeft + bodyWidth) {
      // 向左定位
      return $xetable.scrollTo(tdOffsetLeft);
    } else if (tdOffsetLeft + tdWidth >= bodyWidth + bodySrcollLeft) {
      // 向右定位
      return $xetable.scrollTo(bodySrcollLeft + tdWidth);
    }
  } else {
    // 如果是虚拟渲染跨行滚动
    if (scrollXLoad) {
      var scrollLeft = 0;

      for (var index = 0; index < visibleColumn.length; index++) {
        if (visibleColumn[index] === column) {
          break;
        }

        scrollLeft += visibleColumn[index].renderWidth;
      }

      return $xetable.scrollTo(scrollLeft);
    }
  }

  return Promise.resolve();
}
// CONCATENATED MODULE: ./packages/table/src/cell.ts












function renderHelpIcon(params) {
  var $table = params.$table,
      column = params.column;
  var titleHelp = column.titleHelp;
  return titleHelp ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
    class: ['vxe-cell-help-icon', titleHelp.icon || conf.icon.TABLE_HELP],
    onMouseenter: function onMouseenter(evnt) {
      $table.triggerHeaderHelpEvent(evnt, params);
    },
    onMouseleave: function onMouseleave(evnt) {
      $table.handleTargetLeaveEvent(evnt);
    }
  })] : [];
}

function renderTitleContent(params, content) {
  var $table = params.$table,
      column = params.column;
  var props = $table.props,
      internalData = $table.internalData,
      computeMaps = $table.computeMaps;
  var computeTooltipOpts = computeMaps.computeTooltipOpts;
  var allColumnHeaderOverflow = props.showHeaderOverflow;
  var showHeaderOverflow = column.showHeaderOverflow;
  var tooltipOpts = computeTooltipOpts.value;
  var enabled = tooltipOpts.enabled;
  var headOverflow = ctor_amd_xe_utils_default.a.isUndefined(showHeaderOverflow) || ctor_amd_xe_utils_default.a.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;
  var showTitle = headOverflow === 'title';
  var showTooltip = headOverflow === true || headOverflow === 'tooltip';
  var ons = {};

  if (showTitle || showTooltip || enabled) {
    ons.onMouseenter = function (evnt) {
      if (internalData._isResize) {
        return;
      }

      if (showTitle) {
        DomTools.updateCellTitle(evnt.currentTarget, column);
      } else if (showTooltip || enabled) {
        $table.triggerHeaderTooltipEvent(evnt, params);
      }
    };
  }

  if (showTooltip || enabled) {
    ons.onMouseleave = function (evnt) {
      if (internalData._isResize) {
        return;
      }

      if (showTooltip || enabled) {
        $table.handleTargetLeaveEvent(evnt);
      }
    };
  }

  return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', _objectSpread2({
    class: 'vxe-cell--title'
  }, ons), content)];
}

function getFooterContent(params) {
  var column = params.column,
      _columnIndex = params._columnIndex,
      items = params.items;
  var slots = column.slots,
      editRender = column.editRender,
      cellRender = column.cellRender;
  var renderOpts = editRender || cellRender;

  if (slots && slots.footer) {
    return slots.footer(params);
  }

  if (renderOpts) {
    var compConf = v_x_e_table.renderer.get(renderOpts.name);

    if (compConf && compConf.renderFooter) {
      return compConf.renderFooter(renderOpts, params);
    }
  }

  return [UtilTools.formatText(items[_columnIndex], 1)];
}

function getDefaultCellLabel(params) {
  var row = params.row,
      column = params.column;
  return UtilTools.formatText(UtilTools.getCellLabel(row, column, params), 1);
}

var Cell = {
  createColumn: function createColumn($xetable, _vm) {
    var type = _vm.type,
        sortable = _vm.sortable,
        filters = _vm.filters,
        editRender = _vm.editRender,
        treeNode = _vm.treeNode;
    var props = $xetable.props,
        computeMaps = $xetable.computeMaps;
    var editConfig = props.editConfig;
    var computeEditOpts = computeMaps.computeEditOpts,
        computeCheckboxOpts = computeMaps.computeCheckboxOpts;
    var checkboxOpts = computeCheckboxOpts.value;
    var editOpts = computeEditOpts.value;
    var renMaps = {
      renderHeader: Cell.renderDefaultHeader,
      renderCell: treeNode ? Cell.renderTreeCell : Cell.renderDefaultCell,
      renderFooter: Cell.renderDefaultFooter
    };

    switch (type) {
      case 'seq':
        renMaps.renderHeader = Cell.renderIndexHeader;
        renMaps.renderCell = treeNode ? Cell.renderTreeIndexCell : Cell.renderIndexCell;
        break;

      case 'radio':
        renMaps.renderHeader = Cell.renderRadioHeader;
        renMaps.renderCell = treeNode ? Cell.renderTreeRadioCell : Cell.renderRadioCell;
        break;

      case 'checkbox':
        renMaps.renderHeader = Cell.renderSelectionHeader;
        renMaps.renderCell = checkboxOpts.checkField ? treeNode ? Cell.renderTreeSelectionCellByProp : Cell.renderSelectionCellByProp : treeNode ? Cell.renderTreeSelectionCell : Cell.renderSelectionCell;
        break;

      case 'expand':
        renMaps.renderCell = Cell.renderExpandCell;
        renMaps.renderData = Cell.renderExpandData;
        break;

      case 'html':
        renMaps.renderCell = treeNode ? Cell.renderTreeHTMLCell : Cell.renderHTMLCell;

        if (filters && sortable) {
          renMaps.renderHeader = Cell.renderSortAndFilterHeader;
        } else if (sortable) {
          renMaps.renderHeader = Cell.renderSortHeader;
        } else if (filters) {
          renMaps.renderHeader = Cell.renderFilterHeader;
        }

        break;

      default:
        if (editConfig && editRender) {
          renMaps.renderHeader = Cell.renderEditHeader;
          renMaps.renderCell = editOpts.mode === 'cell' ? treeNode ? Cell.renderTreeCellEdit : Cell.renderCellEdit : treeNode ? Cell.renderTreeRowEdit : Cell.renderRowEdit;
        } else if (filters && sortable) {
          renMaps.renderHeader = Cell.renderSortAndFilterHeader;
        } else if (sortable) {
          renMaps.renderHeader = Cell.renderSortHeader;
        } else if (filters) {
          renMaps.renderHeader = Cell.renderFilterHeader;
        }

    }

    return util_createColumn($xetable, _vm, renMaps);
  },

  /**
   * 单元格
   */
  renderHeaderTitle: function renderHeaderTitle(params) {
    var column = params.column;
    var slots = column.slots,
        editRender = column.editRender,
        cellRender = column.cellRender;
    var renderOpts = editRender || cellRender;

    if (slots && slots.header) {
      return renderTitleContent(params, slots.header(params));
    }

    if (renderOpts) {
      var compConf = v_x_e_table.renderer.get(renderOpts.name);

      if (compConf && compConf.renderHeader) {
        return renderTitleContent(params, compConf.renderHeader(renderOpts, params));
      }
    }

    return renderTitleContent(params, UtilTools.formatText(column.getTitle(), 1));
  },
  renderDefaultHeader: function renderDefaultHeader(params) {
    return renderHelpIcon(params).concat(Cell.renderHeaderTitle(params));
  },
  renderDefaultCell: function renderDefaultCell(params) {
    var column = params.column;
    var slots = column.slots,
        editRender = column.editRender,
        cellRender = column.cellRender;
    var renderOpts = editRender || cellRender;

    if (slots && slots.default) {
      return slots.default(params);
    }

    if (renderOpts) {
      var funName = editRender ? 'renderCell' : 'renderDefault';
      var compConf = v_x_e_table.renderer.get(renderOpts.name);
      var compFn = compConf ? compConf[funName] : null;

      if (compFn) {
        return compFn(renderOpts, Object.assign({
          $type: editRender ? 'edit' : 'cell'
        }, params));
      }
    }

    return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-cell--label'
    }, getDefaultCellLabel(params))];
  },
  renderTreeCell: function renderTreeCell(params) {
    return Cell.renderTreeIcon(params, Cell.renderDefaultCell(params));
  },
  renderDefaultFooter: function renderDefaultFooter(params) {
    return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-cell--item'
    }, getFooterContent(params))];
  },

  /**
   * 树节点
   */
  renderTreeIcon: function renderTreeIcon(params, cellVNodes) {
    var $table = params.$table,
        isHidden = params.isHidden;
    var reactData = $table.reactData,
        computeMaps = $table.computeMaps;
    var computeTreeOpts = computeMaps.computeTreeOpts;
    var treeExpandeds = reactData.treeExpandeds,
        treeLazyLoadeds = reactData.treeLazyLoadeds;
    var treeOpts = computeTreeOpts.value;
    var row = params.row,
        level = params.level;
    var children = treeOpts.children,
        hasChild = treeOpts.hasChild,
        indent = treeOpts.indent,
        lazy = treeOpts.lazy,
        trigger = treeOpts.trigger,
        iconLoaded = treeOpts.iconLoaded,
        showIcon = treeOpts.showIcon,
        iconOpen = treeOpts.iconOpen,
        iconClose = treeOpts.iconClose;
    var rowChilds = row[children];
    var hasLazyChilds = false;
    var isAceived = false;
    var isLazyLoaded = false;
    var ons = {};

    if (!isHidden) {
      isAceived = treeExpandeds.indexOf(row) > -1;

      if (lazy) {
        isLazyLoaded = treeLazyLoadeds.indexOf(row) > -1;
        hasLazyChilds = row[hasChild];
      }
    }

    if (!trigger || trigger === 'default') {
      ons.onClick = function (evnt) {
        return $table.triggerTreeExpandEvent(evnt, params);
      };
    }

    return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
      class: ['vxe-cell--tree-node', {
        'is--active': isAceived
      }],
      style: {
        paddingLeft: "".concat(level * indent, "px")
      }
    }, [showIcon && (rowChilds && rowChilds.length || hasLazyChilds) ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', _objectSpread2({
      class: 'vxe-tree--btn-wrapper'
    }, ons), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
      class: ['vxe-tree--node-btn', isLazyLoaded ? iconLoaded || conf.icon.TABLE_TREE_LOADED : isAceived ? iconOpen || conf.icon.TABLE_TREE_OPEN : iconClose || conf.icon.TABLE_TREE_CLOSE]
    })])] : null, Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
      class: 'vxe-tree-cell'
    }, cellVNodes)])];
  },

  /**
   * 索引
   */
  renderIndexHeader: function renderIndexHeader(params) {
    var column = params.column;
    var slots = column.slots;
    return renderTitleContent(params, slots && slots.header ? slots.header(params) : UtilTools.formatText(column.getTitle(), 1));
  },
  renderIndexCell: function renderIndexCell(params) {
    var $table = params.$table,
        column = params.column;
    var computeMaps = $table.computeMaps;
    var computeSeqOpts = computeMaps.computeSeqOpts;
    var seqOpts = computeSeqOpts.value;
    var slots = column.slots;

    if (slots && slots.default) {
      return slots.default(params);
    }

    var $seq = params.$seq,
        seq = params.seq,
        level = params.level;
    var seqMethod = seqOpts.seqMethod;
    return [UtilTools.formatText(seqMethod ? seqMethod(params) : level ? "".concat($seq, ".").concat(seq) : seqOpts.startIndex + seq, 1)];
  },
  renderTreeIndexCell: function renderTreeIndexCell(params) {
    return Cell.renderTreeIcon(params, Cell.renderIndexCell(params));
  },

  /**
   * 单选
   */
  renderRadioHeader: function renderRadioHeader(params) {
    var column = params.column;
    var slots = column.slots;
    return renderTitleContent(params, slots && slots.header ? slots.header(params) : [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-radio--label'
    }, UtilTools.formatText(column.getTitle(), 1))]);
  },
  renderRadioCell: function renderRadioCell(params) {
    var $table = params.$table,
        column = params.column,
        isHidden = params.isHidden;
    var reactData = $table.reactData,
        computeMaps = $table.computeMaps;
    var computeRadioOpts = computeMaps.computeRadioOpts;
    var selectRow = reactData.selectRow;
    var radioOpts = computeRadioOpts.value;
    var slots = column.slots;
    var labelField = radioOpts.labelField,
        checkMethod = radioOpts.checkMethod;
    var row = params.row;
    var isChecked = row === selectRow;
    var isDisabled = !!checkMethod;
    var ons;

    if (!isHidden) {
      ons = {
        onClick: function onClick(evnt) {
          if (!isDisabled) {
            $table.triggerRadioRowEvent(evnt, params);
          }
        }
      };

      if (checkMethod) {
        isDisabled = !checkMethod({
          row: row
        });
      }
    }

    return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', _objectSpread2({
      class: ['vxe-cell--radio', {
        'is--checked': isChecked,
        'is--disabled': isDisabled
      }]
    }, ons), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-radio--icon vxe-radio--checked-icon'
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-radio--icon vxe-radio--unchecked-icon'
    })].concat(slots && slots.default ? slots.default(params) : labelField ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-radio--label'
    }, ctor_amd_xe_utils_default.a.get(row, labelField))] : []))];
  },
  renderTreeRadioCell: function renderTreeRadioCell(params) {
    return Cell.renderTreeIcon(params, Cell.renderRadioCell(params));
  },

  /**
   * 多选
   */
  renderSelectionHeader: function renderSelectionHeader(params) {
    var $table = params.$table,
        column = params.column,
        isHidden = params.isHidden;
    var reactData = $table.reactData,
        computeMaps = $table.computeMaps;
    var computeIsAllCheckboxDisabled = computeMaps.computeIsAllCheckboxDisabled,
        computeCheckboxOpts = computeMaps.computeCheckboxOpts;
    var isIndeterminate = reactData.isIndeterminate,
        isAllSelected = reactData.isAllSelected;
    var isAllCheckboxDisabled = computeIsAllCheckboxDisabled.value;
    var slots = column.slots;
    var checkboxOpts = computeCheckboxOpts.value;
    var headerTitle = column.getTitle();
    var isChecked = false;
    var ons;

    if (checkboxOpts.checkStrictly ? !checkboxOpts.showHeader : checkboxOpts.showHeader === false) {
      return renderTitleContent(params, slots && slots.header ? slots.header(params) : [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--label'
      }, headerTitle)]);
    }

    if (!isHidden) {
      isChecked = isAllCheckboxDisabled ? false : isAllSelected;
      ons = {
        onClick: function onClick(evnt) {
          if (!isAllCheckboxDisabled) {
            $table.triggerCheckAllEvent(evnt, !isChecked);
          }
        }
      };
    }

    return renderTitleContent(params, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', _objectSpread2({
      class: ['vxe-cell--checkbox', {
        'is--checked': isChecked,
        'is--disabled': isAllCheckboxDisabled,
        'is--indeterminate': isIndeterminate
      }],
      title: conf.i18n('vxe.table.allTitle')
    }, ons), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
    })].concat(slots && slots.header ? slots.header(params) : headerTitle ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--label'
    }, headerTitle)] : []))]);
  },
  renderSelectionCell: function renderSelectionCell(params) {
    var $table = params.$table,
        row = params.row,
        column = params.column,
        isHidden = params.isHidden;
    var props = $table.props,
        reactData = $table.reactData,
        computeMaps = $table.computeMaps;
    var treeConfig = props.treeConfig;
    var selection = reactData.selection,
        treeIndeterminates = reactData.treeIndeterminates;
    var computeCheckboxOpts = computeMaps.computeCheckboxOpts;
    var checkboxOpts = computeCheckboxOpts.value;
    var labelField = checkboxOpts.labelField,
        checkMethod = checkboxOpts.checkMethod;
    var slots = column.slots;
    var indeterminate = false;
    var isChecked = false;
    var isDisabled = !!checkMethod;
    var ons;

    if (!isHidden) {
      isChecked = selection.indexOf(row) > -1;
      ons = {
        onClick: function onClick(evnt) {
          if (!isDisabled) {
            $table.triggerCheckRowEvent(evnt, params, !isChecked);
          }
        }
      };

      if (checkMethod) {
        isDisabled = !checkMethod({
          row: row
        });
      }

      if (treeConfig) {
        indeterminate = treeIndeterminates.indexOf(row) > -1;
      }
    }

    return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', _objectSpread2({
      class: ['vxe-cell--checkbox', {
        'is--checked': isChecked,
        'is--disabled': isDisabled,
        'is--indeterminate': indeterminate
      }]
    }, ons), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
    })].concat(slots && slots.default ? slots.default(params) : labelField ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--label'
    }, ctor_amd_xe_utils_default.a.get(row, labelField))] : []))];
  },
  renderTreeSelectionCell: function renderTreeSelectionCell(params) {
    return Cell.renderTreeIcon(params, Cell.renderSelectionCell(params));
  },
  renderSelectionCellByProp: function renderSelectionCellByProp(params) {
    var $table = params.$table,
        row = params.row,
        column = params.column,
        isHidden = params.isHidden;
    var props = $table.props,
        reactData = $table.reactData,
        computeMaps = $table.computeMaps;
    var treeConfig = props.treeConfig;
    var treeIndeterminates = reactData.treeIndeterminates;
    var computeCheckboxOpts = computeMaps.computeCheckboxOpts;
    var checkboxOpts = computeCheckboxOpts.value;
    var labelField = checkboxOpts.labelField,
        property = checkboxOpts.checkField,
        halfField = checkboxOpts.halfField,
        checkMethod = checkboxOpts.checkMethod;
    var slots = column.slots;
    var indeterminate = false;
    var isChecked = false;
    var isDisabled = !!checkMethod;
    var ons;

    if (!isHidden) {
      isChecked = ctor_amd_xe_utils_default.a.get(row, property);
      ons = {
        onClick: function onClick(evnt) {
          if (!isDisabled) {
            $table.triggerCheckRowEvent(evnt, params, !isChecked);
          }
        }
      };

      if (checkMethod) {
        isDisabled = !checkMethod({
          row: row
        });
      }

      if (treeConfig) {
        indeterminate = treeIndeterminates.indexOf(row) > -1;
      }
    }

    return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', _objectSpread2({
      class: ['vxe-cell--checkbox', {
        'is--checked': isChecked,
        'is--disabled': isDisabled,
        'is--indeterminate': halfField && !isChecked ? row[halfField] : indeterminate
      }]
    }, ons), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
    })].concat(slots && slots.default ? slots.default(params) : labelField ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-checkbox--label'
    }, ctor_amd_xe_utils_default.a.get(row, labelField))] : []))];
  },
  renderTreeSelectionCellByProp: function renderTreeSelectionCellByProp(params) {
    return Cell.renderTreeIcon(params, Cell.renderSelectionCellByProp(params));
  },

  /**
   * 展开行
   */
  renderExpandCell: function renderExpandCell(params) {
    var $table = params.$table,
        isHidden = params.isHidden,
        row = params.row,
        column = params.column;
    var reactData = $table.reactData,
        computeMaps = $table.computeMaps;
    var rowExpandeds = reactData.rowExpandeds,
        expandLazyLoadeds = reactData.expandLazyLoadeds;
    var computeExpandOpts = computeMaps.computeExpandOpts;
    var expandOpts = computeExpandOpts.value;
    var lazy = expandOpts.lazy,
        labelField = expandOpts.labelField,
        iconLoaded = expandOpts.iconLoaded,
        showIcon = expandOpts.showIcon,
        iconOpen = expandOpts.iconOpen,
        iconClose = expandOpts.iconClose,
        visibleMethod = expandOpts.visibleMethod;
    var slots = column.slots;
    var isAceived = false;
    var isLazyLoaded = false;

    if (slots && slots.icon) {
      return slots.icon(params);
    }

    if (!isHidden) {
      isAceived = rowExpandeds.indexOf(params.row) > -1;

      if (lazy) {
        isLazyLoaded = expandLazyLoadeds.indexOf(row) > -1;
      }
    }

    return [showIcon && (!visibleMethod || visibleMethod(params)) ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: ['vxe-table--expanded', {
        'is--active': isAceived
      }],
      onClick: function onClick(evnt) {
        $table.triggerRowExpandEvent(evnt, params);
      }
    }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
      class: ['vxe-table--expand-btn', isLazyLoaded ? iconLoaded || conf.icon.TABLE_EXPAND_LOADED : isAceived ? iconOpen || conf.icon.TABLE_EXPAND_OPEN : iconClose || conf.icon.TABLE_EXPAND_CLOSE]
    })]) : null, slots && slots.default || labelField ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-table--expand-label'
    }, slots.default ? slots.default(params) : ctor_amd_xe_utils_default.a.get(row, labelField)) : null];
  },
  renderExpandData: function renderExpandData(params) {
    var column = params.column;
    var slots = column.slots,
        contentRender = column.contentRender;

    if (slots && slots.content) {
      return slots.content(params);
    }

    if (contentRender) {
      var compConf = v_x_e_table.renderer.get(contentRender.name);

      if (compConf && compConf.renderExpand) {
        return compConf.renderExpand(contentRender, params);
      }
    }

    return [];
  },

  /**
   * HTML 标签
   */
  renderHTMLCell: function renderHTMLCell(params) {
    var column = params.column;
    var slots = column.slots;

    if (slots && slots.default) {
      return slots.default(params);
    }

    return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-cell--html',
      innerHTML: getDefaultCellLabel(params)
    })];
  },
  renderTreeHTMLCell: function renderTreeHTMLCell(params) {
    return Cell.renderTreeIcon(params, Cell.renderHTMLCell(params));
  },

  /**
   * 排序和筛选
   */
  renderSortAndFilterHeader: function renderSortAndFilterHeader(params) {
    return Cell.renderDefaultHeader(params).concat(Cell.renderSortIcon(params)).concat(Cell.renderFilterIcon(params));
  },

  /**
   * 排序
   */
  renderSortHeader: function renderSortHeader(params) {
    return Cell.renderDefaultHeader(params).concat(Cell.renderSortIcon(params));
  },
  renderSortIcon: function renderSortIcon(params) {
    var $table = params.$table,
        column = params.column;
    var computeMaps = $table.computeMaps;
    var computeSortOpts = computeMaps.computeSortOpts;
    var sortOpts = computeSortOpts.value;
    var showIcon = sortOpts.showIcon,
        iconAsc = sortOpts.iconAsc,
        iconDesc = sortOpts.iconDesc;
    return showIcon ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: 'vxe-cell--sort'
    }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
      class: ['vxe-sort--asc-btn', iconAsc || conf.icon.TABLE_SORT_ASC, {
        'sort--active': column.order === 'asc'
      }],
      title: conf.i18n('vxe.table.sortAsc'),
      onClick: function onClick(evnt) {
        $table.triggerSortEvent(evnt, column, 'asc');
      }
    }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
      class: ['vxe-sort--desc-btn', iconDesc || conf.icon.TABLE_SORT_DESC, {
        'sort--active': column.order === 'desc'
      }],
      title: conf.i18n('vxe.table.sortDesc'),
      onClick: function onClick(evnt) {
        $table.triggerSortEvent(evnt, column, 'desc');
      }
    })])] : [];
  },

  /**
   * 筛选
   */
  renderFilterHeader: function renderFilterHeader(params) {
    return Cell.renderDefaultHeader(params).concat(Cell.renderFilterIcon(params));
  },
  renderFilterIcon: function renderFilterIcon(params) {
    var $table = params.$table,
        column = params.column,
        hasFilter = params.hasFilter;
    var reactData = $table.reactData,
        computeMaps = $table.computeMaps;
    var filterStore = reactData.filterStore;
    var computeFilterOpts = computeMaps.computeFilterOpts;
    var filterOpts = computeFilterOpts.value;
    var showIcon = filterOpts.showIcon,
        iconNone = filterOpts.iconNone,
        iconMatch = filterOpts.iconMatch;
    return showIcon ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
      class: ['vxe-cell--filter', {
        'is--active': filterStore.visible && filterStore.column === column
      }]
    }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
      class: ['vxe-filter--btn', hasFilter ? iconMatch || conf.icon.TABLE_FILTER_MATCH : iconNone || conf.icon.TABLE_FILTER_NONE],
      title: conf.i18n('vxe.table.filter'),
      onClick: function onClick(evnt) {
        $table.triggerFilterEvent(evnt, params.column, params);
      }
    })])] : [];
  },

  /**
   * 可编辑
   */
  renderEditHeader: function renderEditHeader(params) {
    var $table = params.$table,
        column = params.column;
    var props = $table.props,
        computeMaps = $table.computeMaps;
    var computeEditOpts = computeMaps.computeEditOpts;
    var editRules = props.editRules;
    var editOpts = computeEditOpts.value;
    var sortable = column.sortable,
        filters = column.filters;
    var isRequired;

    if (editRules) {
      var columnRules = ctor_amd_xe_utils_default.a.get(editRules, params.column.property);

      if (columnRules) {
        isRequired = columnRules.some(function (rule) {
          return rule.required;
        });
      }
    }

    return [isRequired && editOpts.showAsterisk ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
      class: 'vxe-cell--required-icon'
    }) : null, editOpts.showIcon ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
      class: ['vxe-cell--edit-icon', editOpts.icon || conf.icon.TABLE_EDIT]
    }) : null].concat(Cell.renderDefaultHeader(params)).concat(sortable ? Cell.renderSortIcon(params) : []).concat(filters ? Cell.renderFilterIcon(params) : []);
  },
  // 行格编辑模式
  renderRowEdit: function renderRowEdit(params) {
    var $table = params.$table;
    var reactData = $table.reactData;
    var editStore = reactData.editStore;
    var actived = editStore.actived;
    return Cell.runRenderer(params, actived && actived.row === params.row);
  },
  renderTreeRowEdit: function renderTreeRowEdit(params) {
    return Cell.renderTreeIcon(params, Cell.renderRowEdit(params));
  },
  // 单元格编辑模式
  renderCellEdit: function renderCellEdit(params) {
    var $table = params.$table;
    var reactData = $table.reactData;
    var editStore = reactData.editStore;
    var actived = editStore.actived;
    return Cell.runRenderer(params, actived && actived.row === params.row && actived.column === params.column);
  },
  renderTreeCellEdit: function renderTreeCellEdit(params) {
    return Cell.renderTreeIcon(params, Cell.renderCellEdit(params));
  },
  runRenderer: function runRenderer(params, isEdit) {
    var column = params.column;
    var slots = column.slots,
        editRender = column.editRender,
        formatter = column.formatter;
    var compConf = v_x_e_table.renderer.get(editRender.name);

    if (isEdit) {
      if (slots && slots.edit) {
        return slots.edit(params);
      }

      return compConf && compConf.renderEdit ? compConf.renderEdit(editRender, Object.assign({
        $type: 'edit'
      }, params)) : [];
    }

    if (slots && slots.default) {
      return slots.default(params);
    }

    if (formatter) {
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-cell--label'
      }, getDefaultCellLabel(params))];
    }

    return Cell.renderDefaultCell(params);
  }
};
/* harmony default export */ var src_cell = (Cell);
// CONCATENATED MODULE: ./packages/table/src/body.ts
















var renderType = 'body';
var lineOffsetSizes = {
  mini: 3,
  small: 2,
  medium: 1
};
/* harmony default export */ var src_body = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTableBody',
  props: {
    tableData: Array,
    tableColumn: Array,
    fixedColumn: Array,
    fixedType: String
  },
  setup: function setup(props) {
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var xesize = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('xesize', null);
    var xID = $xetable.xID,
        tableProps = $xetable.props,
        tableContext = $xetable.context,
        tableReactData = $xetable.reactData,
        tableInternalData = $xetable.internalData,
        tableRefMaps = $xetable.refMaps,
        tableComputeMaps = $xetable.computeMaps;
    var refTableHeader = tableRefMaps.refTableHeader,
        refTableBody = tableRefMaps.refTableBody,
        refTableFooter = tableRefMaps.refTableFooter,
        refTableLeftBody = tableRefMaps.refTableLeftBody,
        refTableRightBody = tableRefMaps.refTableRightBody,
        refValidTooltip = tableRefMaps.refValidTooltip;
    var computeEditOpts = tableComputeMaps.computeEditOpts,
        computeMouseOpts = tableComputeMaps.computeMouseOpts,
        computeEmptyOpts = tableComputeMaps.computeEmptyOpts,
        computeKeyboardOpts = tableComputeMaps.computeKeyboardOpts,
        computeTooltipOpts = tableComputeMaps.computeTooltipOpts,
        computeRadioOpts = tableComputeMaps.computeRadioOpts,
        computeTreeOpts = tableComputeMaps.computeTreeOpts,
        computeCheckboxOpts = tableComputeMaps.computeCheckboxOpts,
        computeValidOpts = tableComputeMaps.computeValidOpts;
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBodyTable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBodyColgroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBodyTBody = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBodyXSpace = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBodyYSpace = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBodyEmptyBlock = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();

    var getOffsetSize = function getOffsetSize() {
      if (xesize) {
        var vSize = xesize.value;

        if (vSize) {
          return lineOffsetSizes[vSize] || 0;
        }
      }

      return 0;
    };

    var countTreeExpand = function countTreeExpand(prevRow, params) {
      var treeOpts = computeTreeOpts.value;
      var rowChildren = prevRow[treeOpts.children];
      var count = 1;

      if ($xetable.isTreeExpandByRow(prevRow)) {
        for (var index = 0; index < rowChildren.length; index++) {
          count += countTreeExpand(rowChildren[index], params);
        }
      }

      return count;
    };

    var calcTreeLine = function calcTreeLine(params, items) {
      var $rowIndex = params.$rowIndex;
      var expandSize = 1;

      if ($rowIndex) {
        expandSize = countTreeExpand(items[$rowIndex - 1], params);
      }

      return tableReactData.rowHeight * expandSize - ($rowIndex ? 1 : 12 - getOffsetSize());
    }; // 滚动、拖动过程中不需要触发


    var isOperateMouse = function isOperateMouse() {
      var delayHover = tableProps.delayHover;
      var lastScrollTime = tableInternalData.lastScrollTime,
          _isResize = tableInternalData._isResize;
      return _isResize || lastScrollTime && Date.now() < lastScrollTime + delayHover;
    };

    var renderLine = function renderLine(rowLevel, items, params) {
      var column = params.column;
      var treeConfig = tableProps.treeConfig;
      var treeOpts = computeTreeOpts.value;
      var slots = column.slots,
          treeNode = column.treeNode;

      if (slots && slots.line) {
        return slots.line(params);
      }

      if (treeConfig && treeNode && treeOpts.line) {
        return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-tree--line-wrapper'
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-tree--line',
          style: {
            height: "".concat(calcTreeLine(params, items), "px"),
            left: "".concat(rowLevel * treeOpts.indent + (rowLevel ? 2 - getOffsetSize() : 0) + 16, "px")
          }
        })])];
      }

      return [];
    };
    /**
     * 渲染列
     */


    var renderColumn = function renderColumn($seq, seq, rowid, fixedType, rowLevel, row, rowIndex, $rowIndex, _rowIndex, column, $columnIndex, columns, items) {
      var _ref2;

      var columnKey = tableProps.columnKey,
          height = tableProps.height,
          allColumnOverflow = tableProps.showOverflow,
          cellClassName = tableProps.cellClassName,
          cellStyle = tableProps.cellStyle,
          allAlign = tableProps.align,
          spanMethod = tableProps.spanMethod,
          mouseConfig = tableProps.mouseConfig,
          editConfig = tableProps.editConfig,
          editRules = tableProps.editRules;
      var tableData = tableReactData.tableData,
          overflowX = tableReactData.overflowX,
          scrollXLoad = tableReactData.scrollXLoad,
          scrollYLoad = tableReactData.scrollYLoad,
          currentColumn = tableReactData.currentColumn,
          mergeList = tableReactData.mergeList,
          editStore = tableReactData.editStore,
          validStore = tableReactData.validStore;
      var afterFullData = tableInternalData.afterFullData;
      var validOpts = computeValidOpts.value;
      var checkboxOpts = computeCheckboxOpts.value;
      var editOpts = computeEditOpts.value;
      var tooltipOpts = computeTooltipOpts.value;
      var type = column.type,
          cellRender = column.cellRender,
          editRender = column.editRender,
          align = column.align,
          showOverflow = column.showOverflow,
          className = column.className,
          treeNode = column.treeNode;
      var actived = editStore.actived;
      var enabled = tooltipOpts.enabled;
      var columnIndex = $xetable.getColumnIndex(column);

      var _columnIndex = $xetable.getVTColumnIndex(column);

      var fixedHiddenColumn = fixedType ? column.fixed !== fixedType : column.fixed && overflowX;
      var cellOverflow = ctor_amd_xe_utils_default.a.isUndefined(showOverflow) || ctor_amd_xe_utils_default.a.isNull(showOverflow) ? allColumnOverflow : showOverflow;
      var showEllipsis = cellOverflow === 'ellipsis';
      var showTitle = cellOverflow === 'title';
      var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';
      var hasEllipsis = showTitle || showTooltip || showEllipsis;
      var isDirty;
      var tdOns = {};
      var cellAlign = align || allAlign;
      var hasValidError = validStore.row === row && validStore.column === column;
      var hasDefaultTip = editRules && (validOpts.message === 'default' ? height || tableData.length > 1 : validOpts.message === 'inline');
      var attrs = {
        'data-colid': column.id
      };
      var params = {
        $table: $xetable,
        $seq: $seq,
        seq: seq,
        rowid: rowid,
        row: row,
        rowIndex: rowIndex,
        $rowIndex: $rowIndex,
        _rowIndex: _rowIndex,
        column: column,
        columnIndex: columnIndex,
        $columnIndex: $columnIndex,
        _columnIndex: _columnIndex,
        fixed: fixedType,
        type: renderType,
        isHidden: fixedHiddenColumn,
        level: rowLevel,
        visibleData: afterFullData,
        data: tableData,
        items: items
      }; // 虚拟滚动不支持动态高度

      if ((scrollXLoad || scrollYLoad) && !hasEllipsis) {
        showEllipsis = hasEllipsis = true;
      } // hover 进入事件


      if (showTitle || showTooltip || enabled) {
        tdOns.onMouseenter = function (evnt) {
          if (isOperateMouse()) {
            return;
          }

          if (showTitle) {
            DomTools.updateCellTitle(evnt.currentTarget, column);
          } else if (showTooltip || enabled) {
            // 如果配置了显示 tooltip
            $xetable.triggerBodyTooltipEvent(evnt, params);
          }

          $xetable.dispatchEvent('cell-mouseenter', Object.assign({
            cell: evnt.currentTarget
          }, params), evnt);
        };
      } // hover 退出事件


      if (showTooltip || enabled) {
        tdOns.onMouseleave = function (evnt) {
          if (isOperateMouse()) {
            return;
          }

          if (showTooltip || enabled) {
            $xetable.handleTargetLeaveEvent();
          }

          $xetable.dispatchEvent('cell-mouseleave', Object.assign({
            cell: evnt.currentTarget
          }, params), evnt);
        };
      } // 按下事件处理


      if (checkboxOpts.range || mouseConfig) {
        tdOns.onMousedown = function (evnt) {
          $xetable.triggerCellMousedownEvent(evnt, params);
        };
      } // 点击事件处理


      tdOns.onClick = function (evnt) {
        $xetable.triggerCellClickEvent(evnt, params);
      }; // 双击事件处理


      tdOns.onDblclick = function (evnt) {
        $xetable.triggerCellDBLClickEvent(evnt, params);
      }; // 合并行或列


      if (mergeList.length) {
        var spanRest = mergeBodyMethod(mergeList, _rowIndex, _columnIndex);

        if (spanRest) {
          var rowspan = spanRest.rowspan,
              colspan = spanRest.colspan;

          if (!rowspan || !colspan) {
            return null;
          }

          if (rowspan > 1) {
            attrs.rowspan = rowspan;
          }

          if (colspan > 1) {
            attrs.colspan = colspan;
          }
        }
      } else if (spanMethod) {
        // 自定义合并行或列的方法
        var _ref = spanMethod(params) || {},
            _ref$rowspan = _ref.rowspan,
            _rowspan = _ref$rowspan === void 0 ? 1 : _ref$rowspan,
            _ref$colspan = _ref.colspan,
            _colspan = _ref$colspan === void 0 ? 1 : _ref$colspan;

        if (!_rowspan || !_colspan) {
          return null;
        }

        if (_rowspan > 1) {
          attrs.rowspan = _rowspan;
        }

        if (_colspan > 1) {
          attrs.colspan = _colspan;
        }
      } // 如果被合并不可隐藏


      if (fixedHiddenColumn && mergeList) {
        if (attrs.colspan > 1 || attrs.rowspan > 1) {
          fixedHiddenColumn = false;
        }
      } // 如果编辑列开启显示状态


      if (!fixedHiddenColumn && editConfig && (editRender || cellRender) && editOpts.showStatus) {
        isDirty = $xetable.isUpdateByRow(row, column.property);
      }

      var tdVNs = [];

      if (allColumnOverflow && fixedHiddenColumn) {
        tdVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: ['vxe-cell', {
            'c--title': showTitle,
            'c--tooltip': showTooltip,
            'c--ellipsis': showEllipsis
          }]
        }));
      } else {
        // 渲染单元格
        tdVNs.push.apply(tdVNs, _toConsumableArray(renderLine(rowLevel, items, params)).concat([Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: ['vxe-cell', {
            'c--title': showTitle,
            'c--tooltip': showTooltip,
            'c--ellipsis': showEllipsis
          }],
          title: showTitle ? UtilTools.getCellLabel(row, column, params) : null
        }, column.renderCell(params))]));

        if (hasDefaultTip && hasValidError) {
          tdVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-cell--valid',
            style: validStore.rule && validStore.rule.maxWidth ? {
              width: "".concat(validStore.rule.maxWidth, "px")
            } : null
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-cell--valid-msg'
          }, validStore.content)]));
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', _objectSpread2(_objectSpread2({
        class: ['vxe-body--column', column.id, (_ref2 = {}, _defineProperty(_ref2, "col--".concat(cellAlign), cellAlign), _defineProperty(_ref2, "col--".concat(type), type), _defineProperty(_ref2, 'col--last', $columnIndex === columns.length - 1), _defineProperty(_ref2, 'col--tree-node', treeNode), _defineProperty(_ref2, 'col--edit', !!editRender), _defineProperty(_ref2, 'col--ellipsis', hasEllipsis), _defineProperty(_ref2, 'fixed--hidden', fixedHiddenColumn), _defineProperty(_ref2, 'col--dirty', isDirty), _defineProperty(_ref2, 'col--actived', editConfig && editRender && actived.row === row && (actived.column === column || editOpts.mode === 'row')), _defineProperty(_ref2, 'col--valid-error', hasValidError), _defineProperty(_ref2, 'col--current', currentColumn === column), _ref2), UtilTools.getClass(className, params), UtilTools.getClass(cellClassName, params)],
        key: columnKey ? column.id : $columnIndex
      }, attrs), {}, {
        style: cellStyle ? ctor_amd_xe_utils_default.a.isFunction(cellStyle) ? cellStyle(params) : cellStyle : null
      }, tdOns), tdVNs);
    };

    var renderRows = function renderRows($seq, rowLevel, fixedType, tableData, tableColumn) {
      var stripe = tableProps.stripe,
          rowKey = tableProps.rowKey,
          highlightHoverRow = tableProps.highlightHoverRow,
          rowClassName = tableProps.rowClassName,
          rowStyle = tableProps.rowStyle,
          allColumnOverflow = tableProps.showOverflow,
          treeConfig = tableProps.treeConfig;
      var treeExpandeds = tableReactData.treeExpandeds,
          scrollYLoad = tableReactData.scrollYLoad,
          editStore = tableReactData.editStore,
          rowExpandeds = tableReactData.rowExpandeds,
          expandColumn = tableReactData.expandColumn,
          selectRow = tableReactData.selectRow;
      var scrollYStore = tableInternalData.scrollYStore;
      var checkboxOpts = computeCheckboxOpts.value;
      var radioOpts = computeRadioOpts.value;
      var treeOpts = computeTreeOpts.value;
      var rows = [];
      tableData.forEach(function (row, $rowIndex) {
        var trOn = {};
        var rowIndex = $rowIndex;
        var seq = rowIndex + 1;

        if (scrollYLoad) {
          seq += scrollYStore.startIndex;
        }

        var _rowIndex = $xetable.getVTRowIndex(row); // 确保任何情况下 rowIndex 都精准指向真实 data 索引


        rowIndex = $xetable.getRowIndex(row); // 事件绑定

        if (highlightHoverRow) {
          trOn.onMouseenter = function (evnt) {
            if (isOperateMouse()) {
              return;
            }

            $xetable.triggerHoverEvent(evnt, {
              row: row,
              rowIndex: rowIndex
            });
          };

          trOn.onMouseleave = function () {
            if (isOperateMouse()) {
              return;
            }

            $xetable.clearHoverRow();
          };
        }

        var rowid = getRowid($xetable, row);
        var params = {
          $table: $xetable,
          $seq: $seq,
          seq: seq,
          rowid: rowid,
          fixed: fixedType,
          type: renderType,
          level: rowLevel,
          row: row,
          rowIndex: rowIndex,
          $rowIndex: $rowIndex,
          _rowIndex: _rowIndex
        };
        rows.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', _objectSpread2({
          class: ['vxe-body--row', {
            'row--stripe': stripe && ($xetable.getVTRowIndex(row) + 1) % 2 === 0,
            'is--new': editStore.insertList.indexOf(row) > -1,
            'row--radio': radioOpts.highlight && selectRow === row,
            'row--checked': checkboxOpts.highlight && $xetable.isCheckedByCheckboxRow(row)
          }, rowClassName ? ctor_amd_xe_utils_default.a.isFunction(rowClassName) ? rowClassName(params) : rowClassName : ''],
          'data-rowid': rowid,
          style: rowStyle ? ctor_amd_xe_utils_default.a.isFunction(rowStyle) ? rowStyle(params) : rowStyle : null,
          key: rowKey || treeConfig ? rowid : $rowIndex
        }, trOn), tableColumn.map(function (column, $columnIndex) {
          return renderColumn($seq, seq, rowid, fixedType, rowLevel, row, rowIndex, $rowIndex, _rowIndex, column, $columnIndex, tableColumn, tableData);
        }))); // 如果行被展开了

        if (expandColumn && rowExpandeds.length && rowExpandeds.indexOf(row) > -1) {
          var cellStyle;

          if (treeConfig) {
            cellStyle = {
              paddingLeft: "".concat(rowLevel * treeOpts.indent + 30, "px")
            };
          }

          var showOverflow = expandColumn.showOverflow;
          var hasEllipsis = ctor_amd_xe_utils_default.a.isUndefined(showOverflow) || ctor_amd_xe_utils_default.a.isNull(showOverflow) ? allColumnOverflow : showOverflow;
          var expandParams = {
            $table: $xetable,
            $seq: $seq,
            seq: seq,
            column: expandColumn,
            fixed: fixedType,
            type: renderType,
            level: rowLevel,
            row: row,
            rowIndex: rowIndex,
            $rowIndex: $rowIndex,
            _rowIndex: _rowIndex
          };
          rows.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', _objectSpread2({
            class: 'vxe-body--expanded-row',
            key: "expand_".concat(rowid),
            style: rowStyle ? ctor_amd_xe_utils_default.a.isFunction(rowStyle) ? rowStyle(expandParams) : rowStyle : null
          }, trOn), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', {
            class: ['vxe-body--expanded-column', {
              'fixed--hidden': fixedType,
              'col--ellipsis': hasEllipsis
            }],
            colspan: tableColumn.length
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-body--expanded-cell',
            style: cellStyle
          }, [expandColumn.renderData(expandParams)])])]));
        } // 如果是树形表格


        if (treeConfig && treeExpandeds.length) {
          var rowChildren = row[treeOpts.children];

          if (rowChildren && rowChildren.length && treeExpandeds.indexOf(row) > -1) {
            rows.push.apply(rows, _toConsumableArray(renderRows($seq ? "".concat($seq, ".").concat(seq) : "".concat(seq), rowLevel + 1, fixedType, rowChildren, tableColumn)));
          }
        }
      });
      return rows;
    };
    /**
     * 同步滚动条
     */


    var scrollProcessTimeout;

    var syncBodyScroll = function syncBodyScroll(scrollTop, elem1, elem2) {
      if (elem1 || elem2) {
        if (elem1) {
          elem1.onscroll = null;
          elem1.scrollTop = scrollTop;
        }

        if (elem2) {
          elem2.onscroll = null;
          elem2.scrollTop = scrollTop;
        }

        clearTimeout(scrollProcessTimeout);
        scrollProcessTimeout = setTimeout(function () {
          if (elem1) {
            elem1.onscroll = elem1._onscroll;
          }

          if (elem2) {
            elem2.onscroll = elem2._onscroll;
          }
        }, 300);
      }
    };
    /**
     * 滚动处理
     * 如果存在列固定左侧，同步更新滚动状态
     * 如果存在列固定右侧，同步更新滚动状态
     */


    var scrollEvent = function scrollEvent(evnt) {
      var fixedType = props.fixedType;
      var highlightHoverRow = tableProps.highlightHoverRow;
      var scrollXLoad = tableReactData.scrollXLoad,
          scrollYLoad = tableReactData.scrollYLoad;
      var lastScrollTop = tableInternalData.lastScrollTop,
          lastScrollLeft = tableInternalData.lastScrollLeft;
      var tableHeader = refTableHeader.value;
      var tableBody = refTableBody.value;
      var tableFooter = refTableFooter.value;
      var leftBody = refTableLeftBody.value;
      var rightBody = refTableRightBody.value;
      var validTip = refValidTooltip.value;
      var scrollBodyElem = refElem.value;
      var headerElem = tableHeader ? tableHeader.$el : null;
      var footerElem = tableFooter ? tableFooter.$el : null;
      var bodyElem = tableBody.$el;
      var leftElem = leftBody ? leftBody.$el : null;
      var rightElem = rightBody ? rightBody.$el : null;
      var scrollTop = scrollBodyElem.scrollTop;
      var scrollLeft = bodyElem.scrollLeft;
      var isX = scrollLeft !== lastScrollLeft;
      var isY = scrollTop !== lastScrollTop;
      tableInternalData.lastScrollTop = scrollTop;
      tableInternalData.lastScrollLeft = scrollLeft;
      tableInternalData.lastScrollTime = Date.now();

      if (highlightHoverRow) {
        $xetable.clearHoverRow();
      }

      if (leftElem && fixedType === 'left') {
        scrollTop = leftElem.scrollTop;
        syncBodyScroll(scrollTop, bodyElem, rightElem);
      } else if (rightElem && fixedType === 'right') {
        scrollTop = rightElem.scrollTop;
        syncBodyScroll(scrollTop, bodyElem, leftElem);
      } else {
        if (isX) {
          if (headerElem) {
            headerElem.scrollLeft = bodyElem.scrollLeft;
          }

          if (footerElem) {
            footerElem.scrollLeft = bodyElem.scrollLeft;
          }
        }

        if (leftElem || rightElem) {
          $xetable.checkScrolling();

          if (isY) {
            syncBodyScroll(scrollTop, leftElem, rightElem);
          }
        }
      }

      if (scrollXLoad && isX) {
        $xetable.triggerScrollXEvent(evnt);
      }

      if (scrollYLoad && isY) {
        $xetable.triggerScrollYEvent(evnt);
      }

      if (isX && validTip && validTip.reactData.visible) {
        validTip.updatePlacement();
      }

      $xetable.dispatchEvent('scroll', {
        type: renderType,
        fixed: fixedType,
        scrollTop: scrollTop,
        scrollLeft: scrollLeft,
        isX: isX,
        isY: isY
      }, evnt);
    };

    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var fixedType = props.fixedType;
      var elemStore = tableInternalData.elemStore;
      var prefix = "".concat(fixedType || 'main', "-body-");
      var el = refElem.value;
      elemStore["".concat(prefix, "wrapper")] = refElem.value;
      elemStore["".concat(prefix, "table")] = refBodyTable.value;
      elemStore["".concat(prefix, "colgroup")] = refBodyColgroup.value;
      elemStore["".concat(prefix, "list")] = refBodyTBody.value;
      elemStore["".concat(prefix, "xSpace")] = refBodyXSpace.value;
      elemStore["".concat(prefix, "ySpace")] = refBodyYSpace.value;
      elemStore["".concat(prefix, "emptyBlock")] = refBodyEmptyBlock.value;
      el.onscroll = scrollEvent;
      el._onscroll = scrollEvent;
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onBeforeUnmount"])(function () {
      var el = refElem.value;
      el._onscroll = null;
      el.onscroll = null;
    });

    var renderVN = function renderVN() {
      var fixedColumn = props.fixedColumn,
          fixedType = props.fixedType,
          tableColumn = props.tableColumn;
      var keyboardConfig = tableProps.keyboardConfig,
          allColumnOverflow = tableProps.showOverflow,
          spanMethod = tableProps.spanMethod,
          mouseConfig = tableProps.mouseConfig,
          emptyRender = tableProps.emptyRender;
      var tableData = tableReactData.tableData,
          mergeList = tableReactData.mergeList,
          scrollXLoad = tableReactData.scrollXLoad;
      var slots = tableContext.slots;
      var emptyOpts = computeEmptyOpts.value;
      var keyboardOpts = computeKeyboardOpts.value;
      var mouseOpts = computeMouseOpts.value; // 如果是固定列与设置了超出隐藏

      if (!mergeList.length && !spanMethod && !(keyboardConfig && keyboardOpts.isMerge)) {
        if (fixedType && allColumnOverflow) {
          tableColumn = fixedColumn;
        } else if (scrollXLoad) {
          if (fixedType) {
            tableColumn = fixedColumn;
          }
        }
      }

      var emptyContent;

      if (slots.empty) {
        emptyContent = slots.empty({
          $table: $xetable
        });
      } else {
        var compConf = emptyRender ? v_x_e_table.renderer.get(emptyOpts.name) : null;

        if (compConf && compConf.renderEmpty) {
          emptyContent = compConf.renderEmpty(emptyOpts, {
            $table: $xetable
          });
        } else {
          emptyContent = tableProps.emptyText || conf.i18n('vxe.table.emptyText');
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-table--body-wrapper', fixedType ? "fixed-".concat(fixedType, "--wrapper") : 'body--wrapper'],
        'data-tid': xID
      }, [fixedType ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])() : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refBodyXSpace,
        class: 'vxe-body--x-space'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refBodyYSpace,
        class: 'vxe-body--y-space'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
        ref: refBodyTable,
        class: 'vxe-table--body',
        'data-tid': xID,
        cellspacing: 0,
        cellpadding: 0,
        border: 0
      }, [
      /**
       * 列宽
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('colgroup', {
        ref: refBodyColgroup
      }, tableColumn.map(function (column, $columnIndex) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('col', {
          name: column.id,
          key: $columnIndex
        });
      })),
      /**
       * 内容
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tbody', {
        ref: refBodyTBody
      }, renderRows('', 0, fixedType, tableData, tableColumn))]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--checkbox-range'
      }), mouseConfig && mouseOpts.area ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--cell-area'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-table--cell-main-area'
      }, mouseOpts.extension ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-table--cell-main-area-btn',
        onMousedown: function onMousedown(evnt) {
          $xetable.triggerCellExtendMousedownEvent(evnt, {
            $table: $xetable,
            fixed: fixedType,
            type: renderType
          });
        }
      })] : []), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-table--cell-copy-area'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-table--cell-extend-area'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-table--cell-multi-area'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-table--cell-active-area'
      })]) : null, !fixedType ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--empty-block',
        ref: refBodyEmptyBlock
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--empty-content'
      }, emptyContent)]) : null]);
    };

    return renderVN;
  }
}));
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("a9e3");

// CONCATENATED MODULE: ./packages/table/src/props.ts


/* harmony default export */ var src_props = ({
  /** 基本属性 */
  id: String,
  // 数据
  data: Array,
  // 表格的高度
  height: [Number, String],
  // 表格的最大高度
  maxHeight: [Number, String],
  // 所有列是否允许拖动列宽调整大小
  resizable: {
    type: Boolean,
    default: function _default() {
      return conf.table.resizable;
    }
  },
  // 是否带有斑马纹
  stripe: {
    type: Boolean,
    default: function _default() {
      return conf.table.stripe;
    }
  },
  // 是否带有边框
  border: {
    type: [Boolean, String],
    default: function _default() {
      return conf.table.border;
    }
  },
  // 是否圆角边框
  round: {
    type: Boolean,
    default: function _default() {
      return conf.table.round;
    }
  },
  // 表格的尺寸
  size: {
    type: String,
    default: function _default() {
      return conf.table.size || conf.size;
    }
  },
  // 列的宽度是否自撑开（可能会被废弃的参数，不要使用）
  fit: {
    type: Boolean,
    default: function _default() {
      return conf.table.fit;
    }
  },
  // 表格是否加载中
  loading: Boolean,
  // 所有的列对其方式
  align: {
    type: String,
    default: function _default() {
      return conf.table.align;
    }
  },
  // 所有的表头列的对齐方式
  headerAlign: {
    type: String,
    default: function _default() {
      return conf.table.headerAlign;
    }
  },
  // 所有的表尾列的对齐方式
  footerAlign: {
    type: String,
    default: function _default() {
      return conf.table.footerAlign;
    }
  },
  // 是否显示表头
  showHeader: {
    type: Boolean,
    default: function _default() {
      return conf.table.showHeader;
    }
  },
  // 是否要高亮当前选中行
  highlightCurrentRow: {
    type: Boolean,
    default: function _default() {
      return conf.table.highlightCurrentRow;
    }
  },
  // 鼠标移到行是否要高亮显示
  highlightHoverRow: {
    type: Boolean,
    default: function _default() {
      return conf.table.highlightHoverRow;
    }
  },
  // 是否要高亮当前选中列
  highlightCurrentColumn: {
    type: Boolean,
    default: function _default() {
      return conf.table.highlightCurrentColumn;
    }
  },
  // 鼠标移到列是否要高亮显示
  highlightHoverColumn: {
    type: Boolean,
    default: function _default() {
      return conf.table.highlightHoverColumn;
    }
  },
  // 激活单元格编辑时是否高亮显示
  highlightCell: Boolean,
  // 是否显示表尾合计
  showFooter: Boolean,
  // 表尾合计的计算方法
  footerMethod: {
    type: Function,
    default: function _default() {
      return conf.table.footerMethod;
    }
  },
  // 给行附加 className
  rowClassName: [String, Function],
  // 给单元格附加 className
  cellClassName: [String, Function],
  // 给表头的行附加 className
  headerRowClassName: [String, Function],
  // 给表头的单元格附加 className
  headerCellClassName: [String, Function],
  // 给表尾的行附加 className
  footerRowClassName: [String, Function],
  // 给表尾的单元格附加 className
  footerCellClassName: [String, Function],
  // 给单元格附加样式
  cellStyle: [Object, Function],
  // 给表头单元格附加样式
  headerCellStyle: [Object, Function],
  // 给表尾单元格附加样式
  footerCellStyle: [Object, Function],
  // 给行附加样式
  rowStyle: [Object, Function],
  // 给表头行附加样式
  headerRowStyle: [Object, Function],
  // 给表尾行附加样式
  footerRowStyle: [Object, Function],
  // 合并指定单元格
  mergeCells: Array,
  // 合并指定的表尾
  mergeFooterItems: Array,
  // 自定义合并行或列的方法
  spanMethod: Function,
  // 表尾合并行或列
  footerSpanMethod: Function,
  // 设置所有内容过长时显示为省略号
  showOverflow: {
    type: [Boolean, String],
    default: function _default() {
      return conf.table.showOverflow;
    }
  },
  // 设置表头所有内容过长时显示为省略号
  showHeaderOverflow: {
    type: [Boolean, String],
    default: function _default() {
      return conf.table.showHeaderOverflow;
    }
  },
  // 设置表尾所有内容过长时显示为省略号
  showFooterOverflow: {
    type: [Boolean, String],
    default: function _default() {
      return conf.table.showFooterOverflow;
    }
  },

  /** 高级属性 */
  // 主键配置
  columnKey: Boolean,
  rowKey: Boolean,
  rowId: {
    type: String,
    default: function _default() {
      return conf.table.rowId;
    }
  },
  zIndex: Number,
  emptyText: String,
  keepSource: {
    type: Boolean,
    default: function _default() {
      return conf.table.keepSource;
    }
  },
  // 是否自动监听父容器变化去更新响应式表格宽高
  autoResize: {
    type: Boolean,
    default: function _default() {
      return conf.table.autoResize;
    }
  },
  // 是否自动根据状态属性去更新响应式表格宽高
  syncResize: [Boolean, String, Number],
  // 设置列的默认参数，仅对部分支持的属性有效
  columnConfig: Object,
  // 序号配置项
  seqConfig: Object,
  // 排序配置项
  sortConfig: Object,
  // 筛选配置项
  filterConfig: Object,
  // 单选框配置
  radioConfig: Object,
  // 复选框配置项
  checkboxConfig: Object,
  // tooltip 配置项
  tooltipConfig: Object,
  // 导出配置项
  exportConfig: Object,
  // 导入配置项
  importConfig: Object,
  // 打印配置项
  printConfig: Object,
  // 展开行配置项
  expandConfig: Object,
  // 树形结构配置项
  treeConfig: Object,
  // 快捷菜单配置项
  menuConfig: Object,
  // 鼠标配置项
  mouseConfig: Object,
  // 按键配置项
  keyboardConfig: Object,
  // 复制粘贴配置项
  clipConfig: Object,
  // 编辑配置项
  editConfig: Object,
  // 校验配置项
  validConfig: Object,
  // 校验规则配置项
  editRules: Object,
  // 空内容渲染配置项
  emptyRender: Object,
  // 自定义列配置项
  customConfig: Object,
  // 横向虚拟滚动配置项
  scrollX: Object,
  // 纵向虚拟滚动配置项
  scrollY: Object,
  // 优化相关
  animat: {
    type: Boolean,
    default: function _default() {
      return conf.table.animat;
    }
  },
  delayHover: {
    type: Number,
    default: function _default() {
      return conf.table.delayHover;
    }
  },
  // 额外的参数
  params: Object
});
// CONCATENATED MODULE: ./packages/table/src/emits.ts
/* harmony default export */ var emits = (['update:data', 'keydown', 'paste', 'copy', 'cut', 'current-change', 'radio-change', 'checkbox-change', 'checkbox-all', 'checkbox-range-start', 'checkbox-range-change', 'checkbox-range-end', 'cell-click', 'cell-dblclick', 'cell-menu', 'cell-mouseenter', 'cell-mouseleave', 'header-cell-click', 'header-cell-dblclick', 'header-cell-menu', 'footer-cell-click', 'footer-cell-dblclick', 'footer-cell-menu', 'sort-change', 'filter-change', 'resizable-change', 'toggle-row-expand', 'toggle-tree-expand', 'menu-click', 'edit-closed', 'edit-actived', 'edit-disabled', 'valid-error', 'scroll', 'custom', 'open-fnr', 'change-fnr', 'cell-area-copy', 'cell-area-cut', 'cell-area-paste', 'cell-area-merge', 'cell-area-selection-start', 'cell-area-selection-end', 'cell-area-extension-start', 'cell-area-extension-end']);
// CONCATENATED MODULE: ./packages/table/src/table.ts





































var table_setCellValue = UtilTools.setCellValue,
    table_getCellLabel = UtilTools.getCellLabel,
    hasChildrenList = UtilTools.hasChildrenList,
    table_getColumnList = UtilTools.getColumnList;
var table_browse = DomTools.browse,
    table_hasClass = DomTools.hasClass,
    addClass = DomTools.addClass,
    table_removeClass = DomTools.removeClass,
    getEventTargetNode = DomTools.getEventTargetNode;
var isWebkit = table_browse['-webkit'] && !table_browse.edge;
var debounceScrollYDuration = table_browse.msie ? 40 : 20;
var resizableStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_WIDTH';
var visibleStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_VISIBLE';
/* harmony default export */ var table = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTable',
  props: src_props,
  emits: emits,
  setup: function setup(props, context) {
    var TableHeaderComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-table-header');
    var TableFooterComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-table-footer');
    var TooltipComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-tooltip');
    var TableFilterComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-table-filter');
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var instance = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["getCurrentInstance"])();
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      // 低性能的静态列
      staticColumns: [],
      // 渲染的列分组
      tableGroupColumn: [],
      // 可视区渲染的列
      tableColumn: [],
      // 渲染中的数据
      tableData: [],
      // 是否启用了横向 X 可视渲染方式加载
      scrollXLoad: false,
      // 是否启用了纵向 Y 可视渲染方式加载
      scrollYLoad: false,
      // 是否存在纵向滚动条
      overflowY: true,
      // 是否存在横向滚动条
      overflowX: false,
      // 纵向滚动条的宽度
      scrollbarWidth: 0,
      // 横向滚动条的高度
      scrollbarHeight: 0,
      // 行高
      rowHeight: 0,
      // 表格父容器的高度
      parentHeight: 0,
      // 是否使用分组表头
      isGroup: false,
      // 复选框属性，是否全选
      isAllSelected: false,
      // 复选框属性，有选中且非全选状态
      isIndeterminate: false,
      // 复选框属性，已选中的行
      selection: [],
      // 当前行
      currentRow: null,
      // 单选框属性，选中列
      currentColumn: null,
      // 单选框属性，选中行
      selectRow: null,
      // 表尾合计数据
      footerData: [],
      // 展开列信息
      expandColumn: null,
      // 树节点列信息
      treeNodeColumn: null,
      // 已展开的行
      rowExpandeds: [],
      // 懒加载中的展开行的列表
      expandLazyLoadeds: [],
      // 已展开树节点
      treeExpandeds: [],
      // 懒加载中的树节点的列表
      treeLazyLoadeds: [],
      // 树节点不确定状态的列表
      treeIndeterminates: [],
      // 合并单元格的对象集
      mergeList: [],
      // 合并表尾数据的对象集
      mergeFooterList: [],
      // 初始化标识
      initStore: {
        filter: false,
        import: false,
        export: false
      },
      // 当前选中的筛选列
      filterStore: {
        isAllSelected: false,
        isIndeterminate: false,
        style: null,
        options: [],
        column: null,
        multiple: false,
        visible: false
      },
      // 存放列相关的信息
      columnStore: {
        leftList: [],
        centerList: [],
        rightList: [],
        resizeList: [],
        pxList: [],
        pxMinList: [],
        scaleList: [],
        scaleMinList: [],
        autoList: []
      },
      // 存放快捷菜单的信息
      ctxMenuStore: {
        selected: null,
        visible: false,
        showChild: false,
        selectChild: null,
        list: [],
        style: null
      },
      // 存放可编辑相关信息
      editStore: {
        indexs: {
          columns: []
        },
        titles: {
          columns: []
        },
        // 所有选中
        checked: {
          rows: [],
          columns: [],
          tRows: [],
          tColumns: []
        },
        // 选中源
        selected: {
          row: null,
          column: null
        },
        // 已复制源
        copyed: {
          cut: false,
          rows: [],
          columns: []
        },
        // 激活
        actived: {
          row: null,
          column: null
        },
        insertList: [],
        removeList: []
      },
      // 存放数据校验相关信息
      validStore: {
        visible: false,
        row: null,
        column: null,
        content: '',
        rule: null,
        isArrow: false
      },
      // 导入相关信息
      importStore: {
        inited: false,
        file: null,
        type: '',
        modeList: [],
        typeList: [],
        filename: '',
        visible: false
      },
      importParams: {
        mode: '',
        types: null,
        message: true
      },
      // 导出相关信息
      exportStore: {
        inited: false,
        name: '',
        modeList: [],
        typeList: [],
        columns: [],
        isPrint: false,
        hasFooter: false,
        hasMerge: false,
        hasColgroup: false,
        visible: false
      },
      exportParams: {
        filename: '',
        sheetName: '',
        mode: '',
        type: '',
        isColgroup: false,
        isMerge: false,
        original: false,
        message: true,
        isHeader: false,
        isFooter: false
      }
    });
    var internalData = {
      tZindex: 0,
      elemStore: {},
      // 存放横向 X 虚拟滚动相关的信息
      scrollXStore: {},
      // 存放纵向 Y 虚拟滚动相关信息
      scrollYStore: {},
      // 存放 tooltip 相关信息
      tooltipStore: {},
      // 表格宽度
      tableWidth: 0,
      // 表格高度
      tableHeight: 0,
      // 表头高度
      headerHeight: 0,
      // 表尾高度
      footerHeight: 0,
      customHeight: 0,
      customMaxHeight: 0,
      // 当前 hover 行
      hoverRow: null,
      // 最后滚动位置
      lastScrollLeft: 0,
      lastScrollTop: 0,
      lastScrollTime: 0,
      // 单选框属性，已选中保留的行
      radioReserveRow: null,
      // 复选框属性，已选中保留的行
      checkboxReserveRowMap: {},
      // 行数据，已展开保留的行
      rowExpandedReserveRowMap: {},
      // 树结构数据，已展开保留的行
      treeExpandedReserveRowMap: {},
      // 完整数据、条件处理后
      tableFullData: [],
      afterFullData: [],
      tableSynchData: [],
      tableSourceData: [],
      // 收集的列配置（带分组）
      collectColumn: [],
      // 完整所有列（不带分组）
      tableFullColumn: [],
      // 渲染所有列
      visibleColumn: [],
      // 缓存数据集
      fullAllDataRowMap: new Map(),
      fullAllDataRowIdData: {},
      fullDataRowMap: new Map(),
      fullDataRowIdData: {},
      fullColumnMap: new Map(),
      fullColumnIdData: {},
      fullColumnFieldData: {},
      tooltipActive: false,
      tooltipTimeout: null,
      inited: false,
      isActivated: false
    };
    var tableMethods = {};
    var tablePrivateMethods = {};
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTooltip = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refValidTooltip = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableFilter = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableMenu = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableHeader = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableBody = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableFooter = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableLeftHeader = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableLeftBody = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableLeftFooter = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableRightHeader = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableRightBody = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTableRightFooter = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refLeftContainer = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refRightContainer = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refCellResizeBar = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refEmptyPlaceholder = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var $xegrid = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xegrid', null);
    var $xetoolbar;
    var computeValidOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({
        message: 'default'
      }, conf.table.validConfig, props.validConfig);
    });
    var computeSXOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.scrollX, props.scrollX);
    });
    var computeSYOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.scrollY, props.scrollY);
    });
    var computeRowHeightMaps = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return {
        default: 48,
        medium: 44,
        small: 40,
        mini: 36
      };
    });
    var computeColumnOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, props.columnConfig);
    });
    var computeSeqOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({
        startIndex: 0
      }, conf.table.seqConfig, props.seqConfig);
    });
    var computeRadioOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.radioConfig, props.radioConfig);
    });
    var computeCheckboxOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.checkboxConfig, props.checkboxConfig);
    });
    var computeTooltipOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();

    var handleTooltipLeaveMethod = function handleTooltipLeaveMethod() {
      var tooltipOpts = computeTooltipOpts.value;
      setTimeout(function () {
        if (!internalData.tooltipActive) {
          tableMethods.clostTooltip();
        }
      }, tooltipOpts.leaveDelay);
      return false;
    };

    computeTooltipOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var opts = Object.assign({
        leaveDelay: 300
      }, conf.table.tooltipConfig, props.tooltipConfig);

      if (opts.enterable) {
        opts.leaveMethod = handleTooltipLeaveMethod;
      }

      return opts;
    });
    var computeValidTipOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var tooltipOpts = computeTooltipOpts.value;
      return Object.assign({
        isArrow: false
      }, tooltipOpts);
    });
    var computeEditOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.editConfig, props.editConfig);
    });
    var computeSortOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({
        orders: ['asc', 'desc', null]
      }, conf.table.sortConfig, props.sortConfig);
    });
    var computeFilterOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.filterConfig, props.filterConfig);
    });
    var computeMouseOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.mouseConfig, props.mouseConfig);
    });
    var computeKeyboardOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, props.keyboardConfig);
    });
    var computeClipOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, props.clipConfig);
    });
    var computeMenuOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.menuConfig, props.menuConfig);
    });
    var computeHeaderMenu = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var menuOpts = computeMenuOpts.value;
      var headerOpts = menuOpts.header;
      return headerOpts && headerOpts.options ? headerOpts.options : [];
    });
    var computeBodyMenu = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var menuOpts = computeMenuOpts.value;
      var bodyOpts = menuOpts.body;
      return bodyOpts && bodyOpts.options ? bodyOpts.options : [];
    });
    var computeFooterMenu = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var menuOpts = computeMenuOpts.value;
      var footerOpts = menuOpts.footer;
      return footerOpts && footerOpts.options ? footerOpts.options : [];
    });
    var computeIsMenu = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var headerMenu = computeHeaderMenu.value;
      var bodyMenu = computeBodyMenu.value;
      var footerMenu = computeFooterMenu.value;
      return headerMenu.length || bodyMenu.length || footerMenu.length;
    });
    var computeMenuList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var ctxMenuStore = reactData.ctxMenuStore;
      var rest = [];
      ctxMenuStore.list.forEach(function (list) {
        list.forEach(function (item) {
          rest.push(item);
        });
      });
      return rest;
    });
    var computeExportOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.exportConfig, props.exportConfig);
    });
    var computeImportOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.importConfig, props.importConfig);
    });
    var computePrintOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.printConfig, props.printConfig);
    });
    var computeExpandOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.expandConfig, props.expandConfig);
    });
    var computeTreeOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.treeConfig, props.treeConfig);
    });
    var computeEmptyOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.emptyRender, props.emptyRender);
    });
    var computeCellOffsetWidth = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.border ? Math.max(2, Math.ceil(reactData.scrollbarWidth / reactData.tableColumn.length)) : 1;
    });
    var computeCustomOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.table.customConfig, props.customConfig);
    });
    var computeTableBorder = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var border = props.border;

      if (border === true) {
        return 'full';
      }

      if (border) {
        return border;
      }

      return 'default';
    });
    var computeIsAllCheckboxDisabled = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var treeConfig = props.treeConfig;
      var tableFullData = internalData.tableFullData;
      var checkboxOpts = computeCheckboxOpts.value;
      var strict = checkboxOpts.strict,
          checkMethod = checkboxOpts.checkMethod;

      if (strict) {
        if (tableFullData.length) {
          if (checkMethod) {
            if (treeConfig) {// 暂时不支持树形结构
            } // 如果所有行都被禁用


            return tableFullData.every(function (row) {
              return !checkMethod({
                row: row
              });
            });
          }

          return false;
        }

        return true;
      }

      return false;
    });
    var refMaps = {
      refElem: refElem,
      refTooltip: refTooltip,
      refValidTooltip: refValidTooltip,
      refTableFilter: refTableFilter,
      refTableMenu: refTableMenu,
      refTableHeader: refTableHeader,
      refTableBody: refTableBody,
      refTableFooter: refTableFooter,
      refTableLeftHeader: refTableLeftHeader,
      refTableLeftBody: refTableLeftBody,
      refTableLeftFooter: refTableLeftFooter,
      refTableRightHeader: refTableRightHeader,
      refTableRightBody: refTableRightBody,
      refTableRightFooter: refTableRightFooter,
      refLeftContainer: refLeftContainer,
      refRightContainer: refRightContainer,
      refCellResizeBar: refCellResizeBar
    };
    var computeMaps = {
      computeValidOpts: computeValidOpts,
      computeSXOpts: computeSXOpts,
      computeSYOpts: computeSYOpts,
      computeSeqOpts: computeSeqOpts,
      computeRadioOpts: computeRadioOpts,
      computeCheckboxOpts: computeCheckboxOpts,
      computeTooltipOpts: computeTooltipOpts,
      computeEditOpts: computeEditOpts,
      computeSortOpts: computeSortOpts,
      computeFilterOpts: computeFilterOpts,
      computeMouseOpts: computeMouseOpts,
      computeKeyboardOpts: computeKeyboardOpts,
      computeClipOpts: computeClipOpts,
      computeMenuOpts: computeMenuOpts,
      computeExportOpts: computeExportOpts,
      computeImportOpts: computeImportOpts,
      computePrintOpts: computePrintOpts,
      computeExpandOpts: computeExpandOpts,
      computeTreeOpts: computeTreeOpts,
      computeEmptyOpts: computeEmptyOpts,
      computeCustomOpts: computeCustomOpts,
      computeIsAllCheckboxDisabled: computeIsAllCheckboxDisabled
    };
    var $xetable = {
      xID: xID,
      props: props,
      context: context,
      instance: instance,
      reactData: reactData,
      internalData: internalData,
      refMaps: refMaps,
      computeMaps: computeMaps,
      xegrid: $xegrid
    };

    var eqCellValue = function eqCellValue(row1, row2, field) {
      var val1 = ctor_amd_xe_utils_default.a.get(row1, field);
      var val2 = ctor_amd_xe_utils_default.a.get(row2, field);

      if (eqCellNull(val1) && eqCellNull(val2)) {
        return true;
      }

      if (ctor_amd_xe_utils_default.a.isString(val1) || ctor_amd_xe_utils_default.a.isNumber(val1)) {
        /* eslint-disable eqeqeq */
        return val1 == val2;
      }

      return ctor_amd_xe_utils_default.a.isEqual(val1, val2);
    };

    var getNextSortOrder = function getNextSortOrder(column) {
      var sortOpts = computeSortOpts.value;
      var orders = sortOpts.orders;
      var currOrder = column.order || null;
      var oIndex = orders.indexOf(currOrder) + 1;
      return orders[oIndex < orders.length ? oIndex : 0];
    };

    var getCustomStorageMap = function getCustomStorageMap(key) {
      var version = conf.version;
      var rest = ctor_amd_xe_utils_default.a.toStringJSON(localStorage.getItem(key) || '');
      return rest && rest._v === version ? rest : {
        _v: version
      };
    };

    var getRecoverRow = function getRecoverRow(list) {
      var fullAllDataRowMap = internalData.fullAllDataRowMap;
      return list.filter(function (row) {
        return fullAllDataRowMap.has(row);
      });
    };

    var handleReserveRow = function handleReserveRow(reserveRowMap) {
      var fullDataRowIdData = internalData.fullDataRowIdData;
      var reserveList = [];
      ctor_amd_xe_utils_default.a.each(reserveRowMap, function (item, rowid) {
        if (fullDataRowIdData[rowid] && reserveList.indexOf(fullDataRowIdData[rowid].row) === -1) {
          reserveList.push(fullDataRowIdData[rowid].row);
        }
      });
      return reserveList;
    };

    var computeVirtualX = function computeVirtualX() {
      var visibleColumn = internalData.visibleColumn;
      var tableBody = refTableBody.value;
      var tableBodyElem = tableBody ? tableBody.$el : null;

      if (tableBodyElem) {
        var scrollLeft = tableBodyElem.scrollLeft,
            clientWidth = tableBodyElem.clientWidth;
        var endWidth = scrollLeft + clientWidth;
        var toVisibleIndex = -1;
        var cWidth = 0;
        var visibleSize = 0;

        for (var colIndex = 0, colLen = visibleColumn.length; colIndex < colLen; colIndex++) {
          cWidth += visibleColumn[colIndex].renderWidth;

          if (toVisibleIndex === -1 && scrollLeft < cWidth) {
            toVisibleIndex = colIndex;
          }

          if (toVisibleIndex >= 0) {
            visibleSize++;

            if (cWidth > endWidth) {
              break;
            }
          }
        }

        return {
          toVisibleIndex: Math.max(0, toVisibleIndex),
          visibleSize: Math.max(8, visibleSize)
        };
      }

      return {
        toVisibleIndex: 0,
        visibleSize: 8
      };
    };

    var computeVirtualY = function computeVirtualY() {
      var tableHeader = refTableHeader.value;
      var tableBody = refTableBody.value;
      var tableBodyElem = tableBody ? tableBody.$el : null;
      var vSize = computeSize.value;
      var rowHeightMaps = computeRowHeightMaps.value;

      if (tableBodyElem) {
        var tableHeaderElem = tableHeader ? tableHeader.$el : null;
        var rowHeight = 0;
        var firstTrElem;
        firstTrElem = tableBodyElem.querySelector('tr');

        if (!firstTrElem && tableHeaderElem) {
          firstTrElem = tableHeaderElem.querySelector('tr');
        }

        if (firstTrElem) {
          rowHeight = firstTrElem.clientHeight;
        }

        if (!rowHeight) {
          rowHeight = rowHeightMaps[vSize || 'default'];
        }

        var visibleSize = Math.max(8, Math.ceil(tableBodyElem.clientHeight / rowHeight) + 2);
        return {
          rowHeight: rowHeight,
          visibleSize: visibleSize
        };
      }

      return {
        rowHeight: 0,
        visibleSize: 8
      };
    };

    var calculateMergerOffserIndex = function calculateMergerOffserIndex(list, offsetItem, type) {
      for (var mcIndex = 0, len = list.length; mcIndex < len; mcIndex++) {
        var mergeItem = list[mcIndex];
        var startIndex = offsetItem.startIndex,
            endIndex = offsetItem.endIndex;
        var mergeStartIndex = mergeItem[type];
        var mergeSpanNumber = mergeItem[type + 'span'];
        var mergeEndIndex = mergeStartIndex + mergeSpanNumber;

        if (mergeStartIndex < startIndex && startIndex < mergeEndIndex) {
          offsetItem.startIndex = mergeStartIndex;
        }

        if (mergeStartIndex < endIndex && endIndex < mergeEndIndex) {
          offsetItem.endIndex = mergeEndIndex;
        }

        if (offsetItem.startIndex !== startIndex || offsetItem.endIndex !== endIndex) {
          mcIndex = -1;
        }
      }
    };

    var setMerges = function setMerges(merges, mList, rowList) {
      if (merges) {
        var treeConfig = props.treeConfig;
        var visibleColumn = internalData.visibleColumn;

        if (treeConfig) {
          throw new Error(UtilTools.getLog('vxe.error.noTree', ['merge-footer-items']));
        }

        if (!ctor_amd_xe_utils_default.a.isArray(merges)) {
          merges = [merges];
        }

        merges.forEach(function (item) {
          var row = item.row,
              col = item.col,
              rowspan = item.rowspan,
              colspan = item.colspan;

          if (rowList && ctor_amd_xe_utils_default.a.isNumber(row)) {
            row = rowList[row];
          }

          if (ctor_amd_xe_utils_default.a.isNumber(col)) {
            col = visibleColumn[col];
          }

          if ((rowList ? row : ctor_amd_xe_utils_default.a.isNumber(row)) && col && (rowspan || colspan)) {
            rowspan = ctor_amd_xe_utils_default.a.toNumber(rowspan) || 1;
            colspan = ctor_amd_xe_utils_default.a.toNumber(colspan) || 1;

            if (rowspan > 1 || colspan > 1) {
              var mcIndex = ctor_amd_xe_utils_default.a.findIndexOf(mList, function (item) {
                return item._row === row && item._col === col;
              });
              var mergeItem = mList[mcIndex];

              if (mergeItem) {
                mergeItem.rowspan = rowspan;
                mergeItem.colspan = colspan;
                mergeItem._rowspan = rowspan;
                mergeItem._colspan = colspan;
              } else {
                var mergeRowIndex = rowList ? rowList.indexOf(row) : row;
                var mergeColIndex = visibleColumn.indexOf(col);
                mList.push({
                  row: mergeRowIndex,
                  col: mergeColIndex,
                  rowspan: rowspan,
                  colspan: colspan,
                  _row: row,
                  _col: col,
                  _rowspan: rowspan,
                  _colspan: colspan
                });
              }
            }
          }
        });
      }
    };

    var removeMerges = function removeMerges(merges, mList, rowList) {
      var rest = [];

      if (merges) {
        var treeConfig = props.treeConfig;
        var visibleColumn = internalData.visibleColumn;

        if (treeConfig) {
          throw new Error(UtilTools.getLog('vxe.error.noTree', ['merge-cells']));
        }

        if (!ctor_amd_xe_utils_default.a.isArray(merges)) {
          merges = [merges];
        }

        merges.forEach(function (item) {
          var row = item.row,
              col = item.col;

          if (rowList && ctor_amd_xe_utils_default.a.isNumber(row)) {
            row = rowList[row];
          }

          if (ctor_amd_xe_utils_default.a.isNumber(col)) {
            col = visibleColumn[col];
          }

          var mcIndex = ctor_amd_xe_utils_default.a.findIndexOf(mList, function (item) {
            return item._row === row && item._col === col;
          });

          if (mcIndex > -1) {
            var rItems = mList.splice(mcIndex, 1);
            rest.push(rItems[0]);
          }
        });
      }

      return rest;
    };

    var clearAllSort = function clearAllSort() {
      var tableFullColumn = internalData.tableFullColumn;
      tableFullColumn.forEach(function (column) {
        column.order = null;
      });
    };

    var calcHeight = function calcHeight(key) {
      var parentHeight = reactData.parentHeight;
      var val = props[key];
      var num = 0;

      if (val) {
        if (val === 'auto') {
          num = parentHeight;
        } else {
          var excludeHeight = $xetable.getExcludeHeight();

          if (DomTools.isScale(val)) {
            num = Math.floor((ctor_amd_xe_utils_default.a.toInteger(val) || 1) / 100 * parentHeight);
          } else {
            num = ctor_amd_xe_utils_default.a.toNumber(val);
          }

          num = Math.max(40, num - excludeHeight);
        }
      }

      return num;
    };
    /**
     * 还原自定义列操作状态
     */


    var restoreCustomStorage = function restoreCustomStorage() {
      var id = props.id,
          customConfig = props.customConfig;
      var collectColumn = internalData.collectColumn;
      var customOpts = computeCustomOpts.value;
      var storage = customOpts.storage;
      var isResizable = storage === true || storage && storage.resizable;
      var isVisible = storage === true || storage && storage.visible;

      if (customConfig && (isResizable || isVisible)) {
        var customMap = {};

        if (!id) {
          UtilTools.error('vxe.error.reqProp', ['id']);
          return;
        }

        if (isResizable) {
          var columnWidthStorage = getCustomStorageMap(resizableStorageKey)[id];

          if (columnWidthStorage) {
            ctor_amd_xe_utils_default.a.each(columnWidthStorage, function (resizeWidth, field) {
              customMap[field] = {
                field: field,
                resizeWidth: resizeWidth
              };
            });
          }
        }

        if (isVisible) {
          var columnVisibleStorage = getCustomStorageMap(visibleStorageKey)[id];

          if (columnVisibleStorage) {
            var colVisibles = columnVisibleStorage.split('|');
            var colHides = colVisibles[0] ? colVisibles[0].split(',') : [];
            var colShows = colVisibles[1] ? colVisibles[1].split(',') : [];
            colHides.forEach(function (field) {
              if (customMap[field]) {
                customMap[field].visible = false;
              } else {
                customMap[field] = {
                  field: field,
                  visible: false
                };
              }
            });
            colShows.forEach(function (field) {
              if (customMap[field]) {
                customMap[field].visible = true;
              } else {
                customMap[field] = {
                  field: field,
                  visible: true
                };
              }
            });
          }
        }

        var keyMap = {};
        ctor_amd_xe_utils_default.a.eachTree(collectColumn, function (column) {
          var colKey = column.getKey();

          if (colKey) {
            keyMap[colKey] = column;
          }
        });
        ctor_amd_xe_utils_default.a.each(customMap, function (_ref, field) {
          var visible = _ref.visible,
              resizeWidth = _ref.resizeWidth;
          var column = keyMap[field];

          if (column) {
            if (ctor_amd_xe_utils_default.a.isNumber(resizeWidth)) {
              column.resizeWidth = resizeWidth;
            }

            if (ctor_amd_xe_utils_default.a.isBoolean(visible)) {
              column.visible = visible;
            }
          }
        });
      }
    };

    var appendTreeCache = function appendTreeCache(row, childs) {
      var keepSource = props.keepSource;
      var fullDataRowIdData = internalData.fullDataRowIdData,
          fullDataRowMap = internalData.fullDataRowMap,
          fullAllDataRowMap = internalData.fullAllDataRowMap,
          fullAllDataRowIdData = internalData.fullAllDataRowIdData;
      var tableSourceData = internalData.tableSourceData;
      var treeOpts = computeTreeOpts.value;
      var children = treeOpts.children,
          hasChild = treeOpts.hasChild;
      var rowkey = getRowkey($xetable);
      var rowid = getRowid($xetable, row);
      var matchObj;

      if (keepSource) {
        matchObj = ctor_amd_xe_utils_default.a.findTree(tableSourceData, function (item) {
          return rowid === getRowid($xetable, item);
        }, treeOpts);
      }

      ctor_amd_xe_utils_default.a.eachTree(childs, function (row, index, items, path, parent) {
        var rowid = getRowid($xetable, row);

        if (!rowid) {
          rowid = getRowUniqueId();
          ctor_amd_xe_utils_default.a.set(row, rowkey, rowid);
        }

        if (row[hasChild] && ctor_amd_xe_utils_default.a.isUndefined(row[children])) {
          row[children] = null;
        }

        var rest = {
          row: row,
          rowid: rowid,
          index: -1,
          items: items,
          parent: parent
        };
        fullDataRowIdData[rowid] = rest;
        fullDataRowMap.set(row, rest);
        fullAllDataRowIdData[rowid] = rest;
        fullAllDataRowMap.set(row, rest);
      }, treeOpts);

      if (matchObj) {
        matchObj.item[children] = ctor_amd_xe_utils_default.a.clone(childs, true);
      }
    };
    /**
     * 更新数据列的 Map
     * 牺牲数据组装的耗时，用来换取使用过程中的流畅
     */


    var cacheColumnMap = function cacheColumnMap() {
      var tableFullColumn = internalData.tableFullColumn,
          collectColumn = internalData.collectColumn,
          fullColumnMap = internalData.fullColumnMap;
      var fullColumnIdData = internalData.fullColumnIdData = {};
      var fullColumnFieldData = internalData.fullColumnFieldData = {};
      var mouseOpts = computeMouseOpts.value;
      var isGroup = collectColumn.some(hasChildrenList);
      var expandColumn;
      var treeNodeColumn;
      var checkboxColumn;
      var radioColumn;
      var hasFixed;

      var handleFunc = function handleFunc(column, index, items, path, parent) {
        var colid = column.id,
            property = column.property,
            fixed = column.fixed,
            type = column.type,
            treeNode = column.treeNode;
        var rest = {
          column: column,
          colid: colid,
          index: index,
          items: items,
          parent: parent
        };

        if (property) {
          if (fullColumnFieldData[property]) {
            UtilTools.warn('vxe.error.colRepet', ['field', property]);
          }

          fullColumnFieldData[property] = rest;
        }

        if (!hasFixed && fixed) {
          hasFixed = fixed;
        }

        if (treeNode) {
          if (false) {}

          if (!treeNodeColumn) {
            treeNodeColumn = column;
          }
        } else if (type === 'expand') {
          if (false) {}

          if (!expandColumn) {
            expandColumn = column;
          }
        }

        if (false) {}

        if (fullColumnIdData[colid]) {
          UtilTools.error('vxe.error.colRepet', ['colId', colid]);
        }

        fullColumnIdData[colid] = rest;
        fullColumnMap.set(column, rest);
      };

      fullColumnMap.clear();

      if (isGroup) {
        ctor_amd_xe_utils_default.a.eachTree(collectColumn, function (column, index, items, path, parent, nodes) {
          column.level = nodes.length;
          handleFunc(column, index, items, path, parent);
        });
      } else {
        tableFullColumn.forEach(handleFunc);
      }

      if (expandColumn && hasFixed) {
        UtilTools.warn('vxe.error.errConflicts', ['column.fixed', 'column.type=expand']);
      }

      if (expandColumn && mouseOpts.area) {
        UtilTools.error('vxe.error.errConflicts', ['mouse-config.area', 'column.type=expand']);
      }

      reactData.isGroup = isGroup;
      reactData.treeNodeColumn = treeNodeColumn;
      reactData.expandColumn = expandColumn;
    };
    /**
     * 列宽算法
     * 支持 px、%、固定 混合分配
     * 支持动态列表调整分配
     * 支持自动分配偏移量
     * @param {Element} headerElem
     * @param {Element} bodyElem
     * @param {Element} footerElem
     * @param {Number} bodyWidth
     */


    var autoCellWidth = function autoCellWidth(headerElem, bodyElem, footerElem) {
      var tableWidth = 0;
      var minCellWidth = 40; // 列宽最少限制 40px

      var bodyWidth = bodyElem.clientWidth;
      var remainWidth = bodyWidth;
      var meanWidth = remainWidth / 100;
      var fit = props.fit;
      var columnStore = reactData.columnStore;
      var resizeList = columnStore.resizeList,
          pxMinList = columnStore.pxMinList,
          pxList = columnStore.pxList,
          scaleList = columnStore.scaleList,
          scaleMinList = columnStore.scaleMinList,
          autoList = columnStore.autoList; // 最小宽

      pxMinList.forEach(function (column) {
        var minWidth = parseInt(column.minWidth);
        tableWidth += minWidth;
        column.renderWidth = minWidth;
      }); // 最小百分比

      scaleMinList.forEach(function (column) {
        var scaleWidth = Math.floor(parseInt(column.minWidth) * meanWidth);
        tableWidth += scaleWidth;
        column.renderWidth = scaleWidth;
      }); // 固定百分比

      scaleList.forEach(function (column) {
        var scaleWidth = Math.floor(parseInt(column.width) * meanWidth);
        tableWidth += scaleWidth;
        column.renderWidth = scaleWidth;
      }); // 固定宽

      pxList.forEach(function (column) {
        var width = parseInt(column.width);
        tableWidth += width;
        column.renderWidth = width;
      }); // 调整了列宽

      resizeList.forEach(function (column) {
        var width = parseInt(column.resizeWidth);
        tableWidth += width;
        column.renderWidth = width;
      });
      remainWidth -= tableWidth;
      meanWidth = remainWidth > 0 ? Math.floor(remainWidth / (scaleMinList.length + pxMinList.length + autoList.length)) : 0;

      if (fit) {
        if (remainWidth > 0) {
          scaleMinList.concat(pxMinList).forEach(function (column) {
            tableWidth += meanWidth;
            column.renderWidth += meanWidth;
          });
        }
      } else {
        meanWidth = minCellWidth;
      } // 自适应


      autoList.forEach(function (column) {
        var width = Math.max(meanWidth, minCellWidth);
        column.renderWidth = width;
        tableWidth += width;
      });

      if (fit) {
        /**
         * 偏移量算法
         * 如果所有列足够放的情况下，从最后动态列开始分配
         */
        var dynamicList = scaleList.concat(scaleMinList).concat(pxMinList).concat(autoList);
        var dynamicSize = dynamicList.length - 1;

        if (dynamicSize > 0) {
          var odiffer = bodyWidth - tableWidth;

          if (odiffer > 0) {
            while (odiffer > 0 && dynamicSize >= 0) {
              odiffer--;
              dynamicList[dynamicSize--].renderWidth++;
            }

            tableWidth = bodyWidth;
          }
        }
      }

      var tableHeight = bodyElem.offsetHeight;
      var overflowY = bodyElem.scrollHeight > bodyElem.clientHeight;
      reactData.scrollbarWidth = overflowY ? bodyElem.offsetWidth - bodyWidth : 0;
      reactData.overflowY = overflowY;
      internalData.tableWidth = tableWidth;
      internalData.tableHeight = tableHeight;

      if (headerElem) {
        internalData.headerHeight = headerElem.clientHeight; // 检测是否同步滚动

        if (headerElem.scrollLeft !== bodyElem.scrollLeft) {
          headerElem.scrollLeft = bodyElem.scrollLeft;
        }
      } else {
        internalData.headerHeight = 0;
      }

      if (footerElem) {
        var footerHeight = footerElem.offsetHeight;
        reactData.scrollbarHeight = Math.max(footerHeight - footerElem.clientHeight, 0);
        reactData.overflowX = tableWidth > footerElem.clientWidth;
        internalData.footerHeight = footerHeight;
      } else {
        internalData.footerHeight = 0;
        reactData.scrollbarHeight = Math.max(tableHeight - bodyElem.clientHeight, 0);
        reactData.overflowX = tableWidth > bodyWidth;
      }

      internalData.customHeight = calcHeight('height');
      internalData.customMaxHeight = calcHeight('maxHeight');
      reactData.parentHeight = Math.max(internalData.headerHeight + internalData.footerHeight + 20, tablePrivateMethods.getParentHeight());

      if (reactData.overflowX) {
        tablePrivateMethods.checkScrolling();
      }
    };
    /**
     * 获取处理后全量的表格数据
     * 如果存在筛选条件，继续处理
     */


    var updateAfterFullData = function updateAfterFullData() {
      var visibleColumn = internalData.visibleColumn,
          tableFullData = internalData.tableFullData;
      var filterOpts = computeFilterOpts.value;
      var sortOpts = computeSortOpts.value;
      var allRemoteFilter = filterOpts.remote,
          allFilterMethod = filterOpts.filterMethod;
      var allRemoteSort = sortOpts.remote,
          allSortMethod = sortOpts.sortMethod;
      var tableData = tableFullData.slice(0);

      if (!allRemoteFilter || !allRemoteSort) {
        var filterColumns = [];
        var orderColumns = [];
        visibleColumn.forEach(function (column) {
          var sortable = column.sortable,
              order = column.order,
              filters = column.filters;

          if (!allRemoteFilter && filters && filters.length) {
            var valueList = [];
            var itemList = [];
            filters.forEach(function (item) {
              if (item.checked) {
                itemList.push(item);
                valueList.push(item.value);
              }
            });

            if (itemList.length) {
              filterColumns.push({
                column: column,
                valueList: valueList,
                itemList: itemList
              });
            }
          }

          if (!allRemoteSort && sortable && order) {
            orderColumns.push({
              column: column,
              sortBy: column.sortBy,
              property: column.property,
              order: order
            });
          }
        }); // 处理筛选
        // 支持单列、多列、组合筛选

        if (!allRemoteFilter && filterColumns.length) {
          tableData = tableData.filter(function (row) {
            return filterColumns.every(function (_ref2) {
              var column = _ref2.column,
                  valueList = _ref2.valueList,
                  itemList = _ref2.itemList;
              var filterMethod = column.filterMethod,
                  filterRender = column.filterRender;
              var compConf = filterRender ? v_x_e_table.renderer.get(filterRender.name) : null;

              if (!filterMethod && compConf && compConf.renderFilter) {
                filterMethod = compConf.filterMethod;
              }

              if (allFilterMethod && !filterMethod) {
                return allFilterMethod({
                  options: itemList,
                  values: valueList,
                  row: row,
                  column: column
                });
              }

              return filterMethod ? itemList.some(function (item) {
                return filterMethod({
                  value: item.value,
                  option: item,
                  row: row,
                  column: column
                });
              }) : valueList.indexOf(ctor_amd_xe_utils_default.a.get(row, column.property)) > -1;
            });
          });
        } // 处理排序
        // 支持单列、多列、组合排序


        if (!allRemoteSort && orderColumns.length) {
          if (allSortMethod) {
            var sortRests = allSortMethod({
              data: tableData,
              sortList: orderColumns,
              $table: $xetable
            });
            tableData = ctor_amd_xe_utils_default.a.isArray(sortRests) ? sortRests : tableData;
          } else {
            var params = {
              $table: $xetable
            };
            tableData = ctor_amd_xe_utils_default.a.orderBy(tableData, orderColumns.map(function (_ref3) {
              var column = _ref3.column,
                  property = _ref3.property,
                  order = _ref3.order;
              return {
                field: column.sortBy || (column.formatter ? function (row) {
                  return table_getCellLabel(row, column, params);
                } : property),
                order: order
              };
            }));
          }
        }
      }

      internalData.afterFullData = tableData;
      return tableData;
    };

    var updateStyle = function updateStyle() {
      var border = props.border,
          showFooter = props.showFooter,
          allColumnOverflow = props.showOverflow,
          allColumnHeaderOverflow = props.showHeaderOverflow,
          allColumnFooterOverflow = props.showFooterOverflow,
          mouseConfig = props.mouseConfig;
      var isGroup = reactData.isGroup,
          currentRow = reactData.currentRow,
          tableColumn = reactData.tableColumn,
          scrollXLoad = reactData.scrollXLoad,
          scrollYLoad = reactData.scrollYLoad,
          scrollbarWidth = reactData.scrollbarWidth,
          scrollbarHeight = reactData.scrollbarHeight,
          columnStore = reactData.columnStore,
          editStore = reactData.editStore;
      var fullColumnIdData = internalData.fullColumnIdData,
          tableHeight = internalData.tableHeight,
          tableWidth = internalData.tableWidth,
          headerHeight = internalData.headerHeight,
          footerHeight = internalData.footerHeight,
          elemStore = internalData.elemStore,
          customHeight = internalData.customHeight,
          customMaxHeight = internalData.customMaxHeight;
      var containerList = ['main', 'left', 'right'];
      var emptyPlaceholderElem = refEmptyPlaceholder.value;
      var cellOffsetWidth = computeCellOffsetWidth.value;
      var bodyWrapperElem = elemStore['main-body-wrapper'];

      if (emptyPlaceholderElem) {
        emptyPlaceholderElem.style.top = "".concat(headerHeight, "px");
        emptyPlaceholderElem.style.height = bodyWrapperElem ? "".concat(bodyWrapperElem.offsetHeight - scrollbarHeight, "px") : '';
      }

      if (customHeight > 0) {
        if (showFooter) {
          customHeight += scrollbarHeight;
        }
      }

      containerList.forEach(function (name, index) {
        var fixedType = index > 0 ? name : '';
        var layoutList = ['header', 'body', 'footer'];
        var isFixedLeft = fixedType === 'left';
        var fixedColumn = [];
        var fixedWrapperElem;

        if (fixedType) {
          fixedColumn = isFixedLeft ? columnStore.leftList : columnStore.rightList;
          fixedWrapperElem = isFixedLeft ? refLeftContainer.value : refRightContainer.value;
        }

        layoutList.forEach(function (layout) {
          var wrapperElem = elemStore["".concat(name, "-").concat(layout, "-wrapper")];
          var tableElem = elemStore["".concat(name, "-").concat(layout, "-table")];

          if (layout === 'header') {
            // 表头体样式处理
            // 横向滚动渲染
            var tWidth = tableWidth;

            if (scrollXLoad) {
              if (fixedType) {
                tableColumn = fixedColumn;
              }

              tWidth = tableColumn.reduce(function (previous, column) {
                return previous + column.renderWidth;
              }, 0);
            }

            if (tableElem) {
              tableElem.style.width = tWidth ? "".concat(tWidth + scrollbarWidth, "px") : ''; // 修复 IE 中高度无法自适应问题

              if (table_browse.msie) {
                ctor_amd_xe_utils_default.a.arrayEach(tableElem.querySelectorAll('.vxe-resizable'), function (resizeElem) {
                  resizeElem.style.height = "".concat(resizeElem.parentNode.offsetHeight, "px");
                });
              }
            }

            var repairElem = elemStore["".concat(name, "-").concat(layout, "-repair")];

            if (repairElem) {
              repairElem.style.width = "".concat(tableWidth, "px");
            }

            var listElem = elemStore["".concat(name, "-").concat(layout, "-list")];

            if (isGroup && listElem) {
              ctor_amd_xe_utils_default.a.arrayEach(listElem.querySelectorAll('.col--group'), function (thElem) {
                var colNode = tableMethods.getColumnNode(thElem);

                if (colNode) {
                  var column = colNode.item;
                  var showHeaderOverflow = column.showHeaderOverflow;
                  var cellOverflow = ctor_amd_xe_utils_default.a.isBoolean(showHeaderOverflow) ? showHeaderOverflow : allColumnHeaderOverflow;
                  var showEllipsis = cellOverflow === 'ellipsis';
                  var showTitle = cellOverflow === 'title';
                  var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';
                  var hasEllipsis = showTitle || showTooltip || showEllipsis;
                  var childWidth = 0;
                  var countChild = 0;

                  if (hasEllipsis) {
                    ctor_amd_xe_utils_default.a.eachTree(column.children, function (item) {
                      if (!item.children || !column.children.length) {
                        countChild++;
                      }

                      childWidth += item.renderWidth;
                    });
                  }

                  thElem.style.width = hasEllipsis ? "".concat(childWidth - countChild - (border ? 2 : 0), "px") : '';
                }
              });
            }
          } else if (layout === 'body') {
            var emptyBlockElem = elemStore["".concat(name, "-").concat(layout, "-emptyBlock")];

            if (wrapperElem) {
              if (customMaxHeight) {
                wrapperElem.style.maxHeight = "".concat(fixedType ? customMaxHeight - headerHeight - (showFooter ? 0 : scrollbarHeight) : customMaxHeight - headerHeight, "px");
              } else {
                if (customHeight > 0) {
                  wrapperElem.style.height = "".concat(fixedType ? (customHeight > 0 ? customHeight - headerHeight - footerHeight : tableHeight) - (showFooter ? 0 : scrollbarHeight) : customHeight - headerHeight - footerHeight, "px");
                } else {
                  wrapperElem.style.height = '';
                }
              }
            } // 如果是固定列


            if (fixedWrapperElem) {
              if (wrapperElem) {
                wrapperElem.style.top = "".concat(headerHeight, "px");
              }

              fixedWrapperElem.style.height = "".concat((customHeight > 0 ? customHeight - headerHeight - footerHeight : tableHeight) + headerHeight + footerHeight - scrollbarHeight * (showFooter ? 2 : 1), "px");
              fixedWrapperElem.style.width = "".concat(fixedColumn.reduce(function (previous, column) {
                return previous + column.renderWidth;
              }, isFixedLeft ? 0 : scrollbarWidth), "px");
            }

            var _tWidth = tableWidth; // 如果是固定列与设置了超出隐藏

            if (fixedType && allColumnOverflow) {
              tableColumn = fixedColumn;
              _tWidth = tableColumn.reduce(function (previous, column) {
                return previous + column.renderWidth;
              }, 0);
            } else if (scrollXLoad) {
              if (fixedType) {
                tableColumn = fixedColumn;
              }

              _tWidth = tableColumn.reduce(function (previous, column) {
                return previous + column.renderWidth;
              }, 0);
            }

            if (tableElem) {
              tableElem.style.width = _tWidth ? "".concat(_tWidth, "px") : ''; // 兼容性处理

              tableElem.style.paddingRight = scrollbarWidth && fixedType && (table_browse['-moz'] || table_browse.safari) ? "".concat(scrollbarWidth, "px") : '';
            }

            if (emptyBlockElem) {
              emptyBlockElem.style.width = _tWidth ? "".concat(_tWidth, "px") : '';
            }
          } else if (layout === 'footer') {
            // 如果是使用优化模式
            var _tWidth2 = tableWidth;

            if (fixedType && allColumnOverflow) {
              tableColumn = fixedColumn;
              _tWidth2 = tableColumn.reduce(function (previous, column) {
                return previous + column.renderWidth;
              }, 0);
            } else if (scrollXLoad) {
              if (fixedType) {
                tableColumn = fixedColumn;
              }

              _tWidth2 = tableColumn.reduce(function (previous, column) {
                return previous + column.renderWidth;
              }, 0);
            }

            if (wrapperElem) {
              // 如果是固定列
              if (fixedWrapperElem) {
                wrapperElem.style.top = "".concat(customHeight > 0 ? customHeight - footerHeight : tableHeight + headerHeight, "px");
              }

              wrapperElem.style.marginTop = "".concat(-scrollbarHeight, "px");
            }

            if (tableElem) {
              tableElem.style.width = _tWidth2 ? "".concat(_tWidth2 + scrollbarWidth, "px") : '';
            }
          }

          var colgroupElem = elemStore["".concat(name, "-").concat(layout, "-colgroup")];

          if (colgroupElem) {
            ctor_amd_xe_utils_default.a.arrayEach(colgroupElem.children, function (colElem) {
              var colid = colElem.getAttribute('name');

              if (colid === 'col_gutter') {
                colElem.style.width = "".concat(scrollbarWidth, "px");
              }

              if (fullColumnIdData[colid]) {
                var column = fullColumnIdData[colid].column;
                var showHeaderOverflow = column.showHeaderOverflow,
                    showFooterOverflow = column.showFooterOverflow,
                    showOverflow = column.showOverflow;
                var cellOverflow;
                colElem.style.width = "".concat(column.renderWidth, "px");

                if (layout === 'header') {
                  cellOverflow = ctor_amd_xe_utils_default.a.isUndefined(showHeaderOverflow) || ctor_amd_xe_utils_default.a.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;
                } else if (layout === 'footer') {
                  cellOverflow = ctor_amd_xe_utils_default.a.isUndefined(showFooterOverflow) || ctor_amd_xe_utils_default.a.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow;
                } else {
                  cellOverflow = ctor_amd_xe_utils_default.a.isUndefined(showOverflow) || ctor_amd_xe_utils_default.a.isNull(showOverflow) ? allColumnOverflow : showOverflow;
                }

                var showEllipsis = cellOverflow === 'ellipsis';
                var showTitle = cellOverflow === 'title';
                var showTooltip = cellOverflow === true || cellOverflow === 'tooltip';
                var hasEllipsis = showTitle || showTooltip || showEllipsis;
                var _listElem = elemStore["".concat(name, "-").concat(layout, "-list")]; // 滚动的渲染不支持动态行高

                if (layout === 'header' || layout === 'footer') {
                  if (scrollXLoad && !hasEllipsis) {
                    hasEllipsis = true;
                  }
                } else {
                  if ((scrollXLoad || scrollYLoad) && !hasEllipsis) {
                    hasEllipsis = true;
                  }
                }

                if (_listElem) {
                  ctor_amd_xe_utils_default.a.arrayEach(_listElem.querySelectorAll(".".concat(column.id)), function (elem) {
                    var colspan = parseInt(elem.getAttribute('colspan') || 1);
                    var cellElem = elem.querySelector('.vxe-cell');
                    var colWidth = column.renderWidth;

                    if (cellElem) {
                      if (colspan > 1) {
                        var columnIndex = tableMethods.getColumnIndex(column);

                        for (var _index = 1; _index < colspan; _index++) {
                          var nextColumn = tableMethods.getColumns(columnIndex + _index);

                          if (nextColumn) {
                            colWidth += nextColumn.renderWidth;
                          }
                        }
                      }

                      cellElem.style.width = hasEllipsis ? "".concat(colWidth - cellOffsetWidth * colspan, "px") : '';
                    }
                  });
                }
              }
            });
          }
        });
      });

      if (currentRow) {
        tableMethods.setCurrentRow(currentRow);
      }

      if (mouseConfig && mouseConfig.selected && editStore.selected.row && editStore.selected.column) {
        $xetable.addCellSelectedClass();
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var checkValidate = function checkValidate(type) {
      if ($xetable.triggerValidate) {
        return $xetable.triggerValidate(type);
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };
    /**
     * 当单元格发生改变时
     * 如果存在规则，则校验
     */


    var handleChangeCell = function handleChangeCell(evnt, params) {
      checkValidate('blur').catch(function (e) {
        return e;
      }).then(function () {
        $xetable.handleActived(params, evnt).then(function () {
          return checkValidate('change');
        }).catch(function (e) {
          return e;
        });
      });
    };

    var handleDefaultSort = function handleDefaultSort() {
      var sortConfig = props.sortConfig;

      if (sortConfig) {
        var sortOpts = computeSortOpts.value;
        var defaultSort = sortOpts.defaultSort;

        if (!sortOpts.remote && defaultSort) {
          if (!ctor_amd_xe_utils_default.a.isArray(defaultSort)) {
            defaultSort = [defaultSort];
          }

          if (defaultSort.length) {
            defaultSort.forEach(function (item) {
              var field = item.field,
                  order = item.order;

              if (field && order) {
                var column = tableMethods.getColumnByField(field);

                if (column && column.sortable) {
                  column.order = order;
                }
              }
            });
            tablePrivateMethods.handleTableData(true).then(updateStyle);
          }
        }
      }
    };

    var handleToggleCheckRowEvent = function handleToggleCheckRowEvent(evnt, params) {
      var selection = reactData.selection;
      var checkboxOpts = computeCheckboxOpts.value;
      var property = checkboxOpts.checkField;
      var row = params.row;
      var value = property ? !ctor_amd_xe_utils_default.a.get(row, property) : selection.indexOf(row) === -1;

      if (evnt) {
        tablePrivateMethods.triggerCheckRowEvent(evnt, params, value);
      } else {
        tablePrivateMethods.handleSelectRow(params, value);
      }
    };
    /**
     * 处理默认勾选
     */


    var handleDefaultSelectionChecked = function handleDefaultSelectionChecked() {
      var checkboxConfig = props.checkboxConfig;

      if (checkboxConfig) {
        var fullDataRowIdData = internalData.fullDataRowIdData;
        var checkboxOpts = computeCheckboxOpts.value;
        var checkAll = checkboxOpts.checkAll,
            checkRowKeys = checkboxOpts.checkRowKeys;

        if (checkAll) {
          tableMethods.setAllCheckboxRow(true);
        } else if (checkRowKeys) {
          var defSelection = [];
          checkRowKeys.forEach(function (rowid) {
            if (fullDataRowIdData[rowid]) {
              defSelection.push(fullDataRowIdData[rowid].row);
            }
          });
          tableMethods.setCheckboxRow(defSelection, true);
        }
      }
    };
    /**
     * 处理单选框默认勾选
     */


    var handleDefaultRadioChecked = function handleDefaultRadioChecked() {
      var radioConfig = props.radioConfig;

      if (radioConfig) {
        var fullDataRowIdData = internalData.fullDataRowIdData;
        var radioOpts = computeRadioOpts.value;
        var rowid = radioOpts.checkRowKey,
            reserve = radioOpts.reserve;

        if (rowid) {
          if (fullDataRowIdData[rowid]) {
            tableMethods.setRadioRow(fullDataRowIdData[rowid].row);
          }

          if (reserve) {
            var rowkey = getRowkey($xetable);
            internalData.radioReserveRow = _defineProperty({}, rowkey, rowid);
          }
        }
      }
    };
    /**
     * 处理默认展开行
     */


    var handleDefaultRowExpand = function handleDefaultRowExpand() {
      var expandConfig = props.expandConfig;

      if (expandConfig) {
        var fullDataRowIdData = internalData.fullDataRowIdData;
        var expandOpts = computeExpandOpts.value;
        var expandAll = expandOpts.expandAll,
            expandRowKeys = expandOpts.expandRowKeys;

        if (expandAll) {
          tableMethods.setAllRowExpand(true);
        } else if (expandRowKeys) {
          var defExpandeds = [];
          expandRowKeys.forEach(function (rowid) {
            if (fullDataRowIdData[rowid]) {
              defExpandeds.push(fullDataRowIdData[rowid].row);
            }
          });
          tableMethods.setRowExpand(defExpandeds, true);
        }
      }
    };

    var handleRadioReserveRow = function handleRadioReserveRow(row) {
      var radioOpts = computeRadioOpts.value;

      if (radioOpts.reserve) {
        internalData.radioReserveRow = row;
      }
    };

    var handleCheckboxReserveRow = function handleCheckboxReserveRow(row, checked) {
      var checkboxReserveRowMap = internalData.checkboxReserveRowMap;
      var checkboxOpts = computeCheckboxOpts.value;

      if (checkboxOpts.reserve) {
        var rowid = getRowid($xetable, row);

        if (checked) {
          checkboxReserveRowMap[rowid] = row;
        } else if (checkboxReserveRowMap[rowid]) {
          delete checkboxReserveRowMap[rowid];
        }
      }
    }; // 还原展开、选中等相关状态


    var handleReserveStatus = function handleReserveStatus() {
      var treeConfig = props.treeConfig;
      var expandColumn = reactData.expandColumn,
          currentRow = reactData.currentRow,
          selectRow = reactData.selectRow,
          selection = reactData.selection,
          rowExpandeds = reactData.rowExpandeds,
          treeExpandeds = reactData.treeExpandeds;
      var fullDataRowIdData = internalData.fullDataRowIdData,
          fullAllDataRowMap = internalData.fullAllDataRowMap,
          radioReserveRow = internalData.radioReserveRow;
      var expandOpts = computeExpandOpts.value;
      var treeOpts = computeTreeOpts.value;
      var radioOpts = computeRadioOpts.value;
      var checkboxOpts = computeCheckboxOpts.value; // 单选框

      if (selectRow && !fullAllDataRowMap.has(selectRow)) {
        reactData.selectRow = null; // 刷新单选行状态
      } // 还原保留选中状态


      if (radioOpts.reserve && radioReserveRow) {
        var rowid = getRowid($xetable, radioReserveRow);

        if (fullDataRowIdData[rowid]) {
          tableMethods.setRadioRow(fullDataRowIdData[rowid].row);
        }
      } // 复选框


      reactData.selection = getRecoverRow(selection); // 刷新多选行状态
      // 还原保留选中状态

      if (checkboxOpts.reserve) {
        tableMethods.setCheckboxRow(handleReserveRow(internalData.checkboxReserveRowMap), true);
      }

      if (currentRow && !fullAllDataRowMap.has(currentRow)) {
        reactData.currentRow = null; // 刷新当前行状态
      } // 行展开


      reactData.rowExpandeds = expandColumn ? getRecoverRow(rowExpandeds) : []; // 刷新行展开状态
      // 还原保留状态

      if (expandColumn && expandOpts.reserve) {
        tableMethods.setRowExpand(handleReserveRow(internalData.rowExpandedReserveRowMap), true);
      } // 树展开


      reactData.treeExpandeds = treeConfig ? getRecoverRow(treeExpandeds) : []; // 刷新树展开状态

      if (treeConfig && treeOpts.reserve) {
        tableMethods.setTreeExpand(handleReserveRow(internalData.treeExpandedReserveRowMap), true);
      }
    };
    /**
     * 处理默认展开树节点
     */


    var handleDefaultTreeExpand = function handleDefaultTreeExpand() {
      var treeConfig = props.treeConfig;

      if (treeConfig) {
        var tableFullData = internalData.tableFullData;
        var treeOpts = computeTreeOpts.value;
        var expandAll = treeOpts.expandAll,
            expandRowKeys = treeOpts.expandRowKeys;

        if (expandAll) {
          tableMethods.setAllTreeExpand(true);
        } else if (expandRowKeys) {
          var defExpandeds = [];
          var rowkey = getRowkey($xetable);
          expandRowKeys.forEach(function (rowid) {
            var matchObj = ctor_amd_xe_utils_default.a.findTree(tableFullData, function (item) {
              return rowid === ctor_amd_xe_utils_default.a.get(item, rowkey);
            }, treeOpts);

            if (matchObj) {
              defExpandeds.push(matchObj.item);
            }
          });
          tableMethods.setTreeExpand(defExpandeds, true);
        }
      }
    };

    var handleAsyncTreeExpandChilds = function handleAsyncTreeExpandChilds(row) {
      var treeExpandeds = reactData.treeExpandeds,
          treeLazyLoadeds = reactData.treeLazyLoadeds;
      var fullAllDataRowMap = internalData.fullAllDataRowMap;
      var treeOpts = computeTreeOpts.value;
      var checkboxOpts = computeCheckboxOpts.value;
      var loadMethod = treeOpts.loadMethod,
          children = treeOpts.children;
      var checkStrictly = checkboxOpts.checkStrictly;
      var rest = fullAllDataRowMap.get(row);
      return new Promise(function (resolve) {
        if (loadMethod) {
          treeLazyLoadeds.push(row);
          loadMethod({
            $table: $xetable,
            row: row
          }).catch(function () {
            return [];
          }).then(function (childs) {
            rest.treeLoaded = true;
            ctor_amd_xe_utils_default.a.remove(treeLazyLoadeds, function (item) {
              return item === row;
            });

            if (!ctor_amd_xe_utils_default.a.isArray(childs)) {
              childs = [];
            }

            if (childs) {
              row[children] = childs;
              appendTreeCache(row, childs);

              if (childs.length && treeExpandeds.indexOf(row) === -1) {
                treeExpandeds.push(row);
              } // 如果当前节点已选中，则展开后子节点也被选中


              if (!checkStrictly && tableMethods.isCheckedByCheckboxRow(row)) {
                tableMethods.setCheckboxRow(childs, true);
              }
            }

            resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
              return tableMethods.recalculate();
            }));
          });
        } else {
          resolve();
        }
      });
    };

    var handleTreeExpandReserve = function handleTreeExpandReserve(row, expanded) {
      var treeExpandedReserveRowMap = internalData.treeExpandedReserveRowMap;
      var treeOpts = computeTreeOpts.value;

      if (treeOpts.reserve) {
        var rowid = getRowid($xetable, row);

        if (expanded) {
          treeExpandedReserveRowMap[rowid] = row;
        } else if (treeExpandedReserveRowMap[rowid]) {
          delete treeExpandedReserveRowMap[rowid];
        }
      }
    };

    var handleAsyncRowExpand = function handleAsyncRowExpand(row) {
      var rowExpandeds = reactData.rowExpandeds,
          expandLazyLoadeds = reactData.expandLazyLoadeds;
      var fullAllDataRowMap = internalData.fullAllDataRowMap;
      var rest = fullAllDataRowMap.get(row);
      return new Promise(function (resolve) {
        var expandOpts = computeExpandOpts.value;
        var loadMethod = expandOpts.loadMethod;

        if (loadMethod) {
          expandLazyLoadeds.push(row);
          loadMethod({
            $table: $xetable,
            row: row,
            rowIndex: tableMethods.getRowIndex(row),
            $rowIndex: tableMethods.getVMRowIndex(row)
          }).catch(function (e) {
            return e;
          }).then(function () {
            rest.expandLoaded = true;
            ctor_amd_xe_utils_default.a.remove(expandLazyLoadeds, function (item) {
              return item === row;
            });
            rowExpandeds.push(row);
            resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
              return tableMethods.recalculate();
            }));
          });
        } else {
          resolve();
        }
      });
    };

    var handleRowExpandReserve = function handleRowExpandReserve(row, expanded) {
      var rowExpandedReserveRowMap = internalData.rowExpandedReserveRowMap;
      var expandOpts = computeExpandOpts.value;

      if (expandOpts.reserve) {
        var rowid = getRowid($xetable, row);

        if (expanded) {
          rowExpandedReserveRowMap[rowid] = row;
        } else if (rowExpandedReserveRowMap[rowid]) {
          delete rowExpandedReserveRowMap[rowid];
        }
      }
    };

    var handleDefaultMergeCells = function handleDefaultMergeCells() {
      var mergeCells = props.mergeCells;

      if (mergeCells) {
        tableMethods.setMergeCells(mergeCells);
      }
    };

    var handleDefaultMergeFooterItems = function handleDefaultMergeFooterItems() {
      var mergeFooterItems = props.mergeFooterItems;

      if (mergeFooterItems) {
        tableMethods.setMergeFooterItems(mergeFooterItems);
      }
    }; // 计算可视渲染相关数据


    var computeScrollLoad = function computeScrollLoad() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var scrollXLoad = reactData.scrollXLoad,
            scrollYLoad = reactData.scrollYLoad;
        var scrollXStore = internalData.scrollXStore,
            scrollYStore = internalData.scrollYStore;
        var sYOpts = computeSYOpts.value;
        var sXOpts = computeSXOpts.value; // 计算 X 逻辑

        if (scrollXLoad) {
          var _computeVirtualX = computeVirtualX(),
              visibleXSize = _computeVirtualX.visibleSize;

          var offsetXSize = sXOpts.oSize ? ctor_amd_xe_utils_default.a.toNumber(sXOpts.oSize) : table_browse.msie ? 10 : table_browse.edge ? 5 : 0;
          scrollXStore.offsetSize = offsetXSize;
          scrollXStore.visibleSize = visibleXSize;
          scrollXStore.endIndex = Math.max(scrollXStore.startIndex + scrollXStore.visibleSize + offsetXSize, scrollXStore.endIndex);
          tablePrivateMethods.updateScrollXData();
        } else {
          tablePrivateMethods.updateScrollXSpace();
        } // 计算 Y 逻辑


        var _computeVirtualY = computeVirtualY(),
            rowHeight = _computeVirtualY.rowHeight,
            visibleYSize = _computeVirtualY.visibleSize;

        scrollYStore.rowHeight = rowHeight;

        if (scrollYLoad) {
          var offsetYSize = sYOpts.oSize ? ctor_amd_xe_utils_default.a.toNumber(sYOpts.oSize) : table_browse.msie ? 20 : table_browse.edge ? 10 : 0;
          scrollYStore.offsetSize = offsetYSize;
          scrollYStore.visibleSize = visibleYSize;
          scrollYStore.endIndex = Math.max(scrollYStore.startIndex + visibleYSize + offsetYSize, scrollYStore.endIndex);
          tablePrivateMethods.updateScrollYData();
        } else {
          tablePrivateMethods.updateScrollYSpace();
        }

        reactData.rowHeight = rowHeight;
        Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(updateStyle);
      });
    };
    /**
     * 加载表格数据
     * @param {Array} datas 数据
     */


    var loadTableData = function loadTableData(datas) {
      var keepSource = props.keepSource,
          treeConfig = props.treeConfig;
      var editStore = reactData.editStore;
      var scrollYStore = internalData.scrollYStore,
          scrollXStore = internalData.scrollXStore;
      var sYOpts = computeSYOpts.value;
      var tableFullData = datas ? datas.slice(0) : [];
      var scrollYLoad = !treeConfig && sYOpts.gt > -1 && sYOpts.gt < tableFullData.length;
      scrollYStore.startIndex = 0;
      scrollYStore.endIndex = 1;
      scrollXStore.startIndex = 0;
      scrollXStore.endIndex = 1;
      editStore.insertList = [];
      editStore.removeList = []; // 全量数据

      internalData.tableFullData = tableFullData; // 缓存数据

      tablePrivateMethods.updateCache(true); // 原始数据

      internalData.tableSynchData = datas;

      if (keepSource) {
        internalData.tableSourceData = ctor_amd_xe_utils_default.a.clone(tableFullData, true);
      }

      reactData.scrollYLoad = scrollYLoad;

      if (scrollYLoad) {
        if (!(props.height || props.maxHeight)) {
          UtilTools.error('vxe.error.reqProp', ['height | max-height']);
        }

        if (!props.showOverflow) {
          UtilTools.warn('vxe.error.reqProp', ['show-overflow']);
        }

        if (props.spanMethod) {
          UtilTools.warn('vxe.error.scrollErrProp', ['span-method']);
        }
      }

      tableMethods.clearMergeCells();
      tableMethods.clearMergeFooterItems();
      tablePrivateMethods.handleTableData(true);
      tableMethods.updateFooter();
      return computeScrollLoad().then(function () {
        // 是否加载了数据
        if (scrollYLoad) {
          scrollYStore.endIndex = scrollYStore.visibleSize;
        }

        handleReserveStatus();
        tablePrivateMethods.checkSelectionStatus();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          return tableMethods.recalculate();
        }).then(function () {
          return tableMethods.refreshScroll();
        });
      });
    };
    /**
     * 默认行为只允许执行一次，除非被重置
     */


    var handleDefaults = function handleDefaults() {
      handleDefaultSelectionChecked();
      handleDefaultRadioChecked();
      handleDefaultSort();
      handleDefaultRowExpand();
      handleDefaultTreeExpand();
      handleDefaultMergeCells();
      handleDefaultMergeFooterItems();
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        return requestAnimationFrame(function () {
          return tableMethods.recalculate();
        });
      });
    };

    var handleTableColumn = function handleTableColumn() {
      var scrollXLoad = reactData.scrollXLoad;
      var visibleColumn = internalData.visibleColumn,
          scrollXStore = internalData.scrollXStore;
      reactData.tableColumn = scrollXLoad ? visibleColumn.slice(scrollXStore.startIndex, scrollXStore.endIndex) : visibleColumn.slice(0);
    };

    var loadScrollXData = function loadScrollXData() {
      var mergeList = reactData.mergeList,
          mergeFooterList = reactData.mergeFooterList;
      var scrollXStore = internalData.scrollXStore;
      var startIndex = scrollXStore.startIndex,
          endIndex = scrollXStore.endIndex,
          offsetSize = scrollXStore.offsetSize;

      var _computeVirtualX2 = computeVirtualX(),
          toVisibleIndex = _computeVirtualX2.toVisibleIndex,
          visibleSize = _computeVirtualX2.visibleSize;

      var offsetItem = {
        startIndex: Math.max(0, toVisibleIndex - 1 - offsetSize),
        endIndex: toVisibleIndex + visibleSize + offsetSize
      };
      calculateMergerOffserIndex(mergeList.concat(mergeFooterList), offsetItem, 'col');
      var offsetStartIndex = offsetItem.startIndex,
          offsetEndIndex = offsetItem.endIndex;

      if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {
        if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {
          scrollXStore.startIndex = offsetStartIndex;
          scrollXStore.endIndex = offsetEndIndex;
          tablePrivateMethods.updateScrollXData();
        }
      }

      tableMethods.clostTooltip();
    };

    var handleColumn = function handleColumn(collectColumn) {
      internalData.collectColumn = collectColumn;
      var tableFullColumn = table_getColumnList(collectColumn);
      internalData.tableFullColumn = tableFullColumn;
      cacheColumnMap();
      restoreCustomStorage();
      tableMethods.refreshColumn().then(function () {
        if (reactData.scrollXLoad) {
          loadScrollXData();
        }
      });
      tableMethods.clearMergeCells();
      tableMethods.clearMergeFooterItems();
      tablePrivateMethods.handleTableData(true);

      if ((reactData.scrollXLoad || reactData.scrollYLoad) && reactData.expandColumn) {
        UtilTools.warn('vxe.error.scrollErrProp', ['column.type=expand']);
      }

      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        if ($xetoolbar) {
          $xetoolbar.syncUpdate({
            collectColumn: collectColumn,
            $table: $xetable
          });
        }
      });
    };
    /**
     * 纵向 Y 可视渲染处理
     */


    var loadScrollYData = function loadScrollYData(evnt) {
      var mergeList = reactData.mergeList;
      var scrollYStore = internalData.scrollYStore;
      var startIndex = scrollYStore.startIndex,
          endIndex = scrollYStore.endIndex,
          visibleSize = scrollYStore.visibleSize,
          offsetSize = scrollYStore.offsetSize,
          rowHeight = scrollYStore.rowHeight;
      var scrollBodyElem = evnt.target;
      var scrollTop = scrollBodyElem.scrollTop;
      var toVisibleIndex = Math.floor(scrollTop / rowHeight);
      var offsetItem = {
        startIndex: Math.max(0, toVisibleIndex - 1 - offsetSize),
        endIndex: toVisibleIndex + visibleSize + offsetSize
      };
      calculateMergerOffserIndex(mergeList, offsetItem, 'row');
      var offsetStartIndex = offsetItem.startIndex,
          offsetEndIndex = offsetItem.endIndex;

      if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {
        if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {
          scrollYStore.startIndex = offsetStartIndex;
          scrollYStore.endIndex = offsetEndIndex;
          tablePrivateMethods.updateScrollYData();
        }
      }
    };

    var debounceScrollY = ctor_amd_xe_utils_default.a.debounce(function (evnt) {
      loadScrollYData(evnt);
    }, debounceScrollYDuration, {
      leading: false,
      trailing: true
    });

    var handleCustom = function handleCustom() {
      tablePrivateMethods.saveCustomVisible();
      tablePrivateMethods.analyColumnWidth();
      return tableMethods.refreshColumn();
    };

    var keyCtxTimeout;
    tableMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $table: $xetable,
          $event: evnt
        }, params));
      },

      /**
       * 重置表格的一切数据状态
       */
      clearAll: function clearAll() {
        return clearTableAllStatus($xetable);
      },

      /**
       * 同步 data 数据
       * 如果用了该方法，那么组件将不再记录增删改的状态，只能自行实现对应逻辑
       * 对于某些特殊的场景，比如深层树节点元素发生变动时可能会用到
       */
      syncData: function syncData() {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          reactData.tableData = [];
          emit('update:data', internalData.tableFullData);
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
        });
      },

      /**
       * 手动处理数据
       * 对于手动更改了排序、筛选...等条件后需要重新处理数据时可能会用到
       */
      updateData: function updateData() {
        return tablePrivateMethods.handleTableData(true).then(tableMethods.updateFooter).then(function () {
          return tableMethods.recalculate();
        });
      },

      /**
       * 重新加载数据，不会清空表格状态
       * @param {Array} datas 数据
       */
      loadData: function loadData(datas) {
        return loadTableData(datas).then(function () {
          if (!internalData.inited) {
            internalData.inited = true;
            handleDefaults();
          }

          tableMethods.recalculate();
        });
      },

      /**
       * 重新加载数据，会清空表格状态
       * @param {Array} datas 数据
       */
      reloadData: function reloadData(datas) {
        return tableMethods.clearAll().then(function () {
          internalData.inited = true;
          return loadTableData(datas);
        }).then(function () {
          return handleDefaults();
        });
      },

      /**
       * 局部加载行数据并恢复到初始状态
       * 对于行数据需要局部更改的场景中可能会用到
       * @param {Row} row 行对象
       * @param {Object} record 新数据
       * @param {String} field 字段名
       */
      reloadRow: function reloadRow(row, record, field) {
        var keepSource = props.keepSource;
        var tableData = reactData.tableData;
        var tableSourceData = internalData.tableSourceData;

        if (keepSource) {
          var rowIndex = tableMethods.getRowIndex(row);
          var oRow = tableSourceData[rowIndex];

          if (oRow && row) {
            if (field) {
              ctor_amd_xe_utils_default.a.set(oRow, field, ctor_amd_xe_utils_default.a.get(record || row, field));
            } else {
              if (record) {
                tableSourceData[rowIndex] = record;
                ctor_amd_xe_utils_default.a.clear(row, undefined);
                Object.assign(row, tablePrivateMethods.defineField(Object.assign({}, record)));
                tablePrivateMethods.updateCache(true);
              } else {
                ctor_amd_xe_utils_default.a.destructuring(oRow, ctor_amd_xe_utils_default.a.clone(row, true));
              }
            }
          }

          reactData.tableData = tableData.slice(0);
        } else {
          UtilTools.warn('vxe.error.reqProp', ['keep-source']);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 加载列配置
       * 对于表格列需要重载、局部递增场景下可能会用到
       * @param {ColumnInfo} columns 列配置
       */
      loadColumn: function loadColumn(columns) {
        var collectColumn = ctor_amd_xe_utils_default.a.mapTree(columns, function (column) {
          return src_cell.createColumn($xetable, column);
        });
        handleColumn(collectColumn);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 加载列配置并恢复到初始状态
       * 对于表格列需要重载、局部递增场景下可能会用到
       * @param {ColumnInfo} columns 列配置
       */
      reloadColumn: function reloadColumn(columns) {
        tableMethods.clearAll();
        return tableMethods.loadColumn(columns);
      },

      /**
       * 根据 tr 元素获取对应的 row 信息
       * @param {Element} tr 元素
       */
      getRowNode: function getRowNode(tr) {
        if (tr) {
          var fullAllDataRowIdData = internalData.fullAllDataRowIdData;
          var rowid = tr.getAttribute('data-rowid');
          var rest = fullAllDataRowIdData[rowid];

          if (rest) {
            return {
              rowid: rest.rowid,
              item: rest.row,
              index: rest.index,
              items: rest.items,
              parent: rest.parent
            };
          }
        }

        return null;
      },

      /**
       * 根据 th/td 元素获取对应的 column 信息
       * @param {Element} cell 元素
       */
      getColumnNode: function getColumnNode(cell) {
        if (cell) {
          var fullColumnIdData = internalData.fullColumnIdData;
          var colid = cell.getAttribute('data-colid');
          var rest = fullColumnIdData[colid];

          if (rest) {
            return {
              colid: rest.colid,
              item: rest.column,
              index: rest.index,
              items: rest.items,
              parent: rest.parent
            };
          }
        }

        return null;
      },

      /**
       * 根据 row 获取相对于 data 中的索引
       * @param {Row} row 行对象
       */
      getRowIndex: function getRowIndex(row) {
        var fullDataRowMap = internalData.fullDataRowMap;
        return fullDataRowMap.has(row) ? fullDataRowMap.get(row).index : -1;
      },

      /**
       * 根据 row 获取相对于当前数据中的索引
       * @param {Row} row 行对象
       */
      getVTRowIndex: function getVTRowIndex(row) {
        return internalData.afterFullData.indexOf(row);
      },

      /**
       * 根据 row 获取渲染中的虚拟索引
       * @param {Row} row 行对象
       */
      getVMRowIndex: function getVMRowIndex(row) {
        return reactData.tableData.indexOf(row);
      },

      /**
       * 根据 column 获取相对于 columns 中的索引
       * @param {ColumnInfo} column 列配置
       */
      getColumnIndex: function getColumnIndex(column) {
        return internalData.fullColumnMap.has(column) ? internalData.fullColumnMap.get(column).index : -1;
      },

      /**
       * 根据 column 获取相对于当前表格列中的索引
       * @param {ColumnInfo} column 列配置
       */
      getVTColumnIndex: function getVTColumnIndex(column) {
        return column ? ctor_amd_xe_utils_default.a.findIndexOf(internalData.visibleColumn, function (item) {
          return item.id === column.id;
        }) : -1;
      },

      /**
       * 根据 column 获取渲染中的虚拟索引
       * @param {ColumnInfo} column 列配置
       */
      getVMColumnIndex: function getVMColumnIndex(column) {
        return column ? ctor_amd_xe_utils_default.a.findIndexOf(reactData.tableColumn, function (item) {
          return item.id === column.id;
        }) : -1;
      },

      /**
       * 创建 data 对象
       * 对于某些特殊场景可能会用到，会自动对数据的字段名进行检测，如果不存在就自动定义
       * @param {Array} records 新数据
       */
      createData: function createData(records) {
        var rowkey = getRowkey($xetable);
        var rows = records.map(function (record) {
          return tablePrivateMethods.defineField(Object.assign({}, record, _defineProperty({}, rowkey, null)));
        });
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          return rows;
        });
      },

      /**
       * 创建 Row|Rows 对象
       * 对于某些特殊场景需要对数据进行手动插入时可能会用到
       * @param {Array/Object} records 新数据
       */
      createRow: function createRow(records) {
        var isArr = ctor_amd_xe_utils_default.a.isArray(records);

        if (!isArr) {
          records = [records];
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          return tableMethods.createData(records).then(function (rows) {
            return isArr ? rows : rows[0];
          });
        });
      },

      /**
       * 还原数据
       * 如果不传任何参数，则还原整个表格
       * 如果传 row 则还原一行
       * 如果传 rows 则还原多行
       * 如果还额外传了 field 则还原指定的单元格数据
       */
      revertData: function revertData(rows, field) {
        var keepSource = props.keepSource;
        var tableSourceData = internalData.tableSourceData,
            tableFullData = internalData.tableFullData;

        if (keepSource) {
          if (arguments.length) {
            if (rows && !ctor_amd_xe_utils_default.a.isArray(rows)) {
              rows = [rows];
            }

            rows.forEach(function (row) {
              if (!tableMethods.isInsertByRow(row)) {
                var rowIndex = tableFullData.indexOf(row);
                var oRow = tableSourceData[rowIndex];

                if (oRow && row) {
                  if (field) {
                    ctor_amd_xe_utils_default.a.set(row, field, ctor_amd_xe_utils_default.a.clone(ctor_amd_xe_utils_default.a.get(oRow, field), true));
                  } else {
                    ctor_amd_xe_utils_default.a.destructuring(row, ctor_amd_xe_utils_default.a.clone(oRow, true));
                  }
                }
              }
            });
            return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
          }

          return tableMethods.reloadData(tableSourceData);
        } else {
          UtilTools.warn('vxe.error.reqProp', ['keep-source']);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 清空单元格内容
       * 如果不创参数，则清空整个表格内容
       * 如果传 row 则清空一行内容
       * 如果传 rows 则清空多行内容
       * 如果还额外传了 field 则清空指定单元格内容
       * @param {Array/Row} rows 行数据
       * @param {String} field 字段名
       */
      clearData: function clearData(rows, field) {
        var tableFullData = internalData.tableFullData,
            visibleColumn = internalData.visibleColumn;

        if (!arguments.length) {
          rows = tableFullData;
        } else if (rows && !ctor_amd_xe_utils_default.a.isArray(rows)) {
          rows = [rows];
        }

        if (field) {
          rows.forEach(function (row) {
            return ctor_amd_xe_utils_default.a.set(row, field, null);
          });
        } else {
          rows.forEach(function (row) {
            visibleColumn.forEach(function (column) {
              if (column.property) {
                table_setCellValue(row, column, null);
              }
            });
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 检查是否为临时行数据
       * @param {Row} row 行对象
       */
      isInsertByRow: function isInsertByRow(row) {
        return reactData.editStore.insertList.indexOf(row) > -1;
      },

      /**
       * 检查行或列数据是否发生改变
       * @param {Row} row 行对象
       * @param {String} field 字段名
       */
      isUpdateByRow: function isUpdateByRow(row, field) {
        var keepSource = props.keepSource,
            treeConfig = props.treeConfig;
        var visibleColumn = internalData.visibleColumn,
            tableSourceData = internalData.tableSourceData,
            fullDataRowIdData = internalData.fullDataRowIdData;
        var treeOpts = computeTreeOpts.value;

        if (keepSource) {
          var oRow, property;
          var rowid = getRowid($xetable, row); // 新增的数据不需要检测

          if (!fullDataRowIdData[rowid]) {
            return false;
          }

          if (treeConfig) {
            var children = treeOpts.children;
            var matchObj = ctor_amd_xe_utils_default.a.findTree(tableSourceData, function (item) {
              return rowid === getRowid($xetable, item);
            }, treeOpts);
            row = Object.assign({}, row, _defineProperty({}, children, null));

            if (matchObj) {
              oRow = Object.assign({}, matchObj.item, _defineProperty({}, children, null));
            }
          } else {
            var oRowIndex = fullDataRowIdData[rowid].index;
            oRow = tableSourceData[oRowIndex];
          }

          if (oRow) {
            if (arguments.length > 1) {
              return !eqCellValue(oRow, row, field);
            }

            for (var index = 0, len = visibleColumn.length; index < len; index++) {
              property = visibleColumn[index].property;

              if (property && !eqCellValue(oRow, row, property)) {
                return true;
              }
            }
          }
        }

        return false;
      },

      /**
       * 获取表格的可视列，也可以指定索引获取列
       * @param {Number} columnIndex 索引
       */
      getColumns: function getColumns(columnIndex) {
        var columns = internalData.visibleColumn;
        return ctor_amd_xe_utils_default.a.isUndefined(columnIndex) ? columns.slice(0) : columns[columnIndex];
      },

      /**
       * 根据列的唯一主键获取列
       * @param {String} colid 列主键
       */
      getColumnById: function getColumnById(colid) {
        var fullColumnIdData = internalData.fullColumnIdData;
        return fullColumnIdData[colid] ? fullColumnIdData[colid].column : null;
      },

      /**
       * 根据列的字段名获取列
       * @param {String} field 字段名
       */
      getColumnByField: function getColumnByField(field) {
        var fullColumnFieldData = internalData.fullColumnFieldData;
        return fullColumnFieldData[field] ? fullColumnFieldData[field].column : null;
      },

      /**
       * 获取当前表格的列
       * 收集到的全量列、全量表头列、处理条件之后的全量表头列、当前渲染中的表头列
       */
      getTableColumn: function getTableColumn() {
        return {
          collectColumn: internalData.collectColumn.slice(0),
          fullColumn: internalData.tableFullColumn.slice(0),
          visibleColumn: internalData.visibleColumn.slice(0),
          tableColumn: reactData.tableColumn.slice(0)
        };
      },

      /**
       * 获取数据，和 data 的行为一致，也可以指定索引获取数据
       */
      getData: function getData(rowIndex) {
        var tableSynchData = props.data || internalData.tableSynchData;
        return ctor_amd_xe_utils_default.a.isUndefined(rowIndex) ? tableSynchData.slice(0) : tableSynchData[rowIndex];
      },

      /**
       * 用于多选行，获取已选中的数据
       */
      getCheckboxRecords: function getCheckboxRecords() {
        var treeConfig = props.treeConfig;
        var tableFullData = internalData.tableFullData;
        var treeOpts = computeTreeOpts.value;
        var checkboxOpts = computeCheckboxOpts.value;
        var property = checkboxOpts.checkField;
        var rowList = [];

        if (property) {
          if (treeConfig) {
            rowList = ctor_amd_xe_utils_default.a.filterTree(tableFullData, function (row) {
              return ctor_amd_xe_utils_default.a.get(row, property);
            }, treeOpts);
          } else {
            rowList = tableFullData.filter(function (row) {
              return ctor_amd_xe_utils_default.a.get(row, property);
            });
          }
        } else {
          var selection = reactData.selection;

          if (treeConfig) {
            rowList = ctor_amd_xe_utils_default.a.filterTree(tableFullData, function (row) {
              return selection.indexOf(row) > -1;
            }, treeOpts);
          } else {
            rowList = tableFullData.filter(function (row) {
              return selection.indexOf(row) > -1;
            });
          }
        }

        return rowList;
      },

      /**
       * 根据行的唯一主键获取行
       * @param {String/Number} rowid 行主键
       */
      getRowById: function getRowById(rowid) {
        var fullDataRowIdData = internalData.fullDataRowIdData;
        return fullDataRowIdData[rowid] ? fullDataRowIdData[rowid].row : null;
      },

      /**
       * 根据行获取行的唯一主键
       * @param {Row} row 行对象
       */
      getRowid: function getRowid(row) {
        var fullAllDataRowMap = internalData.fullAllDataRowMap;
        return fullAllDataRowMap.has(row) ? fullAllDataRowMap.get(row).rowid : null;
      },

      /**
       * 获取处理后的表格数据
       * 如果存在筛选条件，继续处理
       * 如果存在排序，继续处理
       */
      getTableData: function getTableData() {
        var tableData = reactData.tableData,
            footerData = reactData.footerData;
        var tableFullData = internalData.tableFullData,
            afterFullData = internalData.afterFullData;
        return {
          fullData: tableFullData.slice(0),
          visibleData: afterFullData.slice(0),
          tableData: tableData.slice(0),
          footerData: footerData.slice(0)
        };
      },

      /**
       * 隐藏指定列
       * @param {ColumnInfo} column 列配置
       */
      hideColumn: function hideColumn(column) {
        column.visible = false;
        return handleCustom();
      },

      /**
       * 显示指定列
       * @param {ColumnInfo} column 列配置
       */
      showColumn: function showColumn(column) {
        column.visible = true;
        return handleCustom();
      },

      /**
       * 手动重置列的显示隐藏、列宽拖动的状态；
       * 如果为 true 则重置所有状态
       * 如果已关联工具栏，则会同步更新
       */
      resetColumn: function resetColumn(options) {
        var tableFullColumn = internalData.tableFullColumn;
        var customOpts = computeCustomOpts.value;
        var checkMethod = customOpts.checkMethod;
        var opts = Object.assign({
          visible: true,
          resizable: options === true
        }, options);
        tableFullColumn.forEach(function (column) {
          if (opts.resizable) {
            column.resizeWidth = 0;
          }

          if (!checkMethod || checkMethod({
            column: column
          })) {
            column.visible = column.defaultVisible;
          }
        });

        if (opts.resizable) {
          tablePrivateMethods.saveCustomResizable(true);
        }

        return handleCustom();
      },

      /**
       * 刷新列信息
       * 将固定的列左边、右边分别靠边
       */
      refreshColumn: function refreshColumn() {
        var leftList = [];
        var centerList = [];
        var rightList = [];
        var isGroup = reactData.isGroup,
            columnStore = reactData.columnStore;
        var sXOpts = computeSXOpts.value;
        var collectColumn = internalData.collectColumn,
            tableFullColumn = internalData.tableFullColumn,
            scrollXStore = internalData.scrollXStore; // 如果是分组表头，如果子列全部被隐藏，则根列也隐藏

        if (isGroup) {
          var leftGroupList = [];
          var centerGroupList = [];
          var rightGroupList = [];
          ctor_amd_xe_utils_default.a.eachTree(collectColumn, function (column, index, items, path, parent) {
            var isColGroup = hasChildrenList(column); // 如果是分组，必须按组设置固定列，不允许给子列设置固定

            if (parent && parent.fixed) {
              column.fixed = parent.fixed;
            }

            if (parent && column.fixed !== parent.fixed) {
              UtilTools.error('vxe.error.groupFixed');
            }

            if (isColGroup) {
              column.visible = !!ctor_amd_xe_utils_default.a.findTree(column.children, function (subColumn) {
                return hasChildrenList(subColumn) ? null : subColumn.visible;
              });
            } else if (column.visible) {
              if (column.fixed === 'left') {
                leftList.push(column);
              } else if (column.fixed === 'right') {
                rightList.push(column);
              } else {
                centerList.push(column);
              }
            }
          });
          collectColumn.forEach(function (column) {
            if (column.visible) {
              if (column.fixed === 'left') {
                leftGroupList.push(column);
              } else if (column.fixed === 'right') {
                rightGroupList.push(column);
              } else {
                centerGroupList.push(column);
              }
            }
          });
          reactData.tableGroupColumn = leftGroupList.concat(centerGroupList).concat(rightGroupList);
        } else {
          // 重新分配列
          tableFullColumn.forEach(function (column) {
            if (column.visible) {
              if (column.fixed === 'left') {
                leftList.push(column);
              } else if (column.fixed === 'right') {
                rightList.push(column);
              } else {
                centerList.push(column);
              }
            }
          });
        }

        var visibleColumn = leftList.concat(centerList).concat(rightList);
        var scrollXLoad = sXOpts.gt > -1 && sXOpts.gt < tableFullColumn.length;
        Object.assign(columnStore, {
          leftList: leftList,
          centerList: centerList,
          rightList: rightList
        });

        if (scrollXLoad && isGroup) {
          scrollXLoad = false;
          UtilTools.warn('vxe.error.scrollXNotGroup');
        }

        if (scrollXLoad) {
          if (props.showHeader && !props.showHeaderOverflow) {
            UtilTools.warn('vxe.error.reqProp', ['show-header-overflow']);
          }

          if (props.showFooter && !props.showFooterOverflow) {
            UtilTools.warn('vxe.error.reqProp', ['show-footer-overflow']);
          }

          if (props.spanMethod) {
            UtilTools.warn('vxe.error.scrollErrProp', ['span-method']);
          }

          if (props.footerSpanMethod) {
            UtilTools.warn('vxe.error.scrollErrProp', ['footer-span-method']);
          }

          var _computeVirtualX3 = computeVirtualX(),
              visibleSize = _computeVirtualX3.visibleSize;

          scrollXStore.startIndex = 0;
          scrollXStore.endIndex = visibleSize;
          scrollXStore.visibleSize = visibleSize;
        } // 如果列被显示/隐藏，则清除合并状态
        // 如果列被设置为固定，则清除合并状态


        if (visibleColumn.length !== internalData.visibleColumn.length || !internalData.visibleColumn.every(function (column, index) {
          return column === visibleColumn[index];
        })) {
          tableMethods.clearMergeCells();
          tableMethods.clearMergeFooterItems();
        }

        reactData.scrollXLoad = scrollXLoad;
        internalData.visibleColumn = visibleColumn;
        handleTableColumn();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          tableMethods.updateFooter();
          return tableMethods.recalculate(true);
        }).then(function () {
          tablePrivateMethods.updateCellAreas();
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
            return tableMethods.recalculate();
          });
        });
      },

      /**
       * 刷新滚动操作，手动同步滚动相关位置（对于某些特殊的操作，比如滚动条错位、固定列不同步）
       */
      refreshScroll: function refreshScroll() {
        var lastScrollLeft = internalData.lastScrollLeft,
            lastScrollTop = internalData.lastScrollTop;
        return tableMethods.clearScroll().then(function () {
          if (lastScrollLeft || lastScrollTop) {
            // 重置最后滚动状态
            internalData.lastScrollLeft = 0;
            internalData.lastScrollTop = 0; // 还原滚动状态

            return tableMethods.scrollTo(lastScrollLeft, lastScrollTop);
          }
        });
      },

      /**
       * 计算单元格列宽，动态分配可用剩余空间
       * 支持 width=? width=?px width=?% min-width=? min-width=?px min-width=?%
       */
      recalculate: function recalculate(refull) {
        var tableHeader = refTableHeader.value;
        var tableBody = refTableBody.value;
        var tableFooter = refTableFooter.value;
        var bodyElem = tableBody ? tableBody.$el : null;
        var headerElem = tableHeader ? tableHeader.$el : null;
        var footerElem = tableFooter ? tableFooter.$el : null;

        if (bodyElem) {
          autoCellWidth(headerElem, bodyElem, footerElem);

          if (refull === true) {
            // 初始化时需要在列计算之后再执行优化运算，达到最优显示效果
            return computeScrollLoad().then(function () {
              autoCellWidth(headerElem, bodyElem, footerElem);
              computeScrollLoad();
            });
          }
        }

        return computeScrollLoad();
      },

      /**
       * 关闭 tooltip
       */
      clostTooltip: function clostTooltip() {
        var tooltipStore = internalData.tooltipStore;
        var $tooltip = refTooltip.value;

        if (tooltipStore.visible) {
          Object.assign(tooltipStore, {
            row: null,
            column: null,
            content: null,
            visible: false
          });

          if ($tooltip) {
            $tooltip.close();
          }
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 判断复选框是否全选
       */
      isAllCheckboxChecked: function isAllCheckboxChecked() {
        return reactData.isAllSelected;
      },

      /**
       * 判断复选框是否半选
       */
      isCheckboxIndeterminate: function isCheckboxIndeterminate() {
        return !reactData.isAllSelected && reactData.isIndeterminate;
      },

      /**
       * 获取复选框半选状态的行数据
       */
      getCheckboxIndeterminateRecords: function getCheckboxIndeterminateRecords() {
        var treeConfig = props.treeConfig;
        var treeIndeterminates = reactData.treeIndeterminates;

        if (treeConfig) {
          return treeIndeterminates.slice(0);
        }

        return [];
      },

      /**
       * 用于多选行，设置行为选中状态，第二个参数为选中与否
       * @param {Array/Row} rows 行数据
       * @param {Boolean} value 是否选中
       */
      setCheckboxRow: function setCheckboxRow(rows, value) {
        if (rows && !ctor_amd_xe_utils_default.a.isArray(rows)) {
          rows = [rows];
        }

        rows.forEach(function (row) {
          return tablePrivateMethods.handleSelectRow({
            row: row
          }, !!value);
        });
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      isCheckedByCheckboxRow: function isCheckedByCheckboxRow(row) {
        var checkboxOpts = computeCheckboxOpts.value;
        var property = checkboxOpts.checkField;

        if (property) {
          return ctor_amd_xe_utils_default.a.get(row, property);
        }

        return reactData.selection.indexOf(row) > -1;
      },

      /**
       * 多选，切换某一行的选中状态
       */
      toggleCheckboxRow: function toggleCheckboxRow(row) {
        handleToggleCheckRowEvent(null, {
          row: row
        });
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 用于多选行，设置所有行的选中状态
       * @param {Boolean} value 是否选中
       */
      setAllCheckboxRow: function setAllCheckboxRow(value) {
        var treeConfig = props.treeConfig;
        var selection = reactData.selection;
        var afterFullData = internalData.afterFullData,
            checkboxReserveRowMap = internalData.checkboxReserveRowMap;
        var treeOpts = computeTreeOpts.value;
        var checkboxOpts = computeCheckboxOpts.value;
        var property = checkboxOpts.checkField,
            reserve = checkboxOpts.reserve,
            checkStrictly = checkboxOpts.checkStrictly,
            checkMethod = checkboxOpts.checkMethod;
        var selectRows = [];
        var beforeSelection = treeConfig ? [] : selection.filter(function (row) {
          return afterFullData.indexOf(row) === -1;
        });

        if (checkStrictly) {
          reactData.isAllSelected = value;
        } else {
          /**
           * 绑定属性方式（高性能，有污染）
           * 必须在行数据存在对应的属性，否则将不响应
           */
          if (property) {
            var checkValFn = function checkValFn(row) {
              if (!checkMethod || checkMethod({
                row: row
              })) {
                if (value) {
                  selectRows.push(row);
                }

                ctor_amd_xe_utils_default.a.set(row, property, value);
              }
            }; // 如果存在选中方法
            // 如果方法成立，则更新值，否则忽略该数据


            if (treeConfig) {
              ctor_amd_xe_utils_default.a.eachTree(afterFullData, checkValFn, treeOpts);
            } else {
              afterFullData.forEach(checkValFn);
            }
          } else {
            /**
             * 默认方式（低性能，无污染）
             * 无需任何属性，直接绑定
             */
            if (treeConfig) {
              if (value) {
                /**
                 * 如果是树勾选
                 * 如果方法成立，则添加到临时集合中
                 */
                ctor_amd_xe_utils_default.a.eachTree(afterFullData, function (row) {
                  if (!checkMethod || checkMethod({
                    row: row
                  })) {
                    selectRows.push(row);
                  }
                }, treeOpts);
              } else {
                /**
                 * 如果是树取消
                 * 如果方法成立，则不添加到临时集合中
                 */
                if (checkMethod) {
                  ctor_amd_xe_utils_default.a.eachTree(afterFullData, function (row) {
                    if (checkMethod({
                      row: row
                    }) ? 0 : selection.indexOf(row) > -1) {
                      selectRows.push(row);
                    }
                  }, treeOpts);
                }
              }
            } else {
              if (value) {
                /**
                 * 如果是行勾选
                 * 如果存在选中方法且成立或者本身已勾选，则添加到临时集合中
                 * 如果不存在选中方法，则添加所有数据到临时集合中
                 */
                if (checkMethod) {
                  selectRows = afterFullData.filter(function (row) {
                    return selection.indexOf(row) > -1 || checkMethod({
                      row: row
                    });
                  });
                } else {
                  selectRows = afterFullData.slice(0);
                }
              } else {
                /**
                 * 如果是行取消
                 * 如果方法成立，则不添加到临时集合中；如果方法不成立则判断当前是否已勾选，如果已被勾选则添加到新集合中
                 * 如果不存在选中方法，无需处理，临时集合默认为空
                 */
                if (checkMethod) {
                  selectRows = afterFullData.filter(function (row) {
                    return checkMethod({
                      row: row
                    }) ? 0 : selection.indexOf(row) > -1;
                  });
                }
              }
            }
          }

          if (reserve) {
            if (value) {
              selectRows.forEach(function (row) {
                checkboxReserveRowMap[getRowid($xetable, row)] = row;
              });
            } else {
              afterFullData.forEach(function (row) {
                return handleCheckboxReserveRow(row, false);
              });
            }
          }

          reactData.selection = property ? [] : beforeSelection.concat(selectRows);
        }

        reactData.treeIndeterminates = [];
        tablePrivateMethods.checkSelectionStatus();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 获取单选框保留选中的行
       */
      getRadioReserveRecord: function getRadioReserveRecord() {
        var fullDataRowIdData = internalData.fullDataRowIdData,
            radioReserveRow = internalData.radioReserveRow;
        var radioOpts = computeRadioOpts.value;

        if (radioOpts.reserve && radioReserveRow) {
          if (!fullDataRowIdData[getRowid($xetable, radioReserveRow)]) {
            return radioReserveRow;
          }
        }

        return null;
      },
      clearRadioReserve: function clearRadioReserve() {
        internalData.radioReserveRow = null;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 获取复选框保留选中的行
       */
      getCheckboxReserveRecords: function getCheckboxReserveRecords() {
        var fullDataRowIdData = internalData.fullDataRowIdData,
            checkboxReserveRowMap = internalData.checkboxReserveRowMap;
        var checkboxOpts = computeCheckboxOpts.value;
        var reserveSelection = [];

        if (checkboxOpts.reserve) {
          ctor_amd_xe_utils_default.a.each(checkboxReserveRowMap, function (row, rowid) {
            if (row && !fullDataRowIdData[rowid]) {
              reserveSelection.push(row);
            }
          });
        }

        return reserveSelection;
      },
      clearCheckboxReserve: function clearCheckboxReserve() {
        internalData.checkboxReserveRowMap = {};
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 多选，切换所有行的选中状态
       */
      toggleAllCheckboxRow: function toggleAllCheckboxRow() {
        tablePrivateMethods.triggerCheckAllEvent(null, !reactData.isAllSelected);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 用于多选行，手动清空用户的选择
       * 清空行为不管是否被禁用还是保留记录，都将彻底清空选中状态
       */
      clearCheckboxRow: function clearCheckboxRow() {
        var treeConfig = props.treeConfig;
        var tableFullData = internalData.tableFullData;
        var treeOpts = computeTreeOpts.value;
        var checkboxOpts = computeCheckboxOpts.value;
        var property = checkboxOpts.checkField,
            reserve = checkboxOpts.reserve;

        if (property) {
          if (treeConfig) {
            ctor_amd_xe_utils_default.a.eachTree(tableFullData, function (item) {
              return ctor_amd_xe_utils_default.a.set(item, property, false);
            }, treeOpts);
          } else {
            tableFullData.forEach(function (item) {
              return ctor_amd_xe_utils_default.a.set(item, property, false);
            });
          }
        }

        if (reserve) {
          tableFullData.forEach(function (row) {
            return handleCheckboxReserveRow(row, false);
          });
        }

        reactData.isAllSelected = false;
        reactData.isIndeterminate = false;
        reactData.selection = [];
        reactData.treeIndeterminates = [];
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 用于当前行，设置某一行为高亮状态
       * @param {Row} row 行对象
       */
      setCurrentRow: function setCurrentRow(row) {
        var el = refElem.value;
        tableMethods.clearCurrentRow();
        tableMethods.clearCurrentColumn();
        reactData.currentRow = row;

        if (props.highlightCurrentRow) {
          ctor_amd_xe_utils_default.a.arrayEach(el.querySelectorAll("[data-rowid=\"".concat(getRowid($xetable, row), "\"]")), function (elem) {
            return addClass(elem, 'row--current');
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      isCheckedByRadioRow: function isCheckedByRadioRow(row) {
        return reactData.selectRow === row;
      },

      /**
       * 用于单选行，设置某一行为选中状态
       * @param {Row} row 行对象
       */
      setRadioRow: function setRadioRow(row) {
        var radioOpts = computeRadioOpts.value;
        var checkMethod = radioOpts.checkMethod;

        if (row && (!checkMethod || checkMethod({
          row: row
        }))) {
          reactData.selectRow = row;
          handleRadioReserveRow(row);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 用于当前行，手动清空当前高亮的状态
       */
      clearCurrentRow: function clearCurrentRow() {
        var el = refElem.value;
        reactData.currentRow = null;
        internalData.hoverRow = null;
        ctor_amd_xe_utils_default.a.arrayEach(el.querySelectorAll('.row--current'), function (elem) {
          return table_removeClass(elem, 'row--current');
        });
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 用于单选行，手动清空用户的选择
       */
      clearRadioRow: function clearRadioRow() {
        reactData.selectRow = null;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 用于当前行，获取当前行的数据
       */
      getCurrentRecord: function getCurrentRecord() {
        return props.highlightCurrentRow ? reactData.currentRow : null;
      },

      /**
       * 用于单选行，获取当已选中的数据
       */
      getRadioRecord: function getRadioRecord() {
        return reactData.selectRow;
      },
      getCurrentColumn: function getCurrentColumn() {
        return props.highlightCurrentColumn ? reactData.currentColumn : null;
      },

      /**
       * 用于当前列，设置某列行为高亮状态
       * @param {ColumnInfo} column 列配置
       */
      setCurrentColumn: function setCurrentColumn(column) {
        tableMethods.clearCurrentRow();
        tableMethods.clearCurrentColumn();
        reactData.currentColumn = column;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 用于当前列，手动清空当前高亮的状态
       */
      clearCurrentColumn: function clearCurrentColumn() {
        reactData.currentColumn = null;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      sort: function sort(sortConfs, sortOrder) {
        var sortOpts = computeSortOpts.value;
        var multiple = sortOpts.multiple,
            remote = sortOpts.remote,
            orders = sortOpts.orders;

        if (sortConfs) {
          if (ctor_amd_xe_utils_default.a.isString(sortConfs)) {
            sortConfs = [{
              field: sortConfs,
              order: sortOrder
            }];
          }
        }

        if (!ctor_amd_xe_utils_default.a.isArray(sortConfs)) {
          sortConfs = [sortConfs];
        }

        if (sortConfs.length) {
          if (!multiple) {
            clearAllSort();
          }

          (multiple ? sortConfs : [sortConfs[0]]).forEach(function (confs) {
            var field = confs.field,
                order = confs.order;
            var column = field;

            if (ctor_amd_xe_utils_default.a.isString(field)) {
              column = tableMethods.getColumnByField(field);
            }

            if (column && column.sortable) {
              if (orders.indexOf(order) === -1) {
                order = getNextSortOrder(column);
              }

              if (column.order !== order) {
                column.order = order;
              }
            }
          }); // 如果是服务端排序，则跳过本地排序处理

          if (!remote) {
            tablePrivateMethods.handleTableData(true);
          }

          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(updateStyle);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 清空指定列的排序条件
       * 如果为空则清空所有列的排序条件
       * @param {String} columnOrField 列或字段名
       */
      clearSort: function clearSort(columnOrField) {
        var sortOpts = computeSortOpts.value;

        if (columnOrField && ctor_amd_xe_utils_default.a.isString(columnOrField)) {
          columnOrField = tableMethods.getColumnByField(columnOrField);
        }

        if (columnOrField) {
          columnOrField.order = null;
        } else {
          clearAllSort();
        }

        if (!sortOpts.remote) {
          return tablePrivateMethods.handleTableData(true);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      isSort: function isSort(columnOrField) {
        var column;

        if (columnOrField) {
          column = ctor_amd_xe_utils_default.a.isString(columnOrField) ? tableMethods.getColumnByField(columnOrField) : columnOrField;
          return column && column.sortable && column.order;
        }

        return tableMethods.getSortColumns().length > 0;
      },
      getSortColumns: function getSortColumns() {
        var sortList = [];
        var visibleColumn = internalData.visibleColumn;
        visibleColumn.forEach(function (column) {
          var order = column.order;

          if (column.sortable && order) {
            sortList.push({
              column: column,
              sortBy: column.sortBy,
              property: column.property,
              order: order
            });
          }
        });
        return sortList;
      },

      /**
       * 关闭筛选
       * @param {Event} evnt 事件
       */
      closeFilter: function closeFilter() {
        var filterStore = reactData.filterStore;
        Object.assign(filterStore, {
          isAllSelected: false,
          isIndeterminate: false,
          options: [],
          visible: false
        });
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 判断指定列是否为筛选状态，如果为空则判断所有列
       * @param {String} field 字段名
       */
      isFilter: function isFilter(columnOrField) {
        var column;

        if (columnOrField) {
          column = ctor_amd_xe_utils_default.a.isString(columnOrField) ? tableMethods.getColumnByField(columnOrField) : columnOrField;
          return column && column.filters && column.filters.some(function (option) {
            return option.checked;
          });
        }

        return $xetable.getCheckedFilters().length;
      },

      /**
       * 判断展开行是否懒加载完成
       * @param {Row} row 行对象
       */
      isRowExpandLoaded: function isRowExpandLoaded(row) {
        var fullAllDataRowMap = internalData.fullAllDataRowMap;
        var rest = fullAllDataRowMap.get(row);
        return rest && rest.expandLoaded;
      },
      clearRowExpandLoaded: function clearRowExpandLoaded(row) {
        var expandLazyLoadeds = reactData.expandLazyLoadeds;
        var fullAllDataRowMap = internalData.fullAllDataRowMap;
        var expandOpts = computeExpandOpts.value;
        var lazy = expandOpts.lazy;
        var rest = fullAllDataRowMap.get(row);

        if (lazy && rest) {
          rest.expandLoaded = false;
          ctor_amd_xe_utils_default.a.remove(expandLazyLoadeds, function (item) {
            return row === item;
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 重新加载展开行的内容
       * @param {Row} row 行对象
       */
      reloadExpandContent: function reloadExpandContent(row) {
        var expandLazyLoadeds = reactData.expandLazyLoadeds;
        var expandOpts = computeExpandOpts.value;
        var lazy = expandOpts.lazy;

        if (lazy && expandLazyLoadeds.indexOf(row) === -1) {
          tableMethods.clearRowExpandLoaded(row).then(function () {
            return handleAsyncRowExpand(row);
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 切换展开行
       */
      toggleRowExpand: function toggleRowExpand(row) {
        return tableMethods.setRowExpand(row, !tableMethods.isExpandByRow(row));
      },

      /**
       * 设置所有行的展开与否
       * @param {Boolean} expanded 是否展开
       */
      setAllRowExpand: function setAllRowExpand(expanded) {
        var expandOpts = computeExpandOpts.value;
        return tableMethods.setRowExpand(expandOpts.lazy ? reactData.tableData : internalData.tableFullData, expanded);
      },

      /**
       * 设置展开行，二个参数设置这一行展开与否
       * 支持单行
       * 支持多行
       * @param {Array/Row} rows 行数据
       * @param {Boolean} expanded 是否展开
       */
      setRowExpand: function setRowExpand(rows, expanded) {
        var rowExpandeds = reactData.rowExpandeds,
            expandLazyLoadeds = reactData.expandLazyLoadeds,
            column = reactData.expandColumn;
        var fullAllDataRowMap = internalData.fullAllDataRowMap;
        var expandOpts = computeExpandOpts.value;
        var reserve = expandOpts.reserve,
            lazy = expandOpts.lazy,
            accordion = expandOpts.accordion,
            toggleMethod = expandOpts.toggleMethod;
        var lazyRests = [];
        var columnIndex = tableMethods.getColumnIndex(column);
        var $columnIndex = tableMethods.getVMColumnIndex(column);

        if (rows) {
          if (!ctor_amd_xe_utils_default.a.isArray(rows)) {
            rows = [rows];
          }

          if (accordion) {
            // 只能同时展开一个
            rowExpandeds = [];
            rows = rows.slice(rows.length - 1, rows.length);
          }

          var validRows = toggleMethod ? rows.filter(function (row) {
            return toggleMethod({
              $table: $xetable,
              expanded: expanded,
              column: column,
              columnIndex: columnIndex,
              $columnIndex: $columnIndex,
              row: row,
              rowIndex: tableMethods.getRowIndex(row),
              $rowIndex: tableMethods.getVMRowIndex(row)
            });
          }) : rows;

          if (expanded) {
            validRows.forEach(function (row) {
              if (rowExpandeds.indexOf(row) === -1) {
                var rest = fullAllDataRowMap.get(row);
                var isLoad = lazy && !rest.expandLoaded && expandLazyLoadeds.indexOf(row) === -1;

                if (isLoad) {
                  lazyRests.push(handleAsyncRowExpand(row));
                } else {
                  rowExpandeds.push(row);
                }
              }
            });
          } else {
            ctor_amd_xe_utils_default.a.remove(rowExpandeds, function (row) {
              return validRows.indexOf(row) > -1;
            });
          }

          if (reserve) {
            validRows.forEach(function (row) {
              return handleRowExpandReserve(row, expanded);
            });
          }
        }

        reactData.rowExpandeds = rowExpandeds;
        return Promise.all(lazyRests).then(function () {
          return tableMethods.recalculate();
        });
      },

      /**
       * 判断行是否为展开状态
       * @param {Row} row 行对象
       */
      isExpandByRow: function isExpandByRow(row) {
        return reactData.rowExpandeds.indexOf(row) > -1;
      },

      /**
       * 手动清空展开行状态，数据会恢复成未展开的状态
       */
      clearRowExpand: function clearRowExpand() {
        var rowExpandeds = reactData.rowExpandeds;
        var tableFullData = internalData.tableFullData;
        var expandOpts = computeExpandOpts.value;
        var reserve = expandOpts.reserve;
        var isExists = rowExpandeds.length;
        reactData.rowExpandeds = [];

        if (reserve) {
          tableFullData.forEach(function (row) {
            return handleRowExpandReserve(row, false);
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          if (isExists) {
            tableMethods.recalculate();
          }
        });
      },
      clearRowExpandReserve: function clearRowExpandReserve() {
        internalData.rowExpandedReserveRowMap = {};
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      getRowExpandRecords: function getRowExpandRecords() {
        return reactData.rowExpandeds.slice(0);
      },
      getTreeExpandRecords: function getTreeExpandRecords() {
        return reactData.treeExpandeds.slice(0);
      },

      /**
       * 判断树节点是否懒加载完成
       * @param {Row} row 行对象
       */
      isTreeExpandLoaded: function isTreeExpandLoaded(row) {
        var fullAllDataRowMap = internalData.fullAllDataRowMap;
        var rest = fullAllDataRowMap.get(row);
        return rest && rest.treeLoaded;
      },
      clearTreeExpandLoaded: function clearTreeExpandLoaded(row) {
        var treeExpandeds = reactData.treeExpandeds;
        var fullAllDataRowMap = internalData.fullAllDataRowMap;
        var treeOpts = computeTreeOpts.value;
        var lazy = treeOpts.lazy;
        var rest = fullAllDataRowMap.get(row);

        if (lazy && rest) {
          rest.treeLoaded = false;
          ctor_amd_xe_utils_default.a.remove(treeExpandeds, function (item) {
            return row === item;
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 重新加载树的子节点
       * @param {Row} row 行对象
       */
      reloadTreeChilds: function reloadTreeChilds(row) {
        var treeLazyLoadeds = reactData.treeLazyLoadeds;
        var treeOpts = computeTreeOpts.value;
        var lazy = treeOpts.lazy,
            hasChild = treeOpts.hasChild;

        if (lazy && row[hasChild] && treeLazyLoadeds.indexOf(row) === -1) {
          tableMethods.clearTreeExpandLoaded(row).then(function () {
            return handleAsyncTreeExpandChilds(row);
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 切换/展开树节点
       */
      toggleTreeExpand: function toggleTreeExpand(row) {
        return tableMethods.setTreeExpand(row, !tableMethods.isTreeExpandByRow(row));
      },

      /**
       * 设置所有树节点的展开与否
       * @param {Boolean} expanded 是否展开
       */
      setAllTreeExpand: function setAllTreeExpand(expanded) {
        var tableFullData = internalData.tableFullData;
        var treeOpts = computeTreeOpts.value;
        var lazy = treeOpts.lazy,
            children = treeOpts.children;
        var expandeds = [];
        ctor_amd_xe_utils_default.a.eachTree(tableFullData, function (row) {
          var rowChildren = row[children];

          if (lazy || rowChildren && rowChildren.length) {
            expandeds.push(row);
          }
        }, treeOpts);
        return tableMethods.setTreeExpand(expandeds, expanded);
      },

      /**
       * 设置展开树形节点，二个参数设置这一行展开与否
       * 支持单行
       * 支持多行
       * @param {Array/Row} rows 行数据
       * @param {Boolean} expanded 是否展开
       */
      setTreeExpand: function setTreeExpand(rows, expanded) {
        var treeExpandeds = reactData.treeExpandeds,
            treeLazyLoadeds = reactData.treeLazyLoadeds,
            treeNodeColumn = reactData.treeNodeColumn;
        var fullAllDataRowMap = internalData.fullAllDataRowMap,
            tableFullData = internalData.tableFullData;
        var treeOpts = computeTreeOpts.value;
        var reserve = treeOpts.reserve,
            lazy = treeOpts.lazy,
            hasChild = treeOpts.hasChild,
            children = treeOpts.children,
            accordion = treeOpts.accordion,
            toggleMethod = treeOpts.toggleMethod;
        var result = [];
        var columnIndex = tableMethods.getColumnIndex(treeNodeColumn);
        var $columnIndex = tableMethods.getVMColumnIndex(treeNodeColumn);

        if (rows) {
          if (!ctor_amd_xe_utils_default.a.isArray(rows)) {
            rows = [rows];
          }

          if (rows.length) {
            var validRows = toggleMethod ? rows.filter(function (row) {
              return toggleMethod({
                $table: $xetable,
                expanded: expanded,
                column: treeNodeColumn,
                columnIndex: columnIndex,
                $columnIndex: $columnIndex,
                row: row
              });
            }) : rows;

            if (accordion) {
              validRows = validRows.length ? [validRows[validRows.length - 1]] : []; // 同一级只能展开一个

              var matchObj = ctor_amd_xe_utils_default.a.findTree(tableFullData, function (item) {
                return item === validRows[0];
              }, treeOpts);

              if (matchObj) {
                ctor_amd_xe_utils_default.a.remove(treeExpandeds, function (item) {
                  return matchObj.items.indexOf(item) > -1;
                });
              }
            }

            if (expanded) {
              validRows.forEach(function (row) {
                if (treeExpandeds.indexOf(row) === -1) {
                  var rest = fullAllDataRowMap.get(row);
                  var isLoad = lazy && row[hasChild] && !rest.treeLoaded && treeLazyLoadeds.indexOf(row) === -1; // 是否使用懒加载

                  if (isLoad) {
                    result.push(handleAsyncTreeExpandChilds(row));
                  } else {
                    if (row[children] && row[children].length) {
                      treeExpandeds.push(row);
                    }
                  }
                }
              });
            } else {
              ctor_amd_xe_utils_default.a.remove(treeExpandeds, function (row) {
                return validRows.indexOf(row) > -1;
              });
            }

            if (reserve) {
              validRows.forEach(function (row) {
                return handleTreeExpandReserve(row, expanded);
              });
            }

            return Promise.all(result).then(function () {
              return tableMethods.recalculate();
            });
          }
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 判断行是否为树形节点展开状态
       * @param {Row} row 行对象
       */
      isTreeExpandByRow: function isTreeExpandByRow(row) {
        var treeExpandeds = reactData.treeExpandeds;
        return treeExpandeds.indexOf(row) > -1;
      },

      /**
       * 手动清空树形节点的展开状态，数据会恢复成未展开的状态
       */
      clearTreeExpand: function clearTreeExpand() {
        var treeExpandeds = reactData.treeExpandeds;
        var tableFullData = internalData.tableFullData;
        var treeOpts = computeTreeOpts.value;
        var reserve = treeOpts.reserve;
        var isExists = treeExpandeds.length;
        reactData.treeExpandeds = [];

        if (reserve) {
          ctor_amd_xe_utils_default.a.eachTree(tableFullData, function (row) {
            return handleTreeExpandReserve(row, false);
          }, treeOpts);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          if (isExists) {
            tableMethods.recalculate();
          }
        });
      },
      clearTreeExpandReserve: function clearTreeExpandReserve() {
        internalData.treeExpandedReserveRowMap = {};
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 获取表格的滚动状态
       */
      getScroll: function getScroll() {
        var scrollXLoad = reactData.scrollXLoad,
            scrollYLoad = reactData.scrollYLoad;
        var tableBody = refTableBody.value;
        var bodyElem = tableBody.$el;
        return {
          virtualX: scrollXLoad,
          virtualY: scrollYLoad,
          scrollTop: bodyElem.scrollTop,
          scrollLeft: bodyElem.scrollLeft
        };
      },

      /**
       * 如果有滚动条，则滚动到对应的位置
       * @param {Number} scrollLeft 左距离
       * @param {Number} scrollTop 上距离
       */
      scrollTo: function scrollTo(scrollLeft, scrollTop) {
        var tableBody = refTableBody.value;
        var tableFooter = refTableFooter.value;
        var rightBody = refTableRightBody.value;
        var tableBodyElem = tableBody ? tableBody.$el : null;
        var rightBodyElem = rightBody ? rightBody.$el : null;
        var bodyTargetElem = rightBodyElem || tableBodyElem;
        var tableFooterElem = tableFooter ? tableFooter.$el : null;
        var footerTargetElem = tableFooterElem || tableBodyElem;

        if (footerTargetElem && ctor_amd_xe_utils_default.a.isNumber(scrollLeft)) {
          footerTargetElem.scrollLeft = scrollLeft;
        }

        if (bodyTargetElem && ctor_amd_xe_utils_default.a.isNumber(scrollTop)) {
          bodyTargetElem.scrollTop = scrollTop;
        }

        if (reactData.scrollXLoad || reactData.scrollYLoad) {
          return new Promise(function (resolve) {
            return setTimeout(function () {
              return resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])());
            }, 50);
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 如果有滚动条，则滚动到对应的行
       * @param {Row} row 行对象
       * @param {ColumnInfo} column 列配置
       */
      scrollToRow: function scrollToRow(row, column) {
        var rest = [];

        if (row) {
          if (props.treeConfig) {
            rest.push(tablePrivateMethods.scrollToTreeRow(row));
          } else {
            rest.push(rowToVisible($xetable, row));
          }
        }

        if (column) {
          rest.push(tableMethods.scrollToColumn(column));
        }

        return Promise.all(rest);
      },

      /**
       * 如果有滚动条，则滚动到对应的列
       * @param {ColumnInfo} column 列配置
       */
      scrollToColumn: function scrollToColumn(column) {
        var fullColumnMap = internalData.fullColumnMap;

        if (column && fullColumnMap.has(column)) {
          return colToVisible($xetable, column);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 手动清除滚动相关信息，还原到初始状态
       */
      clearScroll: function clearScroll() {
        var tableBody = refTableBody.value;
        var tableFooter = refTableFooter.value;
        var rightBody = refTableRightBody.value;
        var tableBodyElem = tableBody ? tableBody.$el : null;
        var rightBodyElem = rightBody ? rightBody.$el : null;
        var tableFooterElem = tableFooter ? tableFooter.$el : null;

        if (rightBodyElem) {
          rightBodyElem.scrollTop = 0;
        }

        if (tableFooterElem) {
          tableFooterElem.scrollLeft = 0;
        }

        if (tableBodyElem) {
          tableBodyElem.scrollTop = 0;
          tableBodyElem.scrollLeft = 0;
        }

        return new Promise(function (resolve) {
          requestAnimationFrame(function () {
            resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])());
          });
        });
      },

      /**
       * 更新表尾合计
       */
      updateFooter: function updateFooter() {
        var showFooter = props.showFooter,
            footerMethod = props.footerMethod;
        var visibleColumn = internalData.visibleColumn,
            afterFullData = internalData.afterFullData;

        if (showFooter && footerMethod) {
          reactData.footerData = visibleColumn.length ? footerMethod({
            columns: visibleColumn,
            data: afterFullData,
            $table: $xetable,
            $grid: $xegrid
          }) : [];
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 更新列状态
       * 如果组件值 v-model 发生 change 时，调用改函数用于更新某一列编辑状态
       * 如果单元格配置了校验规则，则会进行校验
       */
      updateStatus: function updateStatus(scope, cellValue) {
        var customVal = !ctor_amd_xe_utils_default.a.isUndefined(cellValue);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          var editRules = props.editRules;
          var validStore = reactData.validStore;
          var tableBody = refTableBody.value;

          if (scope && tableBody && editRules) {
            var row = scope.row,
                column = scope.column;
            var type = 'change';

            if ($xetable.hasCellRules) {
              if ($xetable.hasCellRules(type, row, column)) {
                var cell = tablePrivateMethods.getCell(row, column);

                if (cell) {
                  return $xetable.validCellRules(type, row, column, cellValue).then(function () {
                    if (customVal && validStore.visible) {
                      table_setCellValue(row, column, cellValue);
                    }

                    $xetable.clearValidate();
                  }).catch(function (_ref4) {
                    var rule = _ref4.rule;

                    if (customVal) {
                      table_setCellValue(row, column, cellValue);
                    }

                    $xetable.showValidTooltip({
                      rule: rule,
                      row: row,
                      column: column,
                      cell: cell
                    });
                  });
                }
              }
            }
          }
        });
      },

      /**
       * 设置合并单元格
       * @param {TableMergeConfig[]} merges { row: Row|number, column: ColumnInfo|number, rowspan: number, colspan: number }
       */
      setMergeCells: function setMergeCells(merges) {
        if (props.spanMethod) {
          UtilTools.error('vxe.error.errConflicts', ['merge-cells', 'span-method']);
        }

        setMerges(merges, reactData.mergeList, internalData.afterFullData);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          return tablePrivateMethods.updateCellAreas();
        });
      },

      /**
       * 移除单元格合并
       * @param {TableMergeConfig[]} merges 多个或数组 [{row:Row|number, col:ColumnInfo|number}]
       */
      removeMergeCells: function removeMergeCells(merges) {
        if (props.spanMethod) {
          UtilTools.error('vxe.error.errConflicts', ['merge-cells', 'span-method']);
        }

        var rest = removeMerges(merges, reactData.mergeList, internalData.afterFullData);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          tablePrivateMethods.updateCellAreas();
          return rest;
        });
      },

      /**
       * 获取所有被合并的单元格
       */
      getMergeCells: function getMergeCells() {
        return reactData.mergeList.slice(0);
      },

      /**
       * 清除所有单元格合并
       */
      clearMergeCells: function clearMergeCells() {
        reactData.mergeList = [];
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      setMergeFooterItems: function setMergeFooterItems(merges) {
        if (props.footerSpanMethod) {
          UtilTools.error('vxe.error.errConflicts', ['merge-footer-items', 'footer-span-method']);
        }

        setMerges(merges, reactData.mergeFooterList);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          return tablePrivateMethods.updateCellAreas();
        });
      },
      removeMergeFooterItems: function removeMergeFooterItems(merges) {
        if (props.footerSpanMethod) {
          UtilTools.error('vxe.error.errConflicts', ['merge-footer-items', 'footer-span-method']);
        }

        var rest = removeMerges(merges, reactData.mergeFooterList);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          tablePrivateMethods.updateCellAreas();
          return rest;
        });
      },

      /**
       * 获取所有被合并的表尾
       */
      getMergeFooterItems: function getMergeFooterItems() {
        return reactData.mergeFooterList.slice(0);
      },

      /**
       * 清除所有表尾合并
       */
      clearMergeFooterItems: function clearMergeFooterItems() {
        reactData.mergeFooterList = [];
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      focus: function focus() {
        internalData.isActivated = true;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      blur: function blur() {
        internalData.isActivated = false;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 连接工具栏
       * @param $toolbar
       */
      connect: function connect($toolbar) {
        if ($toolbar && $toolbar.syncUpdate) {
          $xetoolbar = $toolbar;
          $xetoolbar.syncUpdate({
            collectColumn: internalData.collectColumn,
            $table: $xetable
          });
        } else {
          UtilTools.error('vxe.error.barUnableLink');
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    /**
     * 全局按下事件处理
     */

    var handleGlobalMousedownEvent = function handleGlobalMousedownEvent(evnt) {
      var editStore = reactData.editStore,
          ctxMenuStore = reactData.ctxMenuStore,
          filterStore = reactData.filterStore;
      var mouseConfig = props.mouseConfig;
      var el = refElem.value;
      var editOpts = computeEditOpts.value;
      var actived = editStore.actived;
      var $validTooltip = refValidTooltip.value;
      var tableFilter = refTableFilter.value;
      var tableMenu = refTableMenu.value;

      if (tableFilter) {
        if (getEventTargetNode(evnt, el, 'vxe-cell--filter').flag) {// 如果点击了筛选按钮
        } else if (getEventTargetNode(evnt, tableFilter.$el).flag) {// 如果点击筛选容器
        } else {
          if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-clear').flag) {
            tablePrivateMethods.preventEvent(evnt, 'event.clearFilter', filterStore.args, tableMethods.closeFilter);
          }
        }
      } // 如果已激活了编辑状态


      if (actived.row) {
        if (!(editOpts.autoClear === false)) {
          // 如果是激活状态，点击了单元格之外
          var cell = actived.args.cell;

          if (!cell || !getEventTargetNode(evnt, cell).flag) {
            if ($validTooltip && getEventTargetNode(evnt, $validTooltip.$el).flag) {// 如果是激活状态，且点击了校验提示框
            } else if (!internalData._lastCallTime || internalData._lastCallTime + 50 < Date.now()) {
              // 如果是激活状态，点击了单元格之外
              if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-clear').flag) {
                // 如果手动调用了激活单元格，避免触发源被移除后导致重复关闭
                tablePrivateMethods.preventEvent(evnt, 'event.clearActived', actived.args, function () {
                  var isClear;

                  if (editOpts.mode === 'row') {
                    var rowTargetNode = getEventTargetNode(evnt, el, 'vxe-body--row');
                    var rowNodeRest = rowTargetNode.flag ? tableMethods.getRowNode(rowTargetNode.targetElem) : null; // row 方式，如果点击了不同行

                    isClear = rowNodeRest ? rowNodeRest.item !== actived.args.row : false;
                  } else {
                    // cell 方式，如果是非编辑列
                    isClear = !getEventTargetNode(evnt, el, 'col--edit').flag;
                  } // 如果点击表头行，则清除激活状态


                  if (!isClear) {
                    isClear = getEventTargetNode(evnt, el, 'vxe-header--row').flag;
                  } // 如果点击表尾行，则清除激活状态


                  if (!isClear) {
                    isClear = getEventTargetNode(evnt, el, 'vxe-footer--row').flag;
                  } // 如果固定了高度且点击了行之外的空白处，则清除激活状态


                  if (!isClear && props.height && !reactData.overflowY) {
                    var bodyWrapperElem = evnt.target;

                    if (table_hasClass(bodyWrapperElem, 'vxe-table--body-wrapper')) {
                      isClear = evnt.offsetY < bodyWrapperElem.clientHeight;
                    }
                  }

                  if (isClear || // 如果点击了当前表格之外
                  !getEventTargetNode(evnt, el).flag) {
                    requestAnimationFrame(function () {
                      return $xetable.clearActived(evnt);
                    });
                  }
                });
              }
            }
          }
        }
      } else if (mouseConfig) {
        if (!getEventTargetNode(evnt, el).flag && (!tableMenu || !getEventTargetNode(evnt, tableMenu.refMaps.refElem.value).flag)) {
          $xetable.clearSelected();

          if ($xetable.clearCellAreas) {
            if (!getEventTargetNode(evnt, document.body, 'vxe-table--ignore-areas-clear').flag) {
              tablePrivateMethods.preventEvent(evnt, 'event.clearAreas', {}, function () {
                $xetable.clearCellAreas();
                $xetable.clearCopyCellArea();
              });
            }
          }
        }
      } // 如果配置了快捷菜单且，点击了其他地方则关闭


      if ($xetable.closeMenu) {
        if (ctxMenuStore.visible && tableMenu && !getEventTargetNode(evnt, tableMenu.refMaps.refElem.value).flag) {
          $xetable.closeMenu();
        }
      } // 最后激活的表格


      internalData.isActivated = getEventTargetNode(evnt, $xegrid ? $xegrid.refMaps.refElem.value : el).flag;
    };
    /**
     * 窗口失焦事件处理
     */


    var handleGlobalBlurEvent = function handleGlobalBlurEvent() {
      tableMethods.closeFilter();

      if ($xetable.closeMenu) {
        $xetable.closeMenu();
      }
    };
    /**
     * 全局滚动事件
     */


    var handleGlobalMousewheelEvent = function handleGlobalMousewheelEvent() {
      tableMethods.clostTooltip();

      if ($xetable.closeMenu) {
        $xetable.closeMenu();
      }
    };
    /**
     * 全局键盘事件
     */


    var handleGlobalKeydownEvent = function handleGlobalKeydownEvent(evnt) {
      // 该行为只对当前激活的表格有效
      if (internalData.isActivated) {
        tablePrivateMethods.preventEvent(evnt, 'event.keydown', null, function () {
          var mouseConfig = props.mouseConfig,
              keyboardConfig = props.keyboardConfig,
              treeConfig = props.treeConfig,
              editConfig = props.editConfig,
              highlightCurrentRow = props.highlightCurrentRow;
          var ctxMenuStore = reactData.ctxMenuStore,
              editStore = reactData.editStore,
              currentRow = reactData.currentRow;
          var isMenu = computeIsMenu.value;
          var bodyMenu = computeBodyMenu.value;
          var keyboardOpts = computeKeyboardOpts.value;
          var mouseOpts = computeMouseOpts.value;
          var editOpts = computeEditOpts.value;
          var treeOpts = computeTreeOpts.value;
          var menuList = computeMenuList.value;
          var selected = editStore.selected,
              actived = editStore.actived;
          var keyCode = evnt.keyCode;
          var isBack = keyCode === 8;
          var isTab = keyCode === 9;
          var isEnter = keyCode === 13;
          var isEsc = keyCode === 27;
          var isSpacebar = keyCode === 32;
          var isLeftArrow = keyCode === 37;
          var isUpArrow = keyCode === 38;
          var isRightArrow = keyCode === 39;
          var isDwArrow = keyCode === 40;
          var isDel = keyCode === 46;
          var isF2 = keyCode === 113;
          var isContextMenu = keyCode === 93;
          var isCtrlKey = evnt.ctrlKey;
          var isShiftKey = evnt.shiftKey;
          var isAltKey = evnt.altKey;
          var operArrow = isLeftArrow || isUpArrow || isRightArrow || isDwArrow;
          var operCtxMenu = isMenu && ctxMenuStore.visible && (isEnter || isSpacebar || operArrow);
          var isEditStatus = editConfig && actived.column && actived.row;
          var params;

          if (operCtxMenu) {
            // 如果配置了右键菜单; 支持方向键操作、回车
            evnt.preventDefault();

            if (ctxMenuStore.showChild && hasChildrenList(ctxMenuStore.selected)) {
              $xetable.moveCtxMenu(evnt, keyCode, ctxMenuStore, 'selectChild', 37, false, ctxMenuStore.selected.children);
            } else {
              $xetable.moveCtxMenu(evnt, keyCode, ctxMenuStore, 'selected', 39, true, menuList);
            }
          } else if (keyboardConfig && mouseConfig && mouseOpts.area && $xetable.handleKeyboardEvent) {
            $xetable.handleKeyboardEvent(evnt);
          } else if (isSpacebar && (keyboardOpts.isArrow || keyboardOpts.isTab) && selected.row && selected.column && (selected.column.type === 'checkbox' || selected.column.type === 'radio')) {
            // 空格键支持选中复选框
            evnt.preventDefault();

            if (selected.column.type === 'checkbox') {
              handleToggleCheckRowEvent(evnt, selected.args);
            } else {
              tablePrivateMethods.triggerRadioRowEvent(evnt, selected.args);
            }
          } else if (isEsc) {
            // 如果按下了 Esc 键，关闭快捷菜单、筛选
            if ($xetable.closeMenu) {
              $xetable.closeMenu();
            }

            tableMethods.closeFilter(); // 如果是激活编辑状态，则取消编辑

            if (actived.row) {
              params = actived.args;
              $xetable.clearActived(evnt); // 如果配置了选中功能，则为选中状态

              if (mouseOpts.selected) {
                Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
                  return $xetable.handleSelected(params, evnt);
                });
              }
            }
          } else if (isF2) {
            if (!isEditStatus) {
              // 如果按下了 F2 键
              if (selected.row && selected.column) {
                evnt.preventDefault();
                $xetable.handleActived(selected.args, evnt);
              }
            }
          } else if (isContextMenu) {
            // 如果按下上下文键
            internalData._keyCtx = selected.row && selected.column && bodyMenu.length;
            clearTimeout(keyCtxTimeout);
            keyCtxTimeout = setTimeout(function () {
              internalData._keyCtx = false;
            }, 1000);
          } else if (isEnter && !isAltKey && keyboardOpts.isEnter && (selected.row || actived.row || treeConfig && highlightCurrentRow && currentRow)) {
            // 退出选中
            if (isCtrlKey) {
              // 如果是激活编辑状态，则取消编辑
              if (actived.row) {
                params = actived.args;
                $xetable.clearActived(evnt); // 如果配置了选中功能，则为选中状态

                if (mouseOpts.selected) {
                  Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
                    return $xetable.handleSelected(params, evnt);
                  });
                }
              }
            } else {
              // 如果是激活状态，退则出到上一行/下一行
              if (selected.row || actived.row) {
                var targetArgs = selected.row ? selected.args : actived.args;

                if (isShiftKey) {
                  if (keyboardOpts.enterToTab) {
                    $xetable.moveTabSelected(targetArgs, isShiftKey, evnt);
                  } else {
                    $xetable.moveSelected(targetArgs, isLeftArrow, true, isRightArrow, false, evnt);
                  }
                } else {
                  if (keyboardOpts.enterToTab) {
                    $xetable.moveTabSelected(targetArgs, isShiftKey, evnt);
                  } else {
                    $xetable.moveSelected(targetArgs, isLeftArrow, false, isRightArrow, true, evnt);
                  }
                }
              } else if (treeConfig && highlightCurrentRow && currentRow) {
                // 如果是树形表格当前行回车移动到子节点
                var childrens = currentRow[treeOpts.children];

                if (childrens && childrens.length) {
                  evnt.preventDefault();
                  var targetRow = childrens[0];
                  params = {
                    $table: $xetable,
                    row: targetRow
                  };
                  tableMethods.setTreeExpand(currentRow, true).then(function () {
                    return tableMethods.scrollToRow(targetRow);
                  }).then(function () {
                    return tablePrivateMethods.triggerCurrentRowEvent(evnt, params);
                  });
                }
              }
            }
          } else if (operArrow && keyboardOpts.isArrow) {
            if (!isEditStatus) {
              // 如果按下了方向键
              if (selected.row && selected.column) {
                $xetable.moveSelected(selected.args, isLeftArrow, isUpArrow, isRightArrow, isDwArrow, evnt);
              } else if ((isUpArrow || isDwArrow) && highlightCurrentRow) {
                // 当前行按键上下移动
                $xetable.moveCurrentRow(isUpArrow, isDwArrow, evnt);
              }
            }
          } else if (isTab && keyboardOpts.isTab) {
            // 如果按下了 Tab 键切换
            if (selected.row || selected.column) {
              $xetable.moveTabSelected(selected.args, isShiftKey, evnt);
            } else if (actived.row || actived.column) {
              $xetable.moveTabSelected(actived.args, isShiftKey, evnt);
            }
          } else if (isDel || (treeConfig && highlightCurrentRow && currentRow ? isBack && keyboardOpts.isArrow : isBack)) {
            if (!isEditStatus) {
              // 如果是删除键
              if (keyboardOpts.isDel && (selected.row || selected.column)) {
                table_setCellValue(selected.row, selected.column, null);

                if (isBack) {
                  $xetable.handleActived(selected.args, evnt);
                }
              } else if (isBack && keyboardOpts.isArrow && treeConfig && highlightCurrentRow && currentRow) {
                // 如果树形表格回退键关闭当前行返回父节点
                var _XEUtils$findTree = ctor_amd_xe_utils_default.a.findTree(internalData.afterFullData, function (item) {
                  return item === currentRow;
                }, treeOpts),
                    parentRow = _XEUtils$findTree.parent;

                if (parentRow) {
                  evnt.preventDefault();
                  params = {
                    $table: $xetable,
                    row: parentRow
                  };
                  tableMethods.setTreeExpand(parentRow, false).then(function () {
                    return tableMethods.scrollToRow(parentRow);
                  }).then(function () {
                    return tablePrivateMethods.triggerCurrentRowEvent(evnt, params);
                  });
                }
              }
            }
          } else if (keyboardOpts.isEdit && !isCtrlKey && (isSpacebar || keyCode >= 48 && keyCode <= 57 || keyCode >= 65 && keyCode <= 90 || keyCode >= 96 && keyCode <= 111 || keyCode >= 186 && keyCode <= 192 || keyCode >= 219 && keyCode <= 222)) {
            // 启用编辑后，空格键功能将失效
            // if (isSpacebar) {
            //   evnt.preventDefault()
            // }
            // 如果是按下非功能键之外允许直接编辑
            if (selected.column && selected.row && selected.column.editRender) {
              if (!keyboardOpts.editMethod || !(keyboardOpts.editMethod(selected.args) === false)) {
                if (!editOpts.activeMethod || editOpts.activeMethod(selected.args)) {
                  table_setCellValue(selected.row, selected.column, null);
                  $xetable.handleActived(selected.args, evnt);
                }
              }
            }
          }

          tableMethods.dispatchEvent('keydown', {}, evnt);
        });
      }
    };

    var handleGlobalPasteEvent = function handleGlobalPasteEvent(evnt) {
      var keyboardConfig = props.keyboardConfig,
          mouseConfig = props.mouseConfig;
      var editStore = reactData.editStore;
      var isActivated = internalData.isActivated;
      var mouseOpts = computeMouseOpts.value;
      var keyboardOpts = computeKeyboardOpts.value;
      var actived = editStore.actived;

      if (isActivated) {
        if (!(actived.row || actived.column)) {
          if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handlePasteCellAreaEvent) {
            $xetable.handlePasteCellAreaEvent(evnt);
          }
        }

        tableMethods.dispatchEvent('paste', {}, evnt);
      }
    };

    var handleGlobalCopyEvent = function handleGlobalCopyEvent(evnt) {
      var keyboardConfig = props.keyboardConfig,
          mouseConfig = props.mouseConfig;
      var editStore = reactData.editStore;
      var isActivated = internalData.isActivated;
      var mouseOpts = computeMouseOpts.value;
      var keyboardOpts = computeKeyboardOpts.value;
      var actived = editStore.actived;

      if (isActivated) {
        if (!(actived.row || actived.column)) {
          if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handleCopyCellAreaEvent) {
            $xetable.handleCopyCellAreaEvent(evnt);
          }
        }

        tableMethods.dispatchEvent('copy', {}, evnt);
      }
    };

    var handleGlobalCutEvent = function handleGlobalCutEvent(evnt) {
      var keyboardConfig = props.keyboardConfig,
          mouseConfig = props.mouseConfig;
      var editStore = reactData.editStore;
      var isActivated = internalData.isActivated;
      var mouseOpts = computeMouseOpts.value;
      var keyboardOpts = computeKeyboardOpts.value;
      var actived = editStore.actived;

      if (isActivated) {
        if (!(actived.row || actived.column)) {
          if (keyboardConfig && keyboardOpts.isClip && mouseConfig && mouseOpts.area && $xetable.handleCutCellAreaEvent) {
            $xetable.handleCutCellAreaEvent(evnt);
          }
        }

        tableMethods.dispatchEvent('cut', {}, evnt);
      }
    };

    var handleGlobalResizeEvent = function handleGlobalResizeEvent() {
      if ($xetable.closeMenu) {
        $xetable.closeMenu();
      }

      tableMethods.recalculate(true);
    };

    var handleTargetEnterEvent = function handleTargetEnterEvent() {
      clearTimeout(internalData.tooltipTimeout);
      internalData.tooltipActive = true;
      tableMethods.clostTooltip();
    };
    /**
     * 处理显示 tooltip
     * @param {Event} evnt 事件
     * @param {ColumnInfo} column 列配置
     * @param {Row} row 行对象
     */


    var handleTooltip = function handleTooltip(evnt, cell, overflowElem, tipElem, params) {
      params.cell = cell;
      var tooltipStore = internalData.tooltipStore;
      var tooltipOpts = computeTooltipOpts.value;
      var column = params.column,
          row = params.row;
      var enabled = tooltipOpts.enabled,
          contentMethod = tooltipOpts.contentMethod;
      var $tooltip = refTooltip.value;
      var customContent = contentMethod ? contentMethod(params) : null;
      var useCustom = contentMethod && !ctor_amd_xe_utils_default.a.eqNull(customContent);
      var content = useCustom ? customContent : (column.type === 'html' ? overflowElem.innerText : overflowElem.textContent).trim();
      var isCellOverflow = overflowElem.scrollWidth > overflowElem.clientWidth;

      if (content && (enabled || useCustom || isCellOverflow)) {
        Object.assign(tooltipStore, {
          row: row,
          column: column,
          visible: true
        });

        if ($tooltip) {
          $tooltip.open(isCellOverflow ? overflowElem : tipElem || overflowElem, UtilTools.formatText(content));
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };
    /**
     * 内部方法
     */


    tablePrivateMethods = {
      /**
       * 获取父容器元素
       */
      getParentElem: function getParentElem() {
        var el = refElem.value;

        if ($xegrid) {
          var gridRefMaps = $xegrid.refMaps;
          var gridEl = gridRefMaps.refElem.value;
          return gridEl.parentNode;
        }

        return el.parentNode;
      },

      /**
       * 获取父容器的高度
       */
      getParentHeight: function getParentHeight() {
        if ($xegrid) {
          return $xegrid.getParentHeight();
        }

        return tablePrivateMethods.getParentElem().clientHeight;
      },

      /**
       * 获取需要排除的高度
       * 但渲染表格高度时，需要排除工具栏或分页等相关组件的高度
       * 如果存在表尾合计滚动条，则需要排除滚动条高度
       */
      getExcludeHeight: function getExcludeHeight() {
        return $xegrid ? $xegrid.getExcludeHeight() : 0;
      },

      /**
       * 定义行数据中的列属性，如果不存在则定义
       * @param {Row} record 行数据
       */
      defineField: function defineField(record) {
        var treeConfig = props.treeConfig;
        var expandOpts = computeExpandOpts.value;
        var treeOpts = computeTreeOpts.value;
        var radioOpts = computeRadioOpts.value;
        var checkboxOpts = computeCheckboxOpts.value;
        var rowkey = getRowkey($xetable);
        internalData.visibleColumn.forEach(function (_ref5) {
          var property = _ref5.property,
              editRender = _ref5.editRender;

          if (property && !ctor_amd_xe_utils_default.a.has(record, property)) {
            ctor_amd_xe_utils_default.a.set(record, property, editRender && !ctor_amd_xe_utils_default.a.isUndefined(editRender.defaultValue) ? editRender.defaultValue : null);
          }
        });
        var ohterFields = [radioOpts.labelField, checkboxOpts.checkField, checkboxOpts.labelField, expandOpts.labelField];
        ohterFields.forEach(function (key) {
          if (key && !ctor_amd_xe_utils_default.a.get(record, key)) {
            ctor_amd_xe_utils_default.a.set(record, key, null);
          }
        });

        if (treeConfig && treeOpts.lazy && ctor_amd_xe_utils_default.a.isUndefined(record[treeOpts.children])) {
          record[treeOpts.children] = null;
        } // 必须有行数据的唯一主键，可以自行设置；也可以默认生成一个随机数


        if (!ctor_amd_xe_utils_default.a.get(record, rowkey)) {
          ctor_amd_xe_utils_default.a.set(record, rowkey, getRowUniqueId());
        }

        return record;
      },
      handleTableData: function handleTableData(force) {
        var scrollYLoad = reactData.scrollYLoad;
        var scrollYStore = internalData.scrollYStore;
        var fullData = force ? updateAfterFullData() : internalData.afterFullData;
        reactData.tableData = scrollYLoad ? fullData.slice(scrollYStore.startIndex, scrollYStore.endIndex) : fullData.slice(0);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 更新数据行的 Map
       * 牺牲数据组装的耗时，用来换取使用过程中的流畅
       */
      updateCache: function updateCache(isSource) {
        var treeConfig = props.treeConfig;
        var treeOpts = computeTreeOpts.value;
        var fullDataRowIdData = internalData.fullDataRowIdData,
            fullAllDataRowIdData = internalData.fullAllDataRowIdData,
            tableFullData = internalData.tableFullData,
            fullDataRowMap = internalData.fullDataRowMap,
            fullAllDataRowMap = internalData.fullAllDataRowMap;
        var rowkey = getRowkey($xetable);
        var isLazy = treeConfig && treeOpts.lazy;

        var handleCache = function handleCache(row, index, items, path, parent) {
          var rowid = getRowid($xetable, row);

          if (!rowid) {
            rowid = getRowUniqueId();
            ctor_amd_xe_utils_default.a.set(row, rowkey, rowid);
          }

          if (isLazy && row[treeOpts.hasChild] && ctor_amd_xe_utils_default.a.isUndefined(row[treeOpts.children])) {
            row[treeOpts.children] = null;
          }

          var rest = {
            row: row,
            rowid: rowid,
            index: treeConfig && parent ? -1 : index,
            items: items,
            parent: parent
          };

          if (isSource) {
            fullDataRowIdData[rowid] = rest;
            fullDataRowMap.set(row, rest);
          }

          fullAllDataRowIdData[rowid] = rest;
          fullAllDataRowMap.set(row, rest);
        };

        if (isSource) {
          fullDataRowIdData = internalData.fullDataRowIdData = {};
          fullDataRowMap.clear();
        }

        fullAllDataRowIdData = internalData.fullAllDataRowIdData = {};
        fullAllDataRowMap.clear();

        if (treeConfig) {
          ctor_amd_xe_utils_default.a.eachTree(tableFullData, handleCache, treeOpts);
        } else {
          tableFullData.forEach(handleCache);
        }
      },

      /**
       * 指定列宽的列进行拆分
       */
      analyColumnWidth: function analyColumnWidth() {
        var tableFullColumn = internalData.tableFullColumn;
        var columnOpts = computeColumnOpts.value;
        var defaultWidth = columnOpts.width,
            defaultMinWidth = columnOpts.minWidth;
        var resizeList = [];
        var pxList = [];
        var pxMinList = [];
        var scaleList = [];
        var scaleMinList = [];
        var autoList = [];
        tableFullColumn.forEach(function (column) {
          if (defaultWidth && !column.width) {
            column.width = defaultWidth;
          }

          if (defaultMinWidth && !column.minWidth) {
            column.minWidth = defaultMinWidth;
          }

          if (column.visible) {
            if (column.resizeWidth) {
              resizeList.push(column);
            } else if (DomTools.isPx(column.width)) {
              pxList.push(column);
            } else if (DomTools.isScale(column.width)) {
              scaleList.push(column);
            } else if (DomTools.isPx(column.minWidth)) {
              pxMinList.push(column);
            } else if (DomTools.isScale(column.minWidth)) {
              scaleMinList.push(column);
            } else {
              autoList.push(column);
            }
          }
        });
        Object.assign(reactData.columnStore, {
          resizeList: resizeList,
          pxList: pxList,
          pxMinList: pxMinList,
          scaleList: scaleList,
          scaleMinList: scaleMinList,
          autoList: autoList
        });
      },
      saveCustomResizable: function saveCustomResizable(isReset) {
        var id = props.id,
            customConfig = props.customConfig;
        var customOpts = computeCustomOpts.value;
        var collectColumn = internalData.collectColumn;
        var storage = customOpts.storage;
        var isResizable = storage === true || storage && storage.resizable;

        if (customConfig && isResizable) {
          var columnWidthStorageMap = getCustomStorageMap(resizableStorageKey);
          var columnWidthStorage;

          if (!id) {
            UtilTools.error('vxe.error.reqProp', ['id']);
            return;
          }

          if (!isReset) {
            columnWidthStorage = ctor_amd_xe_utils_default.a.isPlainObject(columnWidthStorageMap[id]) ? columnWidthStorageMap[id] : {};
            ctor_amd_xe_utils_default.a.eachTree(collectColumn, function (column) {
              if (column.resizeWidth) {
                var colKey = column.getKey();

                if (colKey) {
                  columnWidthStorage[colKey] = column.renderWidth;
                }
              }
            });
          }

          columnWidthStorageMap[id] = ctor_amd_xe_utils_default.a.isEmpty(columnWidthStorage) ? undefined : columnWidthStorage;
          localStorage.setItem(resizableStorageKey, ctor_amd_xe_utils_default.a.toJSONString(columnWidthStorageMap));
        }
      },
      saveCustomVisible: function saveCustomVisible() {
        var id = props.id,
            customConfig = props.customConfig;
        var collectColumn = internalData.collectColumn;
        var customOpts = computeCustomOpts.value;
        var checkMethod = customOpts.checkMethod,
            storage = customOpts.storage;
        var isVisible = storage === true || storage && storage.visible;

        if (customConfig && isVisible) {
          var columnVisibleStorageMap = getCustomStorageMap(visibleStorageKey);
          var colHides = [];
          var colShows = [];

          if (!id) {
            UtilTools.error('vxe.error.reqProp', ['id']);
            return;
          }

          ctor_amd_xe_utils_default.a.eachTree(collectColumn, function (column) {
            if (!checkMethod || checkMethod({
              column: column
            })) {
              if (!column.visible && column.defaultVisible) {
                var colKey = column.getKey();

                if (colKey) {
                  colHides.push(colKey);
                }
              } else if (column.visible && !column.defaultVisible) {
                var _colKey = column.getKey();

                if (_colKey) {
                  colShows.push(_colKey);
                }
              }
            }
          });
          columnVisibleStorageMap[id] = [colHides.join(',')].concat(colShows.length ? [colShows.join(',')] : []).join('|') || undefined;
          localStorage.setItem(visibleStorageKey, ctor_amd_xe_utils_default.a.toJSONString(columnVisibleStorageMap));
        }
      },
      preventEvent: function preventEvent(evnt, type, args, next, end) {
        var evntList = v_x_e_table.interceptor.get(type);
        var rest;

        if (!evntList.some(function (func) {
          return func(Object.assign({
            $grid: $xegrid,
            $table: $xetable,
            $event: evnt
          }, args)) === false;
        })) {
          if (next) {
            rest = next();
          }
        }

        if (end) {
          end();
        }

        return rest;
      },
      checkSelectionStatus: function checkSelectionStatus() {
        var treeConfig = props.treeConfig;
        var selection = reactData.selection,
            treeIndeterminates = reactData.treeIndeterminates;
        var afterFullData = internalData.afterFullData;
        var checkboxOpts = computeCheckboxOpts.value;
        var checkField = checkboxOpts.checkField,
            halfField = checkboxOpts.halfField,
            checkStrictly = checkboxOpts.checkStrictly,
            checkMethod = checkboxOpts.checkMethod;

        if (!checkStrictly) {
          var isAllSelected = false;
          var isIndeterminate = false;

          if (checkField) {
            isAllSelected = afterFullData.length > 0 && afterFullData.every(checkMethod ? function (row) {
              return !checkMethod({
                row: row
              }) || ctor_amd_xe_utils_default.a.get(row, checkField);
            } : function (row) {
              return ctor_amd_xe_utils_default.a.get(row, checkField);
            });

            if (treeConfig) {
              if (halfField) {
                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {
                  return ctor_amd_xe_utils_default.a.get(row, checkField) || ctor_amd_xe_utils_default.a.get(row, halfField) || treeIndeterminates.indexOf(row) > -1;
                });
              } else {
                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {
                  return ctor_amd_xe_utils_default.a.get(row, checkField) || treeIndeterminates.indexOf(row) > -1;
                });
              }
            } else {
              if (halfField) {
                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {
                  return ctor_amd_xe_utils_default.a.get(row, checkField) || ctor_amd_xe_utils_default.a.get(row, halfField);
                });
              } else {
                isIndeterminate = !isAllSelected && afterFullData.some(function (row) {
                  return ctor_amd_xe_utils_default.a.get(row, checkField);
                });
              }
            }
          } else {
            isAllSelected = afterFullData.length > 0 && afterFullData.every(checkMethod ? function (row) {
              return !checkMethod({
                row: row
              }) || selection.indexOf(row) > -1;
            } : function (row) {
              return selection.indexOf(row) > -1;
            });

            if (treeConfig) {
              isIndeterminate = !isAllSelected && afterFullData.some(function (row) {
                return treeIndeterminates.indexOf(row) > -1 || selection.indexOf(row) > -1;
              });
            } else {
              isIndeterminate = !isAllSelected && afterFullData.some(function (row) {
                return selection.indexOf(row) > -1;
              });
            }
          }

          reactData.isAllSelected = isAllSelected;
          reactData.isIndeterminate = isIndeterminate;
        }
      },

      /**
       * 多选，行选中事件
       * value 选中true 不选false 不确定-1
       */
      handleSelectRow: function handleSelectRow(_ref6, value) {
        var row = _ref6.row;
        var treeConfig = props.treeConfig;
        var selection = reactData.selection,
            treeIndeterminates = reactData.treeIndeterminates;
        var afterFullData = internalData.afterFullData;
        var treeOpts = computeTreeOpts.value;
        var checkboxOpts = computeCheckboxOpts.value;
        var property = checkboxOpts.checkField,
            checkStrictly = checkboxOpts.checkStrictly,
            checkMethod = checkboxOpts.checkMethod;

        if (property) {
          if (treeConfig && !checkStrictly) {
            if (value === -1) {
              if (treeIndeterminates.indexOf(row) === -1) {
                treeIndeterminates.push(row);
              }

              ctor_amd_xe_utils_default.a.set(row, property, false);
            } else {
              // 更新子节点状态
              ctor_amd_xe_utils_default.a.eachTree([row], function (item) {
                if (row === item || !checkMethod || checkMethod({
                  row: item
                })) {
                  ctor_amd_xe_utils_default.a.set(item, property, value);
                  ctor_amd_xe_utils_default.a.remove(treeIndeterminates, function (half) {
                    return half === item;
                  });
                  handleCheckboxReserveRow(row, value);
                }
              }, treeOpts);
            } // 如果存在父节点，更新父节点状态


            var matchObj = ctor_amd_xe_utils_default.a.findTree(afterFullData, function (item) {
              return item === row;
            }, treeOpts);

            if (matchObj && matchObj.parent) {
              var parentStatus;
              var vItems = checkMethod ? matchObj.items.filter(function (item) {
                return checkMethod({
                  row: item
                });
              }) : matchObj.items;
              var indeterminatesItem = ctor_amd_xe_utils_default.a.find(matchObj.items, function (item) {
                return treeIndeterminates.indexOf(item) > -1;
              });

              if (indeterminatesItem) {
                parentStatus = -1;
              } else {
                var selectItems = matchObj.items.filter(function (item) {
                  return ctor_amd_xe_utils_default.a.get(item, property);
                });
                parentStatus = selectItems.filter(function (item) {
                  return vItems.indexOf(item) > -1;
                }).length === vItems.length ? true : selectItems.length || value === -1 ? -1 : false;
              }

              return tablePrivateMethods.handleSelectRow({
                row: matchObj.parent
              }, parentStatus);
            }
          } else {
            if (!checkMethod || checkMethod({
              row: row
            })) {
              ctor_amd_xe_utils_default.a.set(row, property, value);
              handleCheckboxReserveRow(row, value);
            }
          }
        } else {
          if (treeConfig && !checkStrictly) {
            if (value === -1) {
              if (treeIndeterminates.indexOf(row) === -1) {
                treeIndeterminates.push(row);
              }

              ctor_amd_xe_utils_default.a.remove(selection, function (item) {
                return item === row;
              });
            } else {
              // 更新子节点状态
              ctor_amd_xe_utils_default.a.eachTree([row], function (item) {
                if (row === item || !checkMethod || checkMethod({
                  row: item
                })) {
                  if (value) {
                    selection.push(item);
                  } else {
                    ctor_amd_xe_utils_default.a.remove(selection, function (select) {
                      return select === item;
                    });
                  }

                  ctor_amd_xe_utils_default.a.remove(treeIndeterminates, function (half) {
                    return half === item;
                  });
                  handleCheckboxReserveRow(row, value);
                }
              }, treeOpts);
            } // 如果存在父节点，更新父节点状态


            var _matchObj = ctor_amd_xe_utils_default.a.findTree(afterFullData, function (item) {
              return item === row;
            }, treeOpts);

            if (_matchObj && _matchObj.parent) {
              var _parentStatus;

              var _vItems = checkMethod ? _matchObj.items.filter(function (item) {
                return checkMethod({
                  row: item
                });
              }) : _matchObj.items;

              var _indeterminatesItem = ctor_amd_xe_utils_default.a.find(_matchObj.items, function (item) {
                return treeIndeterminates.indexOf(item) > -1;
              });

              if (_indeterminatesItem) {
                _parentStatus = -1;
              } else {
                var _selectItems = _matchObj.items.filter(function (item) {
                  return selection.indexOf(item) > -1;
                });

                _parentStatus = _selectItems.filter(function (item) {
                  return _vItems.indexOf(item) > -1;
                }).length === _vItems.length ? true : _selectItems.length || value === -1 ? -1 : false;
              }

              return tablePrivateMethods.handleSelectRow({
                row: _matchObj.parent
              }, _parentStatus);
            }
          } else {
            if (!checkMethod || checkMethod({
              row: row
            })) {
              if (value) {
                if (selection.indexOf(row) === -1) {
                  selection.push(row);
                }
              } else {
                ctor_amd_xe_utils_default.a.remove(selection, function (item) {
                  return item === row;
                });
              }

              handleCheckboxReserveRow(row, value);
            }
          }
        }

        tablePrivateMethods.checkSelectionStatus();
      },
      triggerHeaderHelpEvent: function triggerHeaderHelpEvent(evnt, params) {
        var column = params.column;
        var titleHelp = column.titleHelp;

        if (titleHelp.message) {
          var tooltipStore = internalData.tooltipStore;
          var $tooltip = refTooltip.value;
          var content = UtilTools.getFuncText(titleHelp.message);
          handleTargetEnterEvent();
          tooltipStore.visible = true;

          if ($tooltip) {
            $tooltip.open(evnt.currentTarget, content);
          }
        }
      },

      /**
       * 触发表头 tooltip 事件
       */
      triggerHeaderTooltipEvent: function triggerHeaderTooltipEvent(evnt, params) {
        var tooltipStore = internalData.tooltipStore;
        var column = params.column;
        var titleElem = evnt.currentTarget;
        handleTargetEnterEvent();

        if (tooltipStore.column !== column || !tooltipStore.visible) {
          handleTooltip(evnt, titleElem, titleElem, null, params);
        }
      },

      /**
       * 触发单元格 tooltip 事件
       */
      triggerBodyTooltipEvent: function triggerBodyTooltipEvent(evnt, params) {
        var editConfig = props.editConfig;
        var editStore = reactData.editStore;
        var tooltipStore = internalData.tooltipStore;
        var editOpts = computeEditOpts.value;
        var actived = editStore.actived;
        var row = params.row,
            column = params.column;
        var cell = evnt.currentTarget;
        handleTargetEnterEvent();

        if (editConfig) {
          if (editOpts.mode === 'row' && actived.row === row || actived.row === row && actived.column === column) {
            return;
          }
        }

        if (tooltipStore.column !== column || tooltipStore.row !== row || !tooltipStore.visible) {
          var overflowElem;
          var tipElem;

          if (column.treeNode) {
            overflowElem = cell.querySelector('.vxe-tree-cell');

            if (column.type === 'html') {
              tipElem = cell.querySelector('.vxe-cell--html');
            }
          } else {
            tipElem = cell.querySelector(column.type === 'html' ? '.vxe-cell--html' : '.vxe-cell--label');
          }

          handleTooltip(evnt, cell, overflowElem || cell.children[0], tipElem, params);
        }
      },

      /**
       * 触发表尾 tooltip 事件
       */
      triggerFooterTooltipEvent: function triggerFooterTooltipEvent(evnt, params) {
        var column = params.column;
        var tooltipStore = internalData.tooltipStore;
        var cell = evnt.currentTarget;
        handleTargetEnterEvent();

        if (tooltipStore.column !== column || !tooltipStore.visible) {
          handleTooltip(evnt, cell, cell.querySelector('.vxe-cell--item') || cell.children[0], null, params);
        }
      },
      handleTargetLeaveEvent: function handleTargetLeaveEvent() {
        var tooltipOpts = computeTooltipOpts.value;
        internalData.tooltipActive = false;

        if (tooltipOpts.enterable) {
          internalData.tooltipTimeout = setTimeout(function () {
            var $tooltip = refTooltip.value;

            if (!$tooltip.reactData.isHover) {
              tableMethods.clostTooltip();
            }
          }, tooltipOpts.leaveDelay);
        } else {
          tableMethods.clostTooltip();
        }
      },
      triggerHeaderCellClickEvent: function triggerHeaderCellClickEvent(evnt, params) {
        var _lastResizeTime = internalData._lastResizeTime;
        var sortOpts = computeSortOpts.value;
        var column = params.column;
        var cell = evnt.currentTarget;

        var triggerResizable = _lastResizeTime && _lastResizeTime > Date.now() - 300;

        var triggerSort = getEventTargetNode(evnt, cell, 'vxe-cell--sort').flag;
        var triggerFilter = getEventTargetNode(evnt, cell, 'vxe-cell--filter').flag;

        if (sortOpts.trigger === 'cell' && !(triggerResizable || triggerSort || triggerFilter)) {
          tablePrivateMethods.triggerSortEvent(evnt, column, getNextSortOrder(column));
        }

        tableMethods.dispatchEvent('header-cell-click', Object.assign({
          triggerResizable: triggerResizable,
          triggerSort: triggerSort,
          triggerFilter: triggerFilter,
          cell: cell
        }, params), evnt);

        if (props.highlightCurrentColumn) {
          tableMethods.setCurrentColumn(column);
        }
      },
      triggerHeaderCellDBLClickEvent: function triggerHeaderCellDBLClickEvent(evnt, params) {
        tableMethods.dispatchEvent('header-cell-dblclick', Object.assign({
          cell: evnt.currentTarget
        }, params), evnt);
      },

      /**
       * 列点击事件
       * 如果是单击模式，则激活为编辑状态
       * 如果是双击模式，则单击后选中状态
       */
      triggerCellClickEvent: function triggerCellClickEvent(evnt, params) {
        var highlightCurrentRow = props.highlightCurrentRow,
            editConfig = props.editConfig;
        var editStore = reactData.editStore;
        var expandOpts = computeExpandOpts.value;
        var editOpts = computeEditOpts.value;
        var treeOpts = computeTreeOpts.value;
        var radioOpts = computeRadioOpts.value;
        var checkboxOpts = computeCheckboxOpts.value;
        var actived = editStore.actived;
        var _params = params,
            row = _params.row,
            column = _params.column;
        var type = column.type,
            treeNode = column.treeNode;
        var isRadioType = type === 'radio';
        var isCheckboxType = type === 'checkbox';
        var isExpandType = type === 'expand';
        var cell = evnt.currentTarget;
        var triggerRadio = isRadioType && getEventTargetNode(evnt, cell, 'vxe-cell--radio').flag;
        var triggerCheckbox = isCheckboxType && getEventTargetNode(evnt, cell, 'vxe-cell--checkbox').flag;
        var triggerTreeNode = treeNode && getEventTargetNode(evnt, cell, 'vxe-tree--btn-wrapper').flag;
        var triggerExpandNode = isExpandType && getEventTargetNode(evnt, cell, 'vxe-table--expanded').flag;
        params = Object.assign({
          cell: cell,
          triggerRadio: triggerRadio,
          triggerCheckbox: triggerCheckbox,
          triggerTreeNode: triggerTreeNode,
          triggerExpandNode: triggerExpandNode
        }, params); // 如果是展开行

        if (!triggerExpandNode && (expandOpts.trigger === 'row' || isExpandType && expandOpts.trigger === 'cell')) {
          tablePrivateMethods.triggerRowExpandEvent(evnt, params);
        } // 如果是树形表格


        if (treeOpts.trigger === 'row' || treeNode && treeOpts.trigger === 'cell') {
          tablePrivateMethods.triggerTreeExpandEvent(evnt, params);
        } // 如果点击了树节点


        if (!triggerTreeNode) {
          if (!triggerExpandNode) {
            // 如果是高亮行
            if (highlightCurrentRow) {
              if (!triggerCheckbox && !triggerRadio) {
                tablePrivateMethods.triggerCurrentRowEvent(evnt, params);
              }
            } // 如果是单选框


            if (!triggerRadio && (radioOpts.trigger === 'row' || isRadioType && radioOpts.trigger === 'cell')) {
              tablePrivateMethods.triggerRadioRowEvent(evnt, params);
            } // 如果是复选框


            if (!triggerCheckbox && (checkboxOpts.trigger === 'row' || isCheckboxType && checkboxOpts.trigger === 'cell')) {
              handleToggleCheckRowEvent(evnt, params);
            }
          } // 如果设置了单元格选中功能，则不会使用点击事件去处理（只能支持双击模式）


          if (editConfig) {
            if (editOpts.trigger === 'manual') {
              if (actived.args && actived.row === row && column !== actived.column) {
                handleChangeCell(evnt, params);
              }
            } else if (!actived.args || row !== actived.row || column !== actived.column) {
              if (editOpts.trigger === 'click') {
                handleChangeCell(evnt, params);
              } else if (editOpts.trigger === 'dblclick') {
                if (editOpts.mode === 'row' && actived.row === row) {
                  handleChangeCell(evnt, params);
                }
              }
            }
          }
        }

        tableMethods.dispatchEvent('cell-click', params, evnt);
      },

      /**
       * 列双击点击事件
       * 如果是双击模式，则激活为编辑状态
       */
      triggerCellDBLClickEvent: function triggerCellDBLClickEvent(evnt, params) {
        var editConfig = props.editConfig;
        var editStore = reactData.editStore;
        var editOpts = computeEditOpts.value;
        var actived = editStore.actived;
        var cell = evnt.currentTarget;
        params.cell = cell;

        if (editConfig && editOpts.trigger === 'dblclick') {
          if (!actived.args || evnt.currentTarget !== actived.args.cell) {
            if (editOpts.mode === 'row') {
              checkValidate('blur').catch(function (e) {
                return e;
              }).then(function () {
                $xetable.handleActived(params, evnt).then(function () {
                  return checkValidate('change');
                }).catch(function (e) {
                  return e;
                });
              });
            } else if (editOpts.mode === 'cell') {
              $xetable.handleActived(params, evnt).then(function () {
                return checkValidate('change');
              }).catch(function (e) {
                return e;
              });
            }
          }
        }

        tableMethods.dispatchEvent('cell-dblclick', params, evnt);
      },
      triggerCheckRowEvent: function triggerCheckRowEvent(evnt, params, value) {
        var checkboxOpts = computeCheckboxOpts.value;
        var checkMethod = checkboxOpts.checkMethod;

        if (!checkMethod || checkMethod({
          row: params.row
        })) {
          tablePrivateMethods.handleSelectRow(params, value);
          tableMethods.dispatchEvent('checkbox-change', Object.assign({
            records: tableMethods.getCheckboxRecords(),
            reserves: tableMethods.getCheckboxReserveRecords(),
            indeterminates: tableMethods.getCheckboxIndeterminateRecords(),
            checked: value
          }, params), evnt);
        }
      },

      /**
       * 多选，选中所有事件
       */
      triggerCheckAllEvent: function triggerCheckAllEvent(evnt, value) {
        tableMethods.setAllCheckboxRow(value);
        tableMethods.dispatchEvent('checkbox-all', {
          records: tableMethods.getCheckboxRecords(),
          reserves: tableMethods.getCheckboxReserveRecords(),
          indeterminates: tableMethods.getCheckboxIndeterminateRecords(),
          checked: value
        }, evnt);
      },

      /**
       * 单选，行选中事件
       */
      triggerRadioRowEvent: function triggerRadioRowEvent(evnt, params) {
        var isChange = reactData.selectRow !== params.row;
        tableMethods.setRadioRow(params.row);

        if (isChange) {
          tableMethods.dispatchEvent('radio-change', params, evnt);
        }
      },
      triggerCurrentRowEvent: function triggerCurrentRowEvent(evnt, params) {
        var isChange = reactData.currentRow !== params.row;
        tableMethods.setCurrentRow(params.row);

        if (isChange) {
          tableMethods.dispatchEvent('current-change', params, evnt);
        }
      },

      /**
       * 展开行事件
       */
      triggerRowExpandEvent: function triggerRowExpandEvent(evnt, params) {
        var expandLazyLoadeds = reactData.expandLazyLoadeds,
            column = reactData.expandColumn;
        var expandOpts = computeExpandOpts.value;
        var row = params.row;
        var lazy = expandOpts.lazy;

        if (!lazy || expandLazyLoadeds.indexOf(row) === -1) {
          var expanded = !tableMethods.isExpandByRow(row);
          var columnIndex = tableMethods.getColumnIndex(column);
          var $columnIndex = tableMethods.getVMColumnIndex(column);
          tableMethods.setRowExpand(row, expanded);
          tableMethods.dispatchEvent('toggle-row-expand', {
            expanded: expanded,
            column: column,
            columnIndex: columnIndex,
            $columnIndex: $columnIndex,
            row: row,
            rowIndex: tableMethods.getRowIndex(row),
            $rowIndex: tableMethods.getVMRowIndex(row)
          }, evnt);
        }
      },

      /**
       * 展开树节点事件
       */
      triggerTreeExpandEvent: function triggerTreeExpandEvent(evnt, params) {
        var treeLazyLoadeds = reactData.treeLazyLoadeds;
        var treeOpts = computeTreeOpts.value;
        var row = params.row,
            column = params.column;
        var lazy = treeOpts.lazy;

        if (!lazy || treeLazyLoadeds.indexOf(row) === -1) {
          var expanded = !tableMethods.isTreeExpandByRow(row);
          var columnIndex = tableMethods.getColumnIndex(column);
          var $columnIndex = tableMethods.getVMColumnIndex(column);
          tableMethods.setTreeExpand(row, expanded);
          tableMethods.dispatchEvent('toggle-tree-expand', {
            expanded: expanded,
            column: column,
            columnIndex: columnIndex,
            $columnIndex: $columnIndex,
            row: row
          }, evnt);
        }
      },

      /**
       * 点击排序事件
       */
      triggerSortEvent: function triggerSortEvent(evnt, column, order) {
        var sortOpts = computeSortOpts.value;
        var property = column.property;

        if (column.sortable) {
          if (!order || column.order === order) {
            tableMethods.clearSort(sortOpts.multiple ? column : null);
          } else {
            tableMethods.sort({
              field: property,
              order: order
            });
          }

          var params = {
            column: column,
            property: property,
            order: column.order,
            sortBy: column.sortBy,
            sortList: tableMethods.getSortColumns()
          };
          tableMethods.dispatchEvent('sort-change', params, evnt);
        }
      },

      /**
       * 横向 X 可视渲染事件处理
       */
      triggerScrollXEvent: function triggerScrollXEvent() {
        loadScrollXData();
      },

      /**
       * 纵向 Y 可视渲染事件处理
       */
      triggerScrollYEvent: function triggerScrollYEvent(evnt) {
        var scrollYStore = internalData.scrollYStore;
        var adaptive = scrollYStore.adaptive,
            offsetSize = scrollYStore.offsetSize,
            visibleSize = scrollYStore.visibleSize; // webkit 浏览器使用最佳的渲染方式，且最高渲染量不能大于 40 条

        if (isWebkit && adaptive && offsetSize * 2 + visibleSize <= 40) {
          loadScrollYData(evnt);
        } else {
          debounceScrollY(evnt);
        }
      },

      /**
       * 对于树形结构中，可以直接滚动到指定深层节点中
       * 对于某些特定的场景可能会用到，比如定位到某一节点
       * @param {Row} row 行对象
       */
      scrollToTreeRow: function scrollToTreeRow(row) {
        var treeConfig = props.treeConfig;
        var tableFullData = internalData.tableFullData;

        if (treeConfig) {
          var treeOpts = computeTreeOpts.value;
          var matchObj = ctor_amd_xe_utils_default.a.findTree(tableFullData, function (item) {
            return item === row;
          }, treeOpts);

          if (matchObj) {
            var nodes = matchObj.nodes;
            nodes.forEach(function (row, index) {
              if (index < nodes.length - 1 && !tableMethods.isTreeExpandByRow(row)) {
                tableMethods.setTreeExpand(row, true);
              }
            });
          }
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      // 更新横向 X 可视渲染上下剩余空间大小
      updateScrollXSpace: function updateScrollXSpace() {
        var scrollXLoad = reactData.scrollXLoad,
            scrollbarWidth = reactData.scrollbarWidth;
        var visibleColumn = internalData.visibleColumn,
            scrollXStore = internalData.scrollXStore,
            elemStore = internalData.elemStore,
            tableWidth = internalData.tableWidth;
        var tableHeader = refTableHeader.value;
        var tableBody = refTableBody.value;
        var tableFooter = refTableFooter.value;
        var tableBodyElem = tableBody ? tableBody.$el : null;

        if (tableBodyElem) {
          var tableHeaderElem = tableHeader ? tableHeader.$el : null;
          var tableFooterElem = tableFooter ? tableFooter.$el : null;
          var headerElem = tableHeaderElem ? tableHeaderElem.querySelector('.vxe-table--header') : null;
          var bodyElem = tableBodyElem.querySelector('.vxe-table--body');
          var footerElem = tableFooterElem ? tableFooterElem.querySelector('.vxe-table--footer') : null;
          var leftSpaceWidth = visibleColumn.slice(0, scrollXStore.startIndex).reduce(function (previous, column) {
            return previous + column.renderWidth;
          }, 0);
          var marginLeft = '';

          if (scrollXLoad) {
            marginLeft = "".concat(leftSpaceWidth, "px");
          }

          if (headerElem) {
            headerElem.style.marginLeft = marginLeft;
          }

          bodyElem.style.marginLeft = marginLeft;

          if (footerElem) {
            footerElem.style.marginLeft = marginLeft;
          }

          var containerList = ['main'];
          containerList.forEach(function (name) {
            var layoutList = ['header', 'body', 'footer'];
            layoutList.forEach(function (layout) {
              var xSpaceElem = elemStore["".concat(name, "-").concat(layout, "-xSpace")];

              if (xSpaceElem) {
                xSpaceElem.style.width = scrollXLoad ? "".concat(tableWidth + (layout === 'header' ? scrollbarWidth : 0), "px") : '';
              }
            });
          });
          Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(updateStyle);
        }
      },
      // 更新纵向 Y 可视渲染上下剩余空间大小
      updateScrollYSpace: function updateScrollYSpace() {
        var scrollYLoad = reactData.scrollYLoad;
        var scrollYStore = internalData.scrollYStore,
            elemStore = internalData.elemStore,
            afterFullData = internalData.afterFullData;
        var startIndex = scrollYStore.startIndex,
            rowHeight = scrollYStore.rowHeight;
        var bodyHeight = afterFullData.length * rowHeight;
        var topSpaceHeight = Math.max(0, startIndex * rowHeight);
        var containerList = ['main', 'left', 'right'];
        var marginTop = '';
        var ySpaceHeight = '';

        if (scrollYLoad) {
          marginTop = "".concat(topSpaceHeight, "px");
          ySpaceHeight = "".concat(bodyHeight, "px");
        }

        containerList.forEach(function (name) {
          var layoutList = ['header', 'body', 'footer'];
          var tableElem = elemStore["".concat(name, "-body-table")];

          if (tableElem) {
            tableElem.style.marginTop = marginTop;
          }

          layoutList.forEach(function (layout) {
            var ySpaceElem = elemStore["".concat(name, "-").concat(layout, "-ySpace")];

            if (ySpaceElem) {
              ySpaceElem.style.height = ySpaceHeight;
            }
          });
        });
        Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(updateStyle);
      },
      updateScrollXData: function updateScrollXData() {
        handleTableColumn();
        tablePrivateMethods.updateScrollXSpace();
      },
      updateScrollYData: function updateScrollYData() {
        tablePrivateMethods.handleTableData();
        tablePrivateMethods.updateScrollYSpace();
      },

      /**
       * 处理固定列的显示状态
       */
      checkScrolling: function checkScrolling() {
        var leftContainerElem = refLeftContainer.value;
        var rightContainerElem = refRightContainer.value;
        var tableBody = refTableBody.value;
        var bodyElem = tableBody ? tableBody.$el : null;

        if (bodyElem) {
          if (leftContainerElem) {
            DomTools[bodyElem.scrollLeft > 0 ? 'addClass' : 'removeClass'](leftContainerElem, 'scrolling--middle');
          }

          if (rightContainerElem) {
            DomTools[bodyElem.clientWidth < bodyElem.scrollWidth - Math.ceil(bodyElem.scrollLeft) ? 'addClass' : 'removeClass'](rightContainerElem, 'scrolling--middle');
          }
        }
      },
      updateZindex: function updateZindex() {
        if (props.zIndex) {
          internalData.tZindex = props.zIndex;
        } else if (internalData.tZindex < UtilTools.getLastZIndex()) {
          internalData.tZindex = UtilTools.nextZIndex();
        }
      },
      updateCellAreas: function updateCellAreas() {
        tableMethods.recalculate().then(function () {
          return tableMethods.refreshScroll();
        }).then(function () {
          var mouseConfig = props.mouseConfig;
          var mouseOpts = computeMouseOpts.value;

          if (mouseConfig && mouseOpts.area && $xetable.handleUpdateCellAreas) {
            $xetable.handleUpdateCellAreas();
          }
        });
      },

      /**
       * 行 hover 事件
       */
      triggerHoverEvent: function triggerHoverEvent(evnt, _ref7) {
        var row = _ref7.row;
        tablePrivateMethods.setHoverRow(row);
      },
      setHoverRow: function setHoverRow(row) {
        var rowid = getRowid($xetable, row);
        var el = refElem.value;
        tablePrivateMethods.clearHoverRow();
        ctor_amd_xe_utils_default.a.arrayEach(el.querySelectorAll("[data-rowid=\"".concat(rowid, "\"]")), function (elem) {
          return addClass(elem, 'row--hover');
        });
        internalData.hoverRow = row;
      },
      clearHoverRow: function clearHoverRow() {
        var el = refElem.value;
        ctor_amd_xe_utils_default.a.arrayEach(el.querySelectorAll('.vxe-body--row.row--hover'), function (elem) {
          return table_removeClass(elem, 'row--hover');
        });
        internalData.hoverRow = null;
      },
      getCell: function getCell(row, column) {
        var rowid = getRowid($xetable, row);
        var tableBody = refTableBody.value;
        var leftBody = refTableLeftBody.value;
        var rightBody = refTableRightBody.value;
        var bodyElem;

        if (column.fixed) {
          if (column.fixed === 'left') {
            if (leftBody) {
              bodyElem = leftBody.$el;
            }
          } else {
            if (rightBody) {
              bodyElem = rightBody.$el;
            }
          }
        }

        if (!bodyElem) {
          bodyElem = tableBody.$el;
        }

        if (bodyElem) {
          return bodyElem.querySelector(".vxe-body--row[data-rowid=\"".concat(rowid, "\"] .").concat(column.id));
        }

        return null;
      }
    };
    Object.assign($xetable, tableMethods, tablePrivateMethods);
    /**
     * 渲染浮固定列
     * 分别渲染左边固定列和右边固定列
     * 如果宽度足够情况下，则不需要渲染固定列
     * @param {String} fixedType 固定列类型
     */

    var renderFixed = function renderFixed(fixedType) {
      var showHeader = props.showHeader,
          showFooter = props.showFooter;
      var tableData = reactData.tableData,
          tableColumn = reactData.tableColumn,
          tableGroupColumn = reactData.tableGroupColumn,
          columnStore = reactData.columnStore,
          footerData = reactData.footerData;
      var isFixedLeft = fixedType === 'left';
      var fixedColumn = isFixedLeft ? columnStore.leftList : columnStore.rightList;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: isFixedLeft ? refLeftContainer : refRightContainer,
        class: "vxe-table--fixed-".concat(fixedType, "-wrapper")
      }, [showHeader && TableHeaderComponent ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TableHeaderComponent, {
        ref: isFixedLeft ? refTableLeftHeader : refTableRightHeader,
        fixedType: fixedType,
        tableData: tableData,
        tableColumn: tableColumn,
        tableGroupColumn: tableGroupColumn,
        fixedColumn: fixedColumn
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_body, {
        ref: isFixedLeft ? refTableLeftBody : refTableRightBody,
        fixedType: fixedType,
        tableData: tableData,
        tableColumn: tableColumn,
        fixedColumn: fixedColumn
      }), showFooter && TableFooterComponent ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TableFooterComponent, {
        ref: isFixedLeft ? refTableLeftFooter : refTableRightFooter,
        footerData: footerData,
        tableColumn: tableColumn,
        fixedColumn: fixedColumn,
        fixedType: fixedType
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])()]);
    };

    var renderEmptyContenet = function renderEmptyContenet() {
      var emptyOpts = computeEmptyOpts.value;
      var params = {
        $table: $xetable
      };

      if (slots.empty) {
        return slots.empty(params);
      } else {
        var compConf = props.emptyRender ? v_x_e_table.renderer.get(emptyOpts.name) : null;

        if (compConf && compConf.renderEmpty) {
          return compConf.renderEmpty(emptyOpts, params);
        }
      }

      return props.emptyText || conf.i18n('vxe.table.emptyText');
    };

    function handleUupdateResize() {
      var el = refElem.value;

      if (el && el.clientWidth && el.clientHeight) {
        tableMethods.recalculate();
      }
    }

    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.data;
    }, function (value) {
      loadTableData(value || []).then(function () {
        var scrollXLoad = reactData.scrollXLoad,
            scrollYLoad = reactData.scrollYLoad,
            expandColumn = reactData.expandColumn;

        if (!internalData.inited) {
          internalData.inited = true;
          handleDefaults();
        }

        if ((scrollXLoad || scrollYLoad) && expandColumn) {
          UtilTools.warn('vxe.error.scrollErrProp', ['column.type=expand']);
        }
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return reactData.staticColumns;
    }, function (value) {
      handleColumn(value);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return reactData.tableColumn;
    }, function () {
      tablePrivateMethods.analyColumnWidth();
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.showHeader;
    }, function () {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        tableMethods.recalculate(true).then(function () {
          return tableMethods.refreshScroll();
        });
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.showFooter;
    }, function () {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        tableMethods.recalculate(true).then(function () {
          return tableMethods.refreshScroll();
        });
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.height;
    }, function () {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        return tableMethods.recalculate(true);
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.maxHeight;
    }, function () {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        return tableMethods.recalculate(true);
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.syncResize;
    }, function (value) {
      if (value) {
        handleUupdateResize();
        Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
          handleUupdateResize();
          setTimeout(function () {
            return handleUupdateResize();
          });
        });
      }
    });
    v_x_e_table.hooks.forEach(function (options) {
      var setupTable = options.setupTable;

      if (setupTable) {
        var hookRest = setupTable($xetable);

        if (hookRest && ctor_amd_xe_utils_default.a.isObject(hookRest)) {
          Object.assign($xetable, hookRest);
        }
      }
    });
    var resizeObserver;
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var data = props.data,
          treeConfig = props.treeConfig,
          showOverflow = props.showOverflow;
      var scrollXStore = internalData.scrollXStore,
          scrollYStore = internalData.scrollYStore;
      var sYOpts = computeSYOpts.value;
      var editOpts = computeEditOpts.value;
      var treeOpts = computeTreeOpts.value;
      var radioOpts = computeRadioOpts.value;
      var checkboxOpts = computeCheckboxOpts.value;
      var expandOpts = computeExpandOpts.value;

      if (false) { var importOpts, exportOpts, exportConfig, importConfig; }

      var customOpts = computeCustomOpts.value;
      var mouseOpts = computeMouseOpts.value;

      if (!props.id && props.customConfig && (customOpts.storage === true || customOpts.storage && customOpts.storage.resizable || customOpts.storage && customOpts.storage.visible)) {
        UtilTools.error('vxe.error.reqProp', ['id']);
      }

      if (props.treeConfig && checkboxOpts.range) {
        UtilTools.error('vxe.error.noTree', ['checkbox-config.range']);
      }

      if (mouseOpts.area && !$xetable.handleUpdateCellAreas) {
        return UtilTools.error('vxe.error.notProp', ['mouse-config.area']);
      }

      if (props.treeConfig && mouseOpts.area) {
        UtilTools.error('vxe.error.noTree', ['mouse-config.area']);
      } // 检查是否有安装需要的模块


      if (false) {}

      Object.assign(scrollYStore, {
        startIndex: 0,
        endIndex: 0,
        visibleSize: 0,
        adaptive: sYOpts.adaptive !== false
      });
      Object.assign(scrollXStore, {
        startIndex: 0,
        endIndex: 0,
        visibleSize: 0
      });
      loadTableData(data || []).then(function () {
        if (data && data.length) {
          internalData.inited = true;
          handleDefaults();
        }

        updateStyle();
      });

      if (props.autoResize) {
        var el = refElem.value;
        resizeObserver = createResizeEvent(function () {
          if (props.autoResize) {
            tableMethods.recalculate(true);
          }
        });
        resizeObserver.observe(el);
        resizeObserver.observe(tablePrivateMethods.getParentElem());
      }

      GlobalEvent.on($xetable, 'paste', handleGlobalPasteEvent);
      GlobalEvent.on($xetable, 'copy', handleGlobalCopyEvent);
      GlobalEvent.on($xetable, 'cut', handleGlobalCutEvent);
      GlobalEvent.on($xetable, 'mousedown', handleGlobalMousedownEvent);
      GlobalEvent.on($xetable, 'blur', handleGlobalBlurEvent);
      GlobalEvent.on($xetable, 'mousewheel', handleGlobalMousewheelEvent);
      GlobalEvent.on($xetable, 'keydown', handleGlobalKeydownEvent);
      GlobalEvent.on($xetable, 'resize', handleGlobalResizeEvent);

      if ($xetable.handleGlobalContextmenuEvent) {
        GlobalEvent.on($xetable, 'contextmenu', $xetable.handleGlobalContextmenuEvent);
      }
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onActivated"])(function () {
      tableMethods.recalculate().then(function () {
        return tableMethods.refreshScroll();
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onDeactivated"])(function () {
      internalData.isActivated = false;
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onBeforeUnmount"])(function () {
      if (resizeObserver) {
        resizeObserver.disconnect();
      }

      tableMethods.closeFilter();

      if ($xetable.closeMenu) {
        $xetable.closeMenu();
      }
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      GlobalEvent.off($xetable, 'paste');
      GlobalEvent.off($xetable, 'copy');
      GlobalEvent.off($xetable, 'cut');
      GlobalEvent.off($xetable, 'mousedown');
      GlobalEvent.off($xetable, 'blur');
      GlobalEvent.off($xetable, 'mousewheel');
      GlobalEvent.off($xetable, 'keydown');
      GlobalEvent.off($xetable, 'resize');
      GlobalEvent.off($xetable, 'contextmenu');
    });

    var renderVN = function renderVN() {
      var _ref8;

      var loading = props.loading,
          stripe = props.stripe,
          showHeader = props.showHeader,
          height = props.height,
          treeConfig = props.treeConfig,
          mouseConfig = props.mouseConfig,
          showFooter = props.showFooter,
          highlightCell = props.highlightCell,
          highlightHoverRow = props.highlightHoverRow,
          highlightHoverColumn = props.highlightHoverColumn,
          editConfig = props.editConfig;
      var isGroup = reactData.isGroup,
          overflowX = reactData.overflowX,
          overflowY = reactData.overflowY,
          scrollXLoad = reactData.scrollXLoad,
          scrollYLoad = reactData.scrollYLoad,
          scrollbarHeight = reactData.scrollbarHeight,
          tableData = reactData.tableData,
          tableColumn = reactData.tableColumn,
          tableGroupColumn = reactData.tableGroupColumn,
          footerData = reactData.footerData,
          initStore = reactData.initStore,
          columnStore = reactData.columnStore,
          filterStore = reactData.filterStore,
          ctxMenuStore = reactData.ctxMenuStore;
      var leftList = columnStore.leftList,
          rightList = columnStore.rightList;
      var tooltipOpts = computeTooltipOpts.value;
      var treeOpts = computeTreeOpts.value;
      var vSize = computeSize.value;
      var tableBorder = computeTableBorder.value;
      var mouseOpts = computeMouseOpts.value;
      var validOpts = computeValidOpts.value;
      var validTipOpts = computeValidTipOpts.value;
      var isMenu = computeIsMenu.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-table', "tid_".concat(xID), "border--".concat(tableBorder), (_ref8 = {}, _defineProperty(_ref8, "size--".concat(vSize), vSize), _defineProperty(_ref8, 'vxe-editable', !!editConfig), _defineProperty(_ref8, 'show--head', showHeader), _defineProperty(_ref8, 'show--foot', showFooter), _defineProperty(_ref8, 'is--group', isGroup), _defineProperty(_ref8, 'has--height', height), _defineProperty(_ref8, 'has--tree-line', treeConfig && treeOpts.line), _defineProperty(_ref8, 'fixed--left', leftList.length), _defineProperty(_ref8, 'fixed--right', rightList.length), _defineProperty(_ref8, 'c--highlight', highlightCell), _defineProperty(_ref8, 't--animat', !!props.animat), _defineProperty(_ref8, 'is--round', props.round), _defineProperty(_ref8, 't--stripe', !treeConfig && stripe), _defineProperty(_ref8, 't--selected', mouseConfig && mouseOpts.selected), _defineProperty(_ref8, 'is--area', mouseConfig && mouseOpts.area), _defineProperty(_ref8, 'row--highlight', highlightHoverRow), _defineProperty(_ref8, 'column--highlight', highlightHoverColumn), _defineProperty(_ref8, 'is--loading', loading), _defineProperty(_ref8, 'is--empty', !loading && !tableData.length), _defineProperty(_ref8, 'scroll--y', overflowY), _defineProperty(_ref8, 'scroll--x', overflowX), _defineProperty(_ref8, 'virtual--x', scrollXLoad), _defineProperty(_ref8, 'virtual--y', scrollYLoad), _ref8)]
      }, [
      /**
       * 隐藏列
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: 'hideColumn',
        class: 'vxe-table-slots'
      }, slots.default ? slots.default({}) : []), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--main-wrapper'
      }, [
      /**
       * 表头
       */
      showHeader ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TableHeaderComponent, {
        ref: refTableHeader,
        tableData: tableData,
        tableColumn: tableColumn,
        tableGroupColumn: tableGroupColumn
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(),
      /**
       * 表体
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_body, {
        ref: refTableBody,
        tableData: tableData,
        tableColumn: tableColumn
      }),
      /**
       * 表尾
       */
      showFooter ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TableFooterComponent, {
        ref: refTableFooter,
        footerData: footerData,
        tableColumn: tableColumn
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])()]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--fixed-wrapper'
      }, [
      /**
       * 左侧固定区域
       */
      leftList && leftList.length && overflowX ? renderFixed('left') : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(),
      /**
       * 右侧固定区域
       */
      rightList && rightList.length && overflowX ? renderFixed('right') : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])()]),
      /**
       * 空数据
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refEmptyPlaceholder,
        class: 'vxe-table--empty-placeholder'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--empty-content'
      }, renderEmptyContenet())]),
      /**
       * 边框线
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--border-line'
      }),
      /**
       * 列宽线
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refCellResizeBar,
        class: 'vxe-table--resizable-bar',
        style: overflowX ? {
          'padding-bottom': "".concat(scrollbarHeight, "px")
        } : null
      }),
      /**
       * 加载中
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: ['vxe-table--loading vxe-loading', {
          'is--visible': loading
        }]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-loading--spinner'
      })]),
      /**
       * 筛选
       */
      initStore.filter && TableFilterComponent ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TableFilterComponent, {
        ref: refTableFilter,
        filterStore: filterStore
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(),
      /**
       * 导入
       */
      initStore.import && props.importConfig ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-import-panel'), {
        defaultOptions: reactData.importParams,
        storeData: reactData.importStore
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(),
      /**
       * 导出/导出
       */
      initStore.export && (props.exportConfig || props.printConfig) ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-export-panel'), {
        defaultOptions: reactData.exportParams,
        storeData: reactData.exportStore
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(),
      /**
       * 快捷菜单
       */
      ctxMenuStore.visible && isMenu ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-table-context-menu'), {
        ref: refTableMenu
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(),
      /**
       * 校验提示
       */
      props.editRules && (validOpts.message === 'default' ? !height : validOpts.message === 'tooltip') && TooltipComponent ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TooltipComponent, _objectSpread2({
        ref: refValidTooltip,
        class: 'vxe-table--valid-error'
      }, validOpts.message === 'tooltip' || tableData.length === 1 ? validTipOpts : {})) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(),
      /**
       * 工具提示
       */
      TooltipComponent ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TooltipComponent, _objectSpread2({
        ref: refTooltip
      }, tooltipOpts)) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])()]);
    };

    $xetable.renderVN = renderVN;
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('xecolgroup', null);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('$xetable', $xetable);
    return $xetable;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/table/index.ts



var Table = {
  install: function install(app) {
    var globalProperties = app.config.globalProperties;

    if (!globalProperties.$vxe) {
      globalProperties.$vxe = {
        t: v_x_e_table.t
      };
    } else {
      globalProperties.$vxe.t = v_x_e_table.t;
    }

    app.component(table.name, table);
  }
};
/* harmony default export */ var packages_table = (Table);
// CONCATENATED MODULE: ./packages/column/src/column.ts




var columnProps = {
  // 列唯一主键
  colId: [String, Number],
  // 渲染类型 index,radio,checkbox,expand,html
  type: String,
  // 列字段名
  field: String,
  // 列标题
  title: String,
  // 列宽度
  width: [Number, String],
  // 列最小宽度，把剩余宽度按比例分配
  minWidth: [Number, String],
  // 是否允许拖动列宽调整大小
  resizable: {
    type: Boolean,
    default: null
  },
  // 将列固定在左侧或者右侧
  fixed: String,
  // 列对其方式
  align: String,
  // 表头对齐方式
  headerAlign: String,
  // 表尾列的对齐方式
  footerAlign: String,
  // 当内容过长时显示为省略号
  showOverflow: {
    type: [Boolean, String],
    default: null
  },
  // 当表头内容过长时显示为省略号
  showHeaderOverflow: {
    type: [Boolean, String],
    default: null
  },
  // 当表尾内容过长时显示为省略号
  showFooterOverflow: {
    type: [Boolean, String],
    default: null
  },
  // 给单元格附加 className
  className: [String, Function],
  // 给表头单元格附加 className
  headerClassName: [String, Function],
  // 给表尾单元格附加 className
  footerClassName: [String, Function],
  // 格式化显示内容
  formatter: [Function, Array, String],
  // 是否允许排序
  sortable: Boolean,
  // 自定义排序的属性
  sortBy: [String, Function],
  // 配置筛选条件数组
  filters: {
    type: Array,
    default: null
  },
  // 筛选是否允许多选
  filterMultiple: {
    type: Boolean,
    default: true
  },
  // 自定义筛选方法
  filterMethod: Function,
  // 筛选模板配置项
  filterRender: Object,
  // 指定为树节点
  treeNode: Boolean,
  // 是否可视
  visible: {
    type: Boolean,
    default: null
  },
  // 单元格数据导出方法
  exportMethod: Function,
  // 表尾单元格数据导出方法
  footerExportMethod: Function,
  // 标题帮助图标配置项
  titleHelp: Object,
  // 单元格值类型
  cellType: String,
  // 单元格渲染配置项
  cellRender: Object,
  // 单元格编辑渲染配置项
  editRender: Object,
  // 内容渲染配置项
  contentRender: Object,
  // 额外的参数
  params: Object
};
/* harmony default export */ var src_column = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTableColumn',
  props: columnProps,
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var colgroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('xecolgroup', null);
    var column = src_cell.createColumn($xetable, props);
    column.slots = slots;
    watchColumn(props, column);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      assemColumn($xetable, refElem.value, column, colgroup);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      destroyColumn($xetable, column);
    });

    var renderVN = function renderVN() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem
      });
    };

    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/column/src/group.ts




/* harmony default export */ var src_group = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTableColgroup',
  props: columnProps,
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var colgroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('xecolgroup', null);
    var column = src_cell.createColumn($xetable, props);
    var xecolumn = {
      column: column
    };
    column.children = [];
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('xecolgroup', xecolumn);
    watchColumn(props, column);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      assemColumn($xetable, refElem.value, column, colgroup);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      destroyColumn($xetable, column);
    });

    var renderVN = function renderVN() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem
      }, slots.default ? slots.default() : []);
    };

    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/column/index.ts



var Column = {
  install: function install(app) {
    app.component(src_column.name, src_column);
    app.component(src_group.name, src_group);
  }
};
/* harmony default export */ var packages_column = (Column);
// CONCATENATED MODULE: ./packages/header/src/util.ts





var util_getAllColumns = function getAllColumns(columns, parentColumn) {
  var result = [];
  columns.forEach(function (column) {
    column.parentId = parentColumn ? parentColumn.id : null;

    if (column.visible) {
      if (column.children && column.children.length && column.children.some(function (column) {
        return column.visible;
      })) {
        result.push(column);
        result.push.apply(result, _toConsumableArray(getAllColumns(column.children, column)));
      } else {
        result.push(column);
      }
    }
  });
  return result;
};

var convertToRows = function convertToRows(originColumns) {
  var maxLevel = 1;

  var traverse = function traverse(column, parent) {
    if (parent) {
      column.level = parent.level + 1;

      if (maxLevel < column.level) {
        maxLevel = column.level;
      }
    }

    if (column.children && column.children.length && column.children.some(function (column) {
      return column.visible;
    })) {
      var colSpan = 0;
      column.children.forEach(function (subColumn) {
        if (subColumn.visible) {
          traverse(subColumn, column);
          colSpan += subColumn.colSpan;
        }
      });
      column.colSpan = colSpan;
    } else {
      column.colSpan = 1;
    }
  };

  originColumns.forEach(function (column) {
    column.level = 1;
    traverse(column);
  });
  var rows = [];

  for (var i = 0; i < maxLevel; i++) {
    rows.push([]);
  }

  var allColumns = util_getAllColumns(originColumns);
  allColumns.forEach(function (column) {
    if (column.children && column.children.length && column.children.some(function (column) {
      return column.visible;
    })) {
      column.rowSpan = 1;
    } else {
      column.rowSpan = maxLevel - column.level + 1;
    }

    rows[column.level - 1].push(column);
  });
  return rows;
};
// CONCATENATED MODULE: ./packages/header/src/header.ts










var header_renderType = 'header';
/* harmony default export */ var header = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTableHeader',
  props: {
    tableData: Array,
    tableColumn: Array,
    tableGroupColumn: Array,
    fixedColumn: Array,
    fixedType: String
  },
  setup: function setup(props) {
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var xID = $xetable.xID,
        tableProps = $xetable.props,
        tableReactData = $xetable.reactData,
        tableInternalData = $xetable.internalData,
        tableRefMaps = $xetable.refMaps;
    var tableRefElem = tableRefMaps.refElem,
        refTableBody = tableRefMaps.refTableBody,
        refLeftContainer = tableRefMaps.refLeftContainer,
        refRightContainer = tableRefMaps.refRightContainer,
        refCellResizeBar = tableRefMaps.refCellResizeBar;
    var headerColumn = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])([]);
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refHeaderTable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refHeaderColgroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refHeaderTHead = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refHeaderXSpace = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refHeaderBorderRepair = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();

    var uploadColumn = function uploadColumn() {
      var isGroup = tableReactData.isGroup,
          scrollXLoad = tableReactData.scrollXLoad;
      headerColumn.value = isGroup ? convertToRows(props.tableGroupColumn) : [scrollXLoad && props.fixedType ? props.fixedColumn : props.tableColumn];
    };

    var resizeMousedown = function resizeMousedown(evnt, params) {
      var column = params.column;
      var fixedType = props.fixedType;
      var tableBody = refTableBody.value;
      var leftContainerElem = refLeftContainer.value;
      var rightContainerElem = refRightContainer.value;
      var resizeBarElem = refCellResizeBar.value;
      var dragClientX = evnt.clientX;
      var wrapperElem = refElem.value;
      var dragBtnElem = evnt.target;
      var cell = dragBtnElem.parentNode;
      var dragLeft = 0;
      var tableBodyElem = tableBody.$el;
      var pos = DomTools.getOffsetPos(dragBtnElem, wrapperElem);
      var dragBtnWidth = dragBtnElem.clientWidth;
      var dragBtnOffsetWidth = Math.floor(dragBtnWidth / 2);
      var minInterval = UtilTools.getColMinWidth($xetable, column) - dragBtnOffsetWidth; // 列之间的最小间距

      var dragMinLeft = pos.left - cell.clientWidth + dragBtnWidth + minInterval;
      var dragPosLeft = pos.left + dragBtnOffsetWidth;
      var domMousemove = document.onmousemove;
      var domMouseup = document.onmouseup;
      var isLeftFixed = fixedType === 'left';
      var isRightFixed = fixedType === 'right';
      var tableEl = tableRefElem.value; // 计算左右侧固定列偏移量

      var fixedOffsetWidth = 0;

      if (isLeftFixed || isRightFixed) {
        var siblingProp = isLeftFixed ? 'nextElementSibling' : 'previousElementSibling';
        var tempCellElem = cell[siblingProp];

        while (tempCellElem) {
          if (DomTools.hasClass(tempCellElem, 'fixed--hidden')) {
            break;
          } else if (!DomTools.hasClass(tempCellElem, 'col--group')) {
            fixedOffsetWidth += tempCellElem.offsetWidth;
          }

          tempCellElem = tempCellElem[siblingProp];
        }

        if (isRightFixed && rightContainerElem) {
          dragPosLeft = rightContainerElem.offsetLeft + fixedOffsetWidth;
        }
      } // 处理拖动事件


      var updateEvent = function updateEvent(evnt) {
        evnt.stopPropagation();
        evnt.preventDefault();
        var offsetX = evnt.clientX - dragClientX;
        var left = dragPosLeft + offsetX;
        var scrollLeft = fixedType ? 0 : tableBodyElem.scrollLeft;

        if (isLeftFixed) {
          // 左固定列（不允许超过右侧固定列、不允许超过右边距）
          left = Math.min(left, (rightContainerElem ? rightContainerElem.offsetLeft : tableBodyElem.clientWidth) - fixedOffsetWidth - minInterval);
        } else if (isRightFixed) {
          // 右侧固定列（不允许超过左侧固定列、不允许超过左边距）
          dragMinLeft = (leftContainerElem ? leftContainerElem.clientWidth : 0) + fixedOffsetWidth + minInterval;
          left = Math.min(left, dragPosLeft + cell.clientWidth - minInterval);
        } else {
          dragMinLeft = Math.max(tableBodyElem.scrollLeft, dragMinLeft); // left = Math.min(left, tableBodyElem.clientWidth + tableBodyElem.scrollLeft - 40)
        }

        dragLeft = Math.max(left, dragMinLeft);
        resizeBarElem.style.left = "".concat(dragLeft - scrollLeft, "px");
      };

      tableInternalData._isResize = true;
      DomTools.addClass(tableEl, 'drag--resize');
      resizeBarElem.style.display = 'block';
      document.onmousemove = updateEvent;

      document.onmouseup = function (evnt) {
        document.onmousemove = domMousemove;
        document.onmouseup = domMouseup;
        column.resizeWidth = column.renderWidth + (isRightFixed ? dragPosLeft - dragLeft : dragLeft - dragPosLeft);
        resizeBarElem.style.display = 'none';
        tableInternalData._isResize = false;
        tableInternalData._lastResizeTime = Date.now();
        $xetable.analyColumnWidth();
        $xetable.saveCustomResizable();
        $xetable.recalculate(true).then(function () {
          $xetable.updateCellAreas();
        });
        DomTools.removeClass(tableEl, 'drag--resize');
        $xetable.dispatchEvent('resizable-change', params, evnt);
      };

      updateEvent(evnt);

      if ($xetable.closeMenu) {
        $xetable.closeMenu();
      }
    };

    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.tableColumn;
    }, uploadColumn);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var fixedType = props.fixedType;
      var internalData = $xetable.internalData;
      var elemStore = internalData.elemStore;
      var prefix = "".concat(fixedType || 'main', "-header-");
      elemStore["".concat(prefix, "wrapper")] = refElem.value;
      elemStore["".concat(prefix, "table")] = refHeaderTable.value;
      elemStore["".concat(prefix, "colgroup")] = refHeaderColgroup.value;
      elemStore["".concat(prefix, "list")] = refHeaderTHead.value;
      elemStore["".concat(prefix, "xSpace")] = refHeaderXSpace.value;
      elemStore["".concat(prefix, "repair")] = refHeaderBorderRepair.value;
      uploadColumn();
    });

    var renderVN = function renderVN() {
      var fixedType = props.fixedType,
          fixedColumn = props.fixedColumn,
          tableColumn = props.tableColumn;
      var resizable = tableProps.resizable,
          border = tableProps.border,
          columnKey = tableProps.columnKey,
          headerRowClassName = tableProps.headerRowClassName,
          headerCellClassName = tableProps.headerCellClassName,
          headerRowStyle = tableProps.headerRowStyle,
          headerCellStyle = tableProps.headerCellStyle,
          allColumnHeaderOverflow = tableProps.showHeaderOverflow,
          allHeaderAlign = tableProps.headerAlign,
          allAlign = tableProps.align,
          mouseConfig = tableProps.mouseConfig;
      var currentColumn = tableReactData.currentColumn,
          scrollXLoad = tableReactData.scrollXLoad,
          overflowX = tableReactData.overflowX,
          scrollbarWidth = tableReactData.scrollbarWidth; // 横向滚动渲染

      if (scrollXLoad) {
        if (fixedType) {
          tableColumn = fixedColumn;
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-table--header-wrapper', fixedType ? "fixed-".concat(fixedType, "--wrapper") : 'body--wrapper'],
        'data-tid': xID
      }, [fixedType ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])() : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refHeaderXSpace,
        class: 'vxe-body--x-space'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
        ref: refHeaderTable,
        class: 'vxe-table--header',
        'data-tid': xID,
        cellspacing: 0,
        cellpadding: 0,
        border: 0
      }, [
      /**
       * 列宽
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('colgroup', {
        ref: refHeaderColgroup
      }, tableColumn.map(function (column, $columnIndex) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('col', {
          name: column.id,
          key: $columnIndex
        });
      }).concat(scrollbarWidth ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('col', {
        name: 'col_gutter'
      })] : [])),
      /**
       * 头部
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('thead', {
        ref: refHeaderTHead
      }, headerColumn.value.map(function (cols, $rowIndex) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', {
          class: ['vxe-header--row', headerRowClassName ? ctor_amd_xe_utils_default.a.isFunction(headerRowClassName) ? headerRowClassName({
            $table: $xetable,
            $rowIndex: $rowIndex,
            fixed: fixedType,
            type: header_renderType
          }) : headerRowClassName : ''],
          style: headerRowStyle ? ctor_amd_xe_utils_default.a.isFunction(headerRowStyle) ? headerRowStyle({
            $table: $xetable,
            $rowIndex: $rowIndex,
            fixed: fixedType,
            type: header_renderType
          }) : headerRowStyle : null
        }, cols.map(function (column, $columnIndex) {
          var _ref;

          var type = column.type,
              showHeaderOverflow = column.showHeaderOverflow,
              headerAlign = column.headerAlign,
              align = column.align,
              headerClassName = column.headerClassName;
          var isColGroup = column.children && column.children.length;
          var fixedHiddenColumn = fixedType ? column.fixed !== fixedType && !isColGroup : column.fixed && overflowX;
          var headOverflow = ctor_amd_xe_utils_default.a.isUndefined(showHeaderOverflow) || ctor_amd_xe_utils_default.a.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;
          var headAlign = headerAlign || align || allHeaderAlign || allAlign;
          var showEllipsis = headOverflow === 'ellipsis';
          var showTitle = headOverflow === 'title';
          var showTooltip = headOverflow === true || headOverflow === 'tooltip';
          var hasEllipsis = showTitle || showTooltip || showEllipsis;
          var hasFilter = column.filters && column.filters.some(function (item) {
            return item.checked;
          });
          var columnIndex = $xetable.getColumnIndex(column);

          var _columnIndex = $xetable.getVTColumnIndex(column);

          var params = {
            $table: $xetable,
            $rowIndex: $rowIndex,
            column: column,
            columnIndex: columnIndex,
            $columnIndex: $columnIndex,
            _columnIndex: _columnIndex,
            fixed: fixedType,
            type: header_renderType,
            isHidden: fixedHiddenColumn,
            hasFilter: hasFilter
          };
          var thOns = {
            onClick: function onClick(evnt) {
              return $xetable.triggerHeaderCellClickEvent(evnt, params);
            },
            onDblclick: function onDblclick(evnt) {
              return $xetable.triggerHeaderCellDBLClickEvent(evnt, params);
            }
          }; // 虚拟滚动不支持动态高度

          if (scrollXLoad && !hasEllipsis) {
            showEllipsis = hasEllipsis = true;
          } // 按下事件处理


          if (mouseConfig) {
            thOns.onMousedown = function (evnt) {
              return $xetable.triggerHeaderCellMousedownEvent(evnt, params);
            };
          }

          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('th', _objectSpread2(_objectSpread2({
            class: ['vxe-header--column', column.id, (_ref = {}, _defineProperty(_ref, "col--".concat(headAlign), headAlign), _defineProperty(_ref, "col--".concat(type), type), _defineProperty(_ref, 'col--last', $columnIndex === cols.length - 1), _defineProperty(_ref, 'col--fixed', column.fixed), _defineProperty(_ref, 'col--group', isColGroup), _defineProperty(_ref, 'col--ellipsis', hasEllipsis), _defineProperty(_ref, 'fixed--hidden', fixedHiddenColumn), _defineProperty(_ref, 'is--sortable', column.sortable), _defineProperty(_ref, 'is--filter', !!column.filters), _defineProperty(_ref, 'filter--active', hasFilter), _defineProperty(_ref, 'col--current', currentColumn === column), _ref), headerClassName ? ctor_amd_xe_utils_default.a.isFunction(headerClassName) ? headerClassName(params) : headerClassName : '', headerCellClassName ? ctor_amd_xe_utils_default.a.isFunction(headerCellClassName) ? headerCellClassName(params) : headerCellClassName : ''],
            'data-colid': column.id,
            colspan: column.colSpan > 1 ? column.colSpan : null,
            rowspan: column.rowSpan > 1 ? column.rowSpan : null,
            style: headerCellStyle ? ctor_amd_xe_utils_default.a.isFunction(headerCellStyle) ? headerCellStyle(params) : headerCellStyle : null
          }, thOns), {}, {
            key: columnKey || isColGroup ? column.id : $columnIndex
          }), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: ['vxe-cell', {
              'c--title': showTitle,
              'c--tooltip': showTooltip,
              'c--ellipsis': showEllipsis
            }]
          }, column.renderHeader(params)),
          /**
           * 列宽拖动
           */
          !fixedHiddenColumn && !isColGroup && (ctor_amd_xe_utils_default.a.isBoolean(column.resizable) ? column.resizable : resizable) ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: ['vxe-resizable', {
              'is--line': !border || border === 'none'
            }],
            onMousedown: function onMousedown(evnt) {
              return resizeMousedown(evnt, params);
            }
          }) : null]);
        }).concat(scrollbarWidth ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('th', {
          class: 'col--gutter'
        })] : []));
      }))]),
      /**
       * 其他
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refHeaderBorderRepair,
        class: 'vxe-table--header-border-line'
      })]);
    };

    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/header/index.ts


var Header = {
  install: function install(app) {
    app.component(header.name, header);
  }
};
/* harmony default export */ var packages_header = (Header);
// CONCATENATED MODULE: ./packages/footer/src/footer.ts








var footer_renderType = 'footer';

function mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex) {
  for (var mIndex = 0; mIndex < mergeFooterList.length; mIndex++) {
    var _mergeFooterList$mInd = mergeFooterList[mIndex],
        mergeRowIndex = _mergeFooterList$mInd.row,
        mergeColIndex = _mergeFooterList$mInd.col,
        mergeRowspan = _mergeFooterList$mInd.rowspan,
        mergeColspan = _mergeFooterList$mInd.colspan;

    if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {
      if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {
        return {
          rowspan: mergeRowspan,
          colspan: mergeColspan
        };
      }

      if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {
        return {
          rowspan: 0,
          colspan: 0
        };
      }
    }
  }
}

/* harmony default export */ var footer = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTableFooter',
  props: {
    footerData: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    tableColumn: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    fixedColumn: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    fixedType: String
  },
  setup: function setup(props) {
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var xID = $xetable.xID,
        tableProps = $xetable.props,
        tableReactData = $xetable.reactData,
        tableInternalData = $xetable.internalData,
        tableRefMaps = $xetable.refMaps,
        tableComputeMaps = $xetable.computeMaps;
    var refTableHeader = tableRefMaps.refTableHeader,
        refTableBody = tableRefMaps.refTableBody,
        refValidTooltip = tableRefMaps.refValidTooltip;
    var computeTooltipOpts = tableComputeMaps.computeTooltipOpts;
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refFooterTable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refFooterColgroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refFooterTFoot = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refFooterXSpace = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    /**
     * 滚动处理
     * 如果存在列固定左侧，同步更新滚动状态
     * 如果存在列固定右侧，同步更新滚动状态
     */

    var scrollEvent = function scrollEvent(evnt) {
      var fixedType = props.fixedType;
      var scrollXLoad = tableReactData.scrollXLoad;
      var lastScrollLeft = tableInternalData.lastScrollLeft;
      var validTip = refValidTooltip.value;
      var tableHeader = refTableHeader.value;
      var tableBody = refTableBody.value;
      var headerElem = tableHeader ? tableHeader.$el : null;
      var footerElem = refElem.value;
      var bodyElem = tableBody.$el;
      var scrollLeft = footerElem.scrollLeft;
      var isX = scrollLeft !== lastScrollLeft;
      tableInternalData.lastScrollLeft = scrollLeft;
      tableInternalData.lastScrollTime = Date.now();

      if (headerElem) {
        headerElem.scrollLeft = scrollLeft;
      }

      if (bodyElem) {
        bodyElem.scrollLeft = scrollLeft;
      }

      if (scrollXLoad && isX) {
        $xetable.triggerScrollXEvent(evnt);
      }

      if (isX && validTip && validTip.reactData.visible) {
        validTip.updatePlacement();
      }

      $xetable.dispatchEvent('scroll', {
        type: footer_renderType,
        fixed: fixedType,
        scrollTop: bodyElem.scrollTop,
        scrollLeft: scrollLeft,
        isX: isX,
        isY: false
      }, evnt);
    };

    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var fixedType = props.fixedType;
      var elemStore = tableInternalData.elemStore;
      var prefix = "".concat(fixedType || 'main', "-footer-");
      elemStore["".concat(prefix, "wrapper")] = refElem.value;
      elemStore["".concat(prefix, "table")] = refFooterTable.value;
      elemStore["".concat(prefix, "colgroup")] = refFooterColgroup.value;
      elemStore["".concat(prefix, "list")] = refFooterTFoot.value;
      elemStore["".concat(prefix, "xSpace")] = refFooterXSpace.value;
    });

    var renderVN = function renderVN() {
      var fixedType = props.fixedType,
          fixedColumn = props.fixedColumn,
          tableColumn = props.tableColumn,
          footerData = props.footerData;
      var footerRowClassName = tableProps.footerRowClassName,
          footerCellClassName = tableProps.footerCellClassName,
          footerRowStyle = tableProps.footerRowStyle,
          footerCellStyle = tableProps.footerCellStyle,
          allFooterAlign = tableProps.footerAlign,
          footerSpanMethod = tableProps.footerSpanMethod,
          allAlign = tableProps.align,
          columnKey = tableProps.columnKey,
          allColumnFooterOverflow = tableProps.showFooterOverflow;
      var scrollXLoad = tableReactData.scrollXLoad,
          overflowX = tableReactData.overflowX,
          scrollbarWidth = tableReactData.scrollbarWidth,
          currentColumn = tableReactData.currentColumn,
          mergeFooterList = tableReactData.mergeFooterList;
      var tooltipOpts = computeTooltipOpts.value; // 如果是使用优化模式

      if (!mergeFooterList.length || !footerSpanMethod) {
        if (fixedType && allColumnFooterOverflow) {
          tableColumn = fixedColumn;
        } else if (scrollXLoad) {
          if (fixedType) {
            tableColumn = fixedColumn;
          }
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-table--footer-wrapper', fixedType ? "fixed-".concat(fixedType, "--wrapper") : 'body--wrapper'],
        'data-tid': xID,
        onScroll: scrollEvent
      }, [fixedType ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])() : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refFooterXSpace,
        class: 'vxe-body--x-space'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
        ref: refFooterTable,
        class: 'vxe-table--footer',
        'data-tid': xID,
        cellspacing: 0,
        cellpadding: 0,
        border: 0
      }, [
      /**
       * 列宽
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('colgroup', {
        ref: refFooterColgroup
      }, tableColumn.map(function (column, $columnIndex) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('col', {
          name: column.id,
          key: $columnIndex
        });
      }).concat(scrollbarWidth ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('col', {
        name: 'col_gutter'
      })] : [])),
      /**
       * 底部
       */
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tfoot', {
        ref: refFooterTFoot
      }, footerData.map(function (list, _rowIndex) {
        var $rowIndex = _rowIndex;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', {
          class: ['vxe-footer--row', footerRowClassName ? ctor_amd_xe_utils_default.a.isFunction(footerRowClassName) ? footerRowClassName({
            $table: $xetable,
            _rowIndex: _rowIndex,
            $rowIndex: $rowIndex,
            fixed: fixedType,
            type: footer_renderType
          }) : footerRowClassName : ''],
          style: footerRowStyle ? ctor_amd_xe_utils_default.a.isFunction(footerRowStyle) ? footerRowStyle({
            $table: $xetable,
            _rowIndex: _rowIndex,
            $rowIndex: $rowIndex,
            fixed: fixedType,
            type: footer_renderType
          }) : footerRowStyle : null
        }, tableColumn.map(function (column, $columnIndex) {
          var _ref2;

          var type = column.type,
              showFooterOverflow = column.showFooterOverflow,
              footerAlign = column.footerAlign,
              align = column.align,
              footerClassName = column.footerClassName;
          var enabled = tooltipOpts.enabled;
          var isColGroup = column.children && column.children.length;
          var fixedHiddenColumn = fixedType ? column.fixed !== fixedType && !isColGroup : column.fixed && overflowX;
          var footOverflow = ctor_amd_xe_utils_default.a.isUndefined(showFooterOverflow) || ctor_amd_xe_utils_default.a.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow;
          var footAlign = footerAlign || align || allFooterAlign || allAlign;
          var showEllipsis = footOverflow === 'ellipsis';
          var showTitle = footOverflow === 'title';
          var showTooltip = footOverflow === true || footOverflow === 'tooltip';
          var hasEllipsis = showTitle || showTooltip || showEllipsis;
          var attrs = {
            'data-colid': column.id
          };
          var tfOns = {};
          var columnIndex = $xetable.getColumnIndex(column);

          var _columnIndex = $xetable.getVTColumnIndex(column);

          var itemIndex = _columnIndex;
          var params = {
            $table: $xetable,
            _rowIndex: _rowIndex,
            $rowIndex: $rowIndex,
            column: column,
            columnIndex: columnIndex,
            $columnIndex: $columnIndex,
            _columnIndex: _columnIndex,
            itemIndex: itemIndex,
            items: list,
            fixed: fixedType,
            type: footer_renderType,
            data: footerData
          }; // 虚拟滚动不支持动态高度

          if (scrollXLoad && !hasEllipsis) {
            showEllipsis = hasEllipsis = true;
          }

          if (showTitle || showTooltip || enabled) {
            tfOns.onMouseenter = function (evnt) {
              if (showTitle) {
                DomTools.updateCellTitle(evnt.currentTarget, column);
              } else if (showTooltip || enabled) {
                $xetable.triggerFooterTooltipEvent(evnt, params);
              }
            };
          }

          if (showTooltip || enabled) {
            tfOns.onMouseleave = function () {
              if (showTooltip || enabled) {
                $xetable.handleTargetLeaveEvent();
              }
            };
          }

          tfOns.onClick = function (evnt) {
            $xetable.dispatchEvent('footer-cell-click', Object.assign({
              cell: evnt.currentTarget
            }, params), evnt);
          };

          tfOns.onDblclick = function (evnt) {
            $xetable.dispatchEvent('footer-cell-dblclick', Object.assign({
              cell: evnt.currentTarget
            }, params), evnt);
          }; // 合并行或列


          if (mergeFooterList.length) {
            var spanRest = mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex);

            if (spanRest) {
              var rowspan = spanRest.rowspan,
                  colspan = spanRest.colspan;

              if (!rowspan || !colspan) {
                return null;
              }

              if (rowspan > 1) {
                attrs.rowspan = rowspan;
              }

              if (colspan > 1) {
                attrs.colspan = colspan;
              }
            }
          } else if (footerSpanMethod) {
            // 自定义合并方法
            var _ref = footerSpanMethod(params) || {},
                _ref$rowspan = _ref.rowspan,
                _rowspan = _ref$rowspan === void 0 ? 1 : _ref$rowspan,
                _ref$colspan = _ref.colspan,
                _colspan = _ref$colspan === void 0 ? 1 : _ref$colspan;

            if (!_rowspan || !_colspan) {
              return null;
            }

            if (_rowspan > 1) {
              attrs.rowspan = _rowspan;
            }

            if (_colspan > 1) {
              attrs.colspan = _colspan;
            }
          }

          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', _objectSpread2(_objectSpread2(_objectSpread2({
            class: ['vxe-footer--column', column.id, (_ref2 = {}, _defineProperty(_ref2, "col--".concat(footAlign), footAlign), _defineProperty(_ref2, "col--".concat(type), type), _defineProperty(_ref2, 'col--last', $columnIndex === tableColumn.length - 1), _defineProperty(_ref2, 'fixed--hidden', fixedHiddenColumn), _defineProperty(_ref2, 'col--ellipsis', hasEllipsis), _defineProperty(_ref2, 'col--current', currentColumn === column), _ref2), UtilTools.getClass(footerClassName, params), UtilTools.getClass(footerCellClassName, params)]
          }, attrs), {}, {
            style: footerCellStyle ? ctor_amd_xe_utils_default.a.isFunction(footerCellStyle) ? footerCellStyle(params) : footerCellStyle : null
          }, tfOns), {}, {
            key: columnKey ? column.id : $columnIndex
          }), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: ['vxe-cell', {
              'c--title': showTitle,
              'c--tooltip': showTooltip,
              'c--ellipsis': showEllipsis
            }]
          }, column.renderFooter(params))]);
        }).concat(scrollbarWidth ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', {
          class: 'col--gutter'
        })] : []));
      }))])]);
    };

    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/footer/index.ts


var Footer = {
  install: function install(app) {
    app.component(footer.name, footer);
  }
};
/* harmony default export */ var packages_footer = (Footer);
// CONCATENATED MODULE: ./packages/grid/src/grid.ts

























function getOffsetHeight(elem) {
  return elem ? elem.offsetHeight : 0;
}

function getPaddingTopBottomSize(elem) {
  var computedStyle = getComputedStyle(elem);
  var paddingTop = ctor_amd_xe_utils_default.a.toNumber(computedStyle.paddingTop);
  var paddingBottom = ctor_amd_xe_utils_default.a.toNumber(computedStyle.paddingBottom);
  return paddingTop + paddingBottom;
}

var tableComponentPropKeys = Object.keys(src_props);
var tableComponentMethodKeys = ['clearAll', 'syncData', 'updateData', 'loadData', 'reloadData', 'reloadRow', 'loadColumn', 'reloadColumn', 'getRowNode', 'getColumnNode', 'getRowIndex', 'getVTRowIndex', 'getVMRowIndex', 'getColumnIndex', 'getVTColumnIndex', 'getVMColumnIndex', 'createData', 'createRow', 'revertData', 'clearData', 'isInsertByRow', 'isUpdateByRow', 'getColumns', 'getColumnById', 'getColumnByField', 'getTableColumn', 'getData', 'getCheckboxRecords', 'getRowById', 'getRowid', 'getTableData', 'hideColumn', 'showColumn', 'resetColumn', 'refreshColumn', 'refreshScroll', 'recalculate', 'clostTooltip', 'isAllCheckboxChecked', 'isCheckboxIndeterminate', 'getCheckboxIndeterminateRecords', 'setCheckboxRow', 'isCheckedByCheckboxRow', 'toggleCheckboxRow', 'setAllCheckboxRow', 'getRadioReserveRecord', 'clearRadioReserve', 'getCheckboxReserveRecords', 'clearCheckboxReserve', 'toggleAllCheckboxRow', 'clearCheckboxRow', 'setCurrentRow', 'isCheckedByRadioRow', 'setRadioRow', 'clearCurrentRow', 'clearRadioRow', 'getCurrentRecord', 'getRadioRecord', 'getCurrentColumn', 'setCurrentColumn', 'clearCurrentColumn', 'sort', 'clearSort', 'isSort', 'getSortColumns', 'closeFilter', 'isFilter', 'isRowExpandLoaded', 'clearRowExpandLoaded', 'reloadExpandContent', 'toggleRowExpand', 'setAllRowExpand', 'setRowExpand', 'isExpandByRow', 'clearRowExpand', 'clearRowExpandReserve', 'getRowExpandRecords', 'getTreeExpandRecords', 'isTreeExpandLoaded', 'clearTreeExpandLoaded', 'reloadTreeChilds', 'toggleTreeExpand', 'setAllTreeExpand', 'setTreeExpand', 'isTreeExpandByRow', 'clearTreeExpand', 'clearTreeExpandReserve', 'getScroll', 'scrollTo', 'scrollToRow', 'scrollToColumn', 'clearScroll', 'updateFooter', 'updateStatus', 'setMergeCells', 'removeMergeCells', 'getMergeCells', 'clearMergeCells', 'setMergeFooterItems', 'removeMergeFooterItems', 'getMergeFooterItems', 'clearMergeFooterItems', 'focus', 'blur', 'connect'];
var gridComponentEmits = [].concat(_toConsumableArray(emits), ['page-change', 'form-submit', 'form-submit-invalid', 'form-reset', 'form-toggle-collapse', 'toolbar-button-click', 'zoom']);
/* harmony default export */ var grid = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeGrid',
  props: _objectSpread2(_objectSpread2({}, src_props), {}, {
    columns: Array,
    pagerConfig: Object,
    proxyConfig: Object,
    toolbarConfig: Object,
    formConfig: Object,
    zoomConfig: Object,
    size: {
      type: String,
      default: function _default() {
        return conf.grid.size || conf.size;
      }
    }
  }),
  emits: gridComponentEmits,
  setup: function setup(props, context) {
    var TableComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-table');
    var FormComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-form');
    var ToolbarComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-toolbar');
    var PagerComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-pager');
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var instance = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["getCurrentInstance"])();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      tableLoading: false,
      proxyInited: false,
      isZMax: false,
      tableData: [],
      pendingRecords: [],
      filterData: [],
      formData: {},
      sortData: [],
      tZindex: 0,
      tablePage: {
        total: 0,
        pageSize: 10,
        currentPage: 1
      }
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refForm = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refToolbar = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refPager = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refFormWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refToolbarWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refTopWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBottomWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refPagerWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();

    var extendTableMethods = function extendTableMethods(methodKeys) {
      var funcs = {};
      methodKeys.forEach(function (name) {
        funcs[name] = function () {
          var $xetable = refTable.value;
          return $xetable && $xetable[name].apply($xetable, arguments);
        };
      });
      return funcs;
    };

    var gridExtendTableMethods = extendTableMethods(tableComponentMethodKeys);
    tableComponentMethodKeys.forEach(function (name) {
      gridExtendTableMethods[name] = function () {
        var $xetable = refTable.value;
        return $xetable && $xetable[name].apply($xetable, arguments);
      };
    });
    var computeProxyOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.grid.proxyConfig, props.proxyConfig);
    });
    var computeIsMsg = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var proxyOpts = computeProxyOpts.value;
      return proxyOpts.message !== false;
    });
    var computePagerOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.grid.pagerConfig, props.pagerConfig);
    });
    var computeFormOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.grid.formConfig, props.formConfig);
    });
    var computeToolbarOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.grid.toolbarConfig, props.toolbarConfig);
    });
    var computeZoomOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.grid.zoomConfig, props.zoomConfig);
    });
    var computeStyles = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return reactData.isZMax ? {
        zIndex: reactData.tZindex
      } : null;
    });
    var computeTableExtendProps = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var rest = {};
      var gridProps = props;
      tableComponentPropKeys.forEach(function (key) {
        rest[key] = gridProps[key];
      });
      return rest;
    });
    var refMaps = {
      refElem: refElem,
      refTable: refTable,
      refForm: refForm,
      refToolbar: refToolbar,
      refPager: refPager
    };
    var computeMaps = {
      computeProxyOpts: computeProxyOpts,
      computePagerOpts: computePagerOpts,
      computeFormOpts: computeFormOpts,
      computeToolbarOpts: computeToolbarOpts,
      computeZoomOpts: computeZoomOpts
    };
    var $xegrid = {
      xID: xID,
      props: props,
      context: context,
      instance: instance,
      reactData: reactData,
      refMaps: refMaps,
      computeMaps: computeMaps
    };
    var gridMethods = {};

    var handleRowClassName = function handleRowClassName(params) {
      var rowClassName = props.rowClassName;
      var clss = [];

      if (reactData.pendingRecords.some(function (item) {
        return item === params.row;
      })) {
        clss.push('row--pending');
      }

      return clss.push(rowClassName ? ctor_amd_xe_utils_default.a.isFunction(rowClassName) ? rowClassName(params) : rowClassName : '');
    };

    var handleActiveMethod = function handleActiveMethod(params) {
      var editConfig = props.editConfig;
      var activeMethod = editConfig ? editConfig.activeMethod : null;
      return reactData.pendingRecords.indexOf(params.row) === -1 && (!activeMethod || activeMethod(params));
    };

    var computeTableProps = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var seqConfig = props.seqConfig,
          pagerConfig = props.pagerConfig,
          loading = props.loading,
          editConfig = props.editConfig,
          proxyConfig = props.proxyConfig;
      var isZMax = reactData.isZMax,
          tableLoading = reactData.tableLoading,
          tablePage = reactData.tablePage,
          tableData = reactData.tableData;
      var tableExtendProps = computeTableExtendProps.value;
      var proxyOpts = computeProxyOpts.value;
      var tableProps = Object.assign({}, tableExtendProps);

      if (isZMax) {
        if (tableExtendProps.maxHeight) {
          tableProps.maxHeight = 'auto';
        } else {
          tableProps.height = 'auto';
        }
      }

      if (proxyConfig) {
        tableProps.loading = loading || tableLoading;
        tableProps.data = tableData;
        tableProps.rowClassName = handleRowClassName;

        if ((proxyOpts.seq || proxyOpts.index) && pagerConfig) {
          tableProps.seqConfig = Object.assign({}, seqConfig, {
            startIndex: (tablePage.currentPage - 1) * tablePage.pageSize
          });
        }
      }

      if (editConfig) {
        tableProps.editConfig = Object.assign({}, editConfig, {
          activeMethod: handleActiveMethod
        });
      }

      return tableProps;
    });
    var computePagerProps = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var pagerOpts = computePagerOpts.value;
      return Object.assign({}, pagerOpts, props.proxyConfig ? reactData.tablePage : {});
    });

    var initToolbar = function initToolbar() {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        var $xetable = refTable.value;
        var $xetoolbar = refToolbar.value;

        if ($xetable && $xetoolbar) {
          $xetable.connect($xetoolbar);
        }
      });
    };

    var initPages = function initPages() {
      var pagerConfig = props.pagerConfig;
      var tablePage = reactData.tablePage;
      var pagerOpts = computePagerOpts.value;
      var currentPage = pagerOpts.currentPage,
          pageSize = pagerOpts.pageSize;

      if (pagerConfig) {
        if (currentPage) {
          tablePage.currentPage = currentPage;
        }

        if (pageSize) {
          tablePage.pageSize = pageSize;
        }
      }
    };

    var triggerPendingEvent = function triggerPendingEvent(code) {
      var pendingRecords = reactData.pendingRecords;
      var isMsg = computeIsMsg.value;
      var $xetable = refTable.value;
      var selectRecords = $xetable.getCheckboxRecords();

      if (selectRecords.length) {
        var plus = [];
        var minus = [];
        selectRecords.forEach(function (data) {
          if (pendingRecords.some(function (item) {
            return data === item;
          })) {
            minus.push(data);
          } else {
            plus.push(data);
          }
        });

        if (minus.length) {
          reactData.pendingRecords = pendingRecords.filter(function (item) {
            return minus.indexOf(item) === -1;
          }).concat(plus);
        } else if (plus.length) {
          reactData.pendingRecords = pendingRecords.concat(plus);
        }

        gridExtendTableMethods.clearCheckboxRow();
      } else {
        if (isMsg) {
          v_x_e_table.modal.message({
            id: code,
            message: conf.i18n('vxe.grid.selectOneRecord'),
            status: 'warning'
          });
        }
      }
    };

    var getRespMsg = function getRespMsg(rest, defaultMsg) {
      var proxyOpts = computeProxyOpts.value;
      var _proxyOpts$props = proxyOpts.props,
          proxyProps = _proxyOpts$props === void 0 ? {} : _proxyOpts$props;
      var msg;

      if (rest && proxyProps.message) {
        msg = ctor_amd_xe_utils_default.a.get(rest, proxyProps.message);
      }

      return msg || conf.i18n(defaultMsg);
    };

    var handleDeleteRow = function handleDeleteRow(code, alertKey, callback) {
      var isMsg = computeIsMsg.value;
      var selectRecords = gridExtendTableMethods.getCheckboxRecords();

      if (isMsg) {
        if (selectRecords.length) {
          return v_x_e_table.modal.confirm({
            id: "cfm_".concat(code),
            message: conf.i18n(alertKey),
            escClosable: true
          }).then(function (type) {
            if (type === 'confirm') {
              callback();
            }
          });
        } else {
          v_x_e_table.modal.message({
            id: "msg_".concat(code),
            message: conf.i18n('vxe.grid.selectOneRecord'),
            status: 'warning'
          });
        }
      } else {
        if (selectRecords.length) {
          callback();
        }
      }

      return Promise.resolve();
    };

    var pageChangeEvent = function pageChangeEvent(params) {
      var proxyConfig = props.proxyConfig;
      var tablePage = reactData.tablePage;
      var currentPage = params.currentPage,
          pageSize = params.pageSize;
      tablePage.currentPage = currentPage;
      tablePage.pageSize = pageSize;
      gridMethods.dispatchEvent('page-change', params);

      if (proxyConfig) {
        gridMethods.commitProxy('query');
      }
    };

    var sortChangeEvent = function sortChangeEvent(params) {
      var $xetable = refTable.value;
      var proxyConfig = props.proxyConfig;
      var tableComputeMaps = $xetable.computeMaps;
      var computeSortOpts = tableComputeMaps.computeSortOpts;
      var sortOpts = computeSortOpts.value; // 如果是服务端排序

      if (sortOpts.remote) {
        reactData.sortData = params.sortList;

        if (proxyConfig) {
          reactData.tablePage.currentPage = 1;
          gridMethods.commitProxy('query');
        }
      }

      gridMethods.dispatchEvent('sort-change', params);
    };

    var filterChangeEvent = function filterChangeEvent(params) {
      var $xetable = refTable.value;
      var proxyConfig = props.proxyConfig;
      var tableComputeMaps = $xetable.computeMaps;
      var computeFilterOpts = tableComputeMaps.computeFilterOpts;
      var filterOpts = computeFilterOpts.value; // 如果是服务端过滤

      if (filterOpts.remote) {
        reactData.filterData = params.filters;

        if (proxyConfig) {
          reactData.tablePage.currentPage = 1;
          gridMethods.commitProxy('query');
        }
      }

      gridMethods.dispatchEvent('filter-change', params);
    };

    var submitFormEvent = function submitFormEvent(params) {
      var proxyConfig = props.proxyConfig;

      if (proxyConfig) {
        gridMethods.commitProxy('reload');
      }

      gridMethods.dispatchEvent('form-submit', params);
    };

    var resetFormEvent = function resetFormEvent(params) {
      var proxyConfig = props.proxyConfig;

      if (proxyConfig) {
        gridMethods.commitProxy('reload');
      }

      gridMethods.dispatchEvent('form-reset', params);
    };

    var submitInvalidEvent = function submitInvalidEvent(params) {
      gridMethods.dispatchEvent('form-submit-invalid', params);
    };

    var togglCollapseEvent = function togglCollapseEvent(params) {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        return gridExtendTableMethods.recalculate(true);
      });
      gridMethods.dispatchEvent('form-toggle-collapse', params);
    };

    var handleZoom = function handleZoom(isMax) {
      var isZMax = reactData.isZMax;

      if (isMax ? !isZMax : isZMax) {
        reactData.isZMax = !isZMax;

        if (reactData.tZindex < UtilTools.getLastZIndex()) {
          reactData.tZindex = UtilTools.nextZIndex();
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        return gridExtendTableMethods.recalculate(true);
      }).then(function () {
        return reactData.isZMax;
      });
    };
    /**
     * 渲染表单
     */


    var renderForms = function renderForms() {
      var formConfig = props.formConfig,
          proxyConfig = props.proxyConfig;
      var formData = reactData.formData;
      var proxyOpts = computeProxyOpts.value;
      var formOpts = computeFormOpts.value;
      var restVNs = [];

      if (formConfig || slots.form) {
        var slotVNs = [];

        if (slots.form) {
          slotVNs = slots.form({
            $grid: $xegrid
          });
        } else {
          if (formOpts.items) {
            if (!formOpts.inited) {
              formOpts.inited = true;
              var beforeItem = proxyOpts.beforeItem;

              if (proxyOpts && beforeItem) {
                formOpts.items.forEach(function (item) {
                  beforeItem({
                    $grid: $xegrid,
                    item: item
                  });
                });
              }
            }

            slotVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(FormComponent, _objectSpread2(_objectSpread2({
              ref: refForm
            }, Object.assign({}, formOpts, {
              data: proxyConfig && proxyOpts.form ? formData : formOpts.data
            })), {}, {
              onSubmit: submitFormEvent,
              onReset: resetFormEvent,
              onSubmitInvalid: submitInvalidEvent,
              onToggleCollapse: togglCollapseEvent
            })));
          }
        }

        restVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refFormWrapper,
          class: 'vxe-grid--form-wrapper'
        }, slotVNs));
      }

      return restVNs;
    };
    /**
     * 渲染工具栏
     */


    var renderToolbars = function renderToolbars() {
      var toolbarConfig = props.toolbarConfig;
      var toolbarOpts = computeToolbarOpts.value;
      var restVNs = [];

      if (toolbarConfig || slots.toolbar) {
        var slotVNs = [];

        if (slots.toolbar) {
          slotVNs = slots.toolbar({
            $grid: $xegrid
          });
        } else {
          var toolbarOptSlots = toolbarOpts.slots;
          var buttonsSlot;
          var toolsSlot;
          var toolbarSlots = {};

          if (toolbarOptSlots) {
            buttonsSlot = toolbarOptSlots.buttons;
            toolsSlot = toolbarOptSlots.tools;

            if (buttonsSlot && slots[buttonsSlot]) {
              buttonsSlot = slots[buttonsSlot];
            }

            if (toolsSlot && slots[toolsSlot]) {
              toolsSlot = slots[toolsSlot];
            }
          }

          if (buttonsSlot) {
            toolbarSlots.buttons = buttonsSlot;
          }

          if (toolsSlot) {
            toolbarSlots.tools = toolsSlot;
          }

          slotVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ToolbarComponent, _objectSpread2({
            ref: refToolbar
          }, toolbarOpts), toolbarSlots));
        }

        restVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refToolbarWrapper,
          class: 'vxe-grid--toolbar-wrapper'
        }, slotVNs));
      }

      return restVNs;
    };
    /**
     * 渲染表格顶部区域
     */


    var renderTops = function renderTops() {
      if (slots.top) {
        return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refTopWrapper,
          class: 'vxe-grid--top-wrapper'
        }, slots.top({
          $grid: $xegrid
        }))];
      }

      return [];
    };
    /**
     * 渲染表格
     */


    var renderTables = function renderTables() {
      var proxyConfig = props.proxyConfig;
      var tableProps = computeTableProps.value;
      var proxyOpts = computeProxyOpts.value;
      var ons = {};

      if (instance) {
        ctor_amd_xe_utils_default.a.each(instance.attrs, function (val, key) {
          var matchRests = key.match(/on([A-Z]{1}.*)/);

          if (matchRests) {
            var onName = matchRests[0];
            var name = ctor_amd_xe_utils_default.a.kebabCase(matchRests[1]);

            if (gridComponentEmits.includes(name)) {
              ons[onName] = function () {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                  args[_key] = arguments[_key];
                }

                return emit.apply(void 0, [name].concat(args));
              };
            }
          }
        });
      }

      if (proxyConfig) {
        if (proxyOpts.sort) {
          ons.onSortChange = sortChangeEvent;
        }

        if (proxyOpts.filter) {
          ons.onFilterChange = filterChangeEvent;
        }
      }

      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TableComponent, _objectSpread2(_objectSpread2({
        ref: refTable
      }, tableProps), ons), {
        empty: function empty() {
          return slots.empty ? slots.empty({}) : [];
        }
      })];
    };
    /**
     * 渲染表格底部区域
     */


    var renderBottoms = function renderBottoms() {
      if (slots.bottom) {
        return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refBottomWrapper,
          class: 'vxe-grid--bottom-wrapper'
        }, slots.bottom({
          $grid: $xegrid
        }))];
      }

      return [];
    };
    /**
     * 渲染分页
     */


    var renderPagers = function renderPagers() {
      var pagerConfig = props.pagerConfig;
      var pagerProps = computePagerProps.value;
      var pagerOpts = computePagerOpts.value;
      var restVNs = [];

      if (pagerConfig || slots.pager) {
        var slotVNs = [];

        if (slots.pager) {
          slotVNs = slots.pager({
            $grid: $xegrid
          });
        } else {
          var pagerOptSlots = pagerOpts.slots;
          var pagerSlots = {};
          var leftSlot;
          var rightSlot;

          if (pagerOptSlots) {
            leftSlot = pagerOptSlots.left;
            rightSlot = pagerOptSlots.right;

            if (leftSlot && slots[leftSlot]) {
              leftSlot = slots[leftSlot];
            }

            if (rightSlot && slots[rightSlot]) {
              rightSlot = slots[rightSlot];
            }
          }

          if (leftSlot) {
            pagerSlots.left = leftSlot;
          }

          if (rightSlot) {
            pagerSlots.right = rightSlot;
          }

          slotVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(PagerComponent, _objectSpread2(_objectSpread2({
            ref: refPager
          }, pagerProps), {}, {
            onPageChange: pageChangeEvent
          }), pagerSlots));
        }

        restVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refPagerWrapper,
          class: 'vxe-grid--pager-wrapper'
        }, slotVNs));
      }

      return restVNs;
    };

    var initProxy = function initProxy() {
      var proxyConfig = props.proxyConfig,
          formConfig = props.formConfig;
      var proxyInited = reactData.proxyInited;
      var proxyOpts = computeProxyOpts.value;
      var formOpts = computeFormOpts.value;

      if (proxyConfig) {
        if (formConfig && proxyOpts.form && formOpts.items) {
          var formData = {};
          formOpts.items.forEach(function (_ref) {
            var field = _ref.field,
                itemRender = _ref.itemRender;

            if (field) {
              formData[field] = itemRender && !ctor_amd_xe_utils_default.a.isUndefined(itemRender.defaultValue) ? itemRender.defaultValue : undefined;
            }
          });
          reactData.formData = formData;
        }

        if (!proxyInited && proxyOpts.autoLoad !== false) {
          reactData.proxyInited = true;
          Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
            return gridMethods.commitProxy('init');
          });
        }
      }
    };

    gridMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $grid: $xegrid,
          $event: evnt
        }, params));
      },
      loadColumn: function loadColumn(columns) {
        var $xetable = refTable.value;
        ctor_amd_xe_utils_default.a.eachTree(columns, function (column) {
          if (column.slots) {
            ctor_amd_xe_utils_default.a.each(column.slots, function (func, name, colSlots) {
              if (!ctor_amd_xe_utils_default.a.isFunction(func)) {
                if (slots[func]) {
                  colSlots[name] = slots[func];
                } else {
                  colSlots[name] = null;
                  UtilTools.error('vxe.error.notSlot', [func]);
                }
              }
            });
          }
        });
        return $xetable.loadColumn(columns);
      },
      reloadColumn: function reloadColumn(columns) {
        gridExtendTableMethods.clearAll();
        return gridMethods.loadColumn(columns);
      },

      /**
       * 提交指令，支持 code 或 button
       * @param {String/Object} code 字符串或对象
       */
      commitProxy: function commitProxy(proxyTarget) {
        var toolbarConfig = props.toolbarConfig,
            pagerConfig = props.pagerConfig;
        var tablePage = reactData.tablePage,
            sortData = reactData.sortData,
            filterData = reactData.filterData,
            formData = reactData.formData;
        var isMsg = computeIsMsg.value;
        var proxyOpts = computeProxyOpts.value;
        var toolbarOpts = computeToolbarOpts.value;
        var beforeQuery = proxyOpts.beforeQuery,
            afterQuery = proxyOpts.afterQuery,
            beforeDelete = proxyOpts.beforeDelete,
            afterDelete = proxyOpts.afterDelete,
            beforeSave = proxyOpts.beforeSave,
            afterSave = proxyOpts.afterSave,
            _proxyOpts$ajax = proxyOpts.ajax,
            ajax = _proxyOpts$ajax === void 0 ? {} : _proxyOpts$ajax,
            _proxyOpts$props2 = proxyOpts.props,
            proxyProps = _proxyOpts$props2 === void 0 ? {} : _proxyOpts$props2;
        var $xetable = refTable.value;
        var button = null;
        var code = null;

        if (ctor_amd_xe_utils_default.a.isString(proxyTarget)) {
          var buttons = toolbarOpts.buttons;
          var matchObj = toolbarConfig && buttons ? ctor_amd_xe_utils_default.a.findTree(buttons, function (item) {
            return item.code === proxyTarget;
          }, {
            children: 'dropdowns'
          }) : null;
          button = matchObj ? matchObj.item : null;
          code = proxyTarget;
        } else {
          button = proxyTarget;
          code = button.code;
        }

        var btnParams = button ? button.params : null;

        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        switch (code) {
          case 'insert':
            $xetable.insert({});
            break;

          case 'insert_actived':
            $xetable.insert({}).then(function (_ref2) {
              var row = _ref2.row;
              return $xetable.setActiveRow(row);
            });
            break;

          case 'mark_cancel':
            triggerPendingEvent(code);
            break;

          case 'remove':
            return handleDeleteRow(code, 'vxe.grid.removeSelectRecord', function () {
              return $xetable.removeCheckboxRow();
            });

          case 'import':
            $xetable.importData(btnParams);
            break;

          case 'open_import':
            $xetable.openImport(btnParams);
            break;

          case 'export':
            $xetable.exportData(btnParams);
            break;

          case 'open_export':
            $xetable.openExport(btnParams);
            break;

          case 'reset_custom':
            $xetable.resetColumn(true);
            break;

          case 'init':
          case 'reload':
          case 'query':
            {
              var isInited = code === 'init';
              var isReload = code === 'reload';
              var ajaxMethods = ajax.query;

              if (ajaxMethods) {
                var params = {
                  code: code,
                  button: button,
                  $grid: $xegrid,
                  sort: sortData.length ? sortData[0] : {},
                  sorts: sortData,
                  filters: filterData,
                  form: formData,
                  options: ajaxMethods
                };

                if (pagerConfig) {
                  if (isReload) {
                    tablePage.currentPage = 1;
                  }

                  params.page = tablePage;
                }

                if (isInited || isReload) {
                  var checkedFilters = isInited ? $xetable.getCheckedFilters() : [];
                  var sortParams = [];
                  var tableComputeMaps = $xetable.computeMaps;
                  var computeSortOpts = tableComputeMaps.computeSortOpts;
                  var sortOpts = computeSortOpts.value;
                  var defaultSort = sortOpts.defaultSort; // 如果使用默认排序

                  if (defaultSort) {
                    if (!ctor_amd_xe_utils_default.a.isArray(defaultSort)) {
                      defaultSort = [defaultSort];
                    }

                    sortParams = defaultSort;
                  }

                  reactData.sortData = params.sorts = sortParams;
                  reactData.filterData = params.filters = isInited ? checkedFilters : [];
                  reactData.pendingRecords = [];
                  params.sort = params.sorts.length ? params.sorts[0] : {};
                  Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
                    if (isInited) {
                      clearTableDefaultStatus($xetable);
                    } else {
                      clearTableAllStatus($xetable);
                    }
                  });
                }

                var applyArgs = [params].concat(args);
                reactData.tableLoading = true;
                return Promise.resolve((beforeQuery || ajaxMethods).apply(void 0, _toConsumableArray(applyArgs))).catch(function (e) {
                  return e;
                }).then(function (rest) {
                  reactData.tableLoading = false;

                  if (rest) {
                    if (pagerConfig) {
                      tablePage.total = ctor_amd_xe_utils_default.a.get(rest, proxyProps.total || 'page.total') || 0;
                      reactData.tableData = ctor_amd_xe_utils_default.a.get(rest, proxyProps.result || 'result') || [];
                    } else {
                      reactData.tableData = (proxyProps.list ? ctor_amd_xe_utils_default.a.get(rest, proxyProps.list) : rest) || [];
                    }
                  } else {
                    reactData.tableData = [];
                  }

                  if (afterQuery) {
                    afterQuery.apply(void 0, _toConsumableArray(applyArgs));
                  }
                });
              } else {
                UtilTools.error('vxe.error.notFunc', ['query']);
              }

              break;
            }

          case 'delete':
            {
              var _ajaxMethods = ajax.delete;

              if (_ajaxMethods) {
                var removeRecords = gridExtendTableMethods.getCheckboxRecords();
                var body = {
                  removeRecords: removeRecords
                };

                var _applyArgs = [{
                  $grid: $xegrid,
                  code: code,
                  button: button,
                  body: body,
                  options: _ajaxMethods
                }].concat(args);

                if (removeRecords.length) {
                  return handleDeleteRow(code, 'vxe.grid.deleteSelectRecord', function () {
                    reactData.tableLoading = true;
                    return Promise.resolve((beforeDelete || _ajaxMethods).apply(void 0, _toConsumableArray(_applyArgs))).then(function (rest) {
                      reactData.tableLoading = false;
                      reactData.pendingRecords = reactData.pendingRecords.filter(function (row) {
                        return removeRecords.indexOf(row) === -1;
                      });

                      if (isMsg) {
                        v_x_e_table.modal.message({
                          message: getRespMsg(rest, 'vxe.grid.delSuccess'),
                          status: 'success'
                        });
                      }

                      if (afterDelete) {
                        afterDelete.apply(void 0, _toConsumableArray(_applyArgs));
                      } else {
                        gridMethods.commitProxy('query');
                      }
                    }).catch(function (rest) {
                      reactData.tableLoading = false;

                      if (isMsg) {
                        v_x_e_table.modal.message({
                          id: code,
                          message: getRespMsg(rest, 'vxe.grid.operError'),
                          status: 'error'
                        });
                      }
                    });
                  });
                } else {
                  if (isMsg) {
                    v_x_e_table.modal.message({
                      id: code,
                      message: conf.i18n('vxe.grid.selectOneRecord'),
                      status: 'warning'
                    });
                  }
                }
              } else {
                UtilTools.error('vxe.error.notFunc', [code]);
              }

              break;
            }

          case 'save':
            {
              var _ajaxMethods2 = ajax.save;

              if (_ajaxMethods2) {
                var _body = Object.assign({
                  pendingRecords: reactData.pendingRecords
                }, $xetable.getRecordset());

                var insertRecords = _body.insertRecords,
                    _removeRecords = _body.removeRecords,
                    updateRecords = _body.updateRecords,
                    pendingRecords = _body.pendingRecords;

                var _applyArgs2 = [{
                  $grid: $xegrid,
                  code: code,
                  button: button,
                  body: _body,
                  options: _ajaxMethods2
                }].concat(args); // 排除掉新增且标记为删除的数据


                if (insertRecords.length) {
                  _body.pendingRecords = pendingRecords.filter(function (row) {
                    return insertRecords.indexOf(row) === -1;
                  });
                } // 排除已标记为删除的数据


                if (pendingRecords.length) {
                  _body.insertRecords = insertRecords.filter(function (row) {
                    return pendingRecords.indexOf(row) === -1;
                  });
                } // 只校验新增和修改的数据


                return $xetable.validate(_body.insertRecords.concat(updateRecords)).then(function () {
                  if (_body.insertRecords.length || _removeRecords.length || updateRecords.length || _body.pendingRecords.length) {
                    reactData.tableLoading = true;
                    return Promise.resolve((beforeSave || _ajaxMethods2).apply(void 0, _toConsumableArray(_applyArgs2))).then(function (rest) {
                      reactData.tableLoading = false;
                      reactData.pendingRecords = [];

                      if (isMsg) {
                        v_x_e_table.modal.message({
                          message: getRespMsg(rest, 'vxe.grid.saveSuccess'),
                          status: 'success'
                        });
                      }

                      if (afterSave) {
                        afterSave.apply(void 0, _toConsumableArray(_applyArgs2));
                      } else {
                        gridMethods.commitProxy('query');
                      }
                    }).catch(function (rest) {
                      reactData.tableLoading = false;

                      if (isMsg) {
                        v_x_e_table.modal.message({
                          id: code,
                          message: getRespMsg(rest, 'vxe.grid.operError'),
                          status: 'error'
                        });
                      }
                    });
                  } else {
                    if (isMsg) {
                      v_x_e_table.modal.message({
                        id: code,
                        message: conf.i18n('vxe.grid.dataUnchanged'),
                        status: 'info'
                      });
                    }
                  }
                }).catch(function (errMap) {
                  return errMap;
                });
              } else {
                UtilTools.error('vxe.error.notFunc', [code]);
              }

              break;
            }

          default:
            {
              var btnMethod = v_x_e_table.commands.get(code);

              if (btnMethod) {
                btnMethod.apply(void 0, [{
                  code: code,
                  button: button,
                  $grid: $xegrid,
                  $table: $xetable
                }].concat(args));
              }
            }
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      zoom: function zoom() {
        if (reactData.isZMax) {
          return gridMethods.revert();
        }

        return gridMethods.maximize();
      },
      isMaximized: function isMaximized() {
        return reactData.isZMax;
      },
      maximize: function maximize() {
        return handleZoom(true);
      },
      revert: function revert() {
        return handleZoom();
      },
      getFormItems: function getFormItems() {
        var formOpts = computeFormOpts.value;
        var formConfig = props.formConfig;
        var items = formOpts.items;
        return formConfig && items ? items : [];
      },
      getPendingRecords: function getPendingRecords() {
        return reactData.pendingRecords;
      },
      getProxyInfo: function getProxyInfo() {
        var sortData = reactData.sortData;
        return props.proxyConfig ? {
          data: reactData.tableData,
          filter: reactData.filterData,
          form: reactData.formData,
          sort: sortData.length ? sortData[0] : {},
          sorts: sortData,
          pager: reactData.tablePage,
          pendingRecords: reactData.pendingRecords
        } : null;
      }
    };
    var gridPrivateMethods = {
      extendTableMethods: extendTableMethods,

      /**
       * 获取需要排除的高度
       */
      getExcludeHeight: function getExcludeHeight() {
        var isZMax = reactData.isZMax;
        var el = refElem.value;
        var formWrapper = refFormWrapper.value;
        var toolbarWrapper = refToolbarWrapper.value;
        var topWrapper = refTopWrapper.value;
        var bottomWrapper = refBottomWrapper.value;
        var pagerWrapper = refPagerWrapper.value;
        var parentPaddingSize = isZMax ? 0 : getPaddingTopBottomSize(el.parentNode);
        return parentPaddingSize + getPaddingTopBottomSize(el) + getOffsetHeight(formWrapper) + getOffsetHeight(toolbarWrapper) + getOffsetHeight(topWrapper) + getOffsetHeight(bottomWrapper) + getOffsetHeight(pagerWrapper);
      },
      getParentHeight: function getParentHeight() {
        var el = refElem.value;
        return (reactData.isZMax ? DomTools.getDomNode().visibleHeight : el.parentNode.clientHeight) - gridPrivateMethods.getExcludeHeight();
      },
      triggerToolbarBtnEvent: function triggerToolbarBtnEvent(button, evnt) {
        gridMethods.commitProxy(button, evnt);
        gridMethods.dispatchEvent('toolbar-button-click', {
          code: button.code,
          button: button
        }, evnt);
      },
      triggerZoomEvent: function triggerZoomEvent(evnt) {
        gridMethods.zoom();
        gridMethods.dispatchEvent('zoom', {
          type: reactData.isZMax ? 'max' : 'revert'
        }, evnt);
      }
    };
    Object.assign($xegrid, gridExtendTableMethods, gridMethods, gridPrivateMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.columns;
    }, function (value) {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        return gridMethods.loadColumn(value || []);
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.toolbarConfig;
    }, function (value) {
      if (value) {
        initToolbar();
      }
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.proxyConfig;
    }, function () {
      initProxy();
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.pagerConfig;
    }, function () {
      initPages();
    });

    var handleGlobalKeydownEvent = function handleGlobalKeydownEvent(evnt) {
      var zoomOpts = computeZoomOpts.value;
      var isEsc = evnt.keyCode === 27;

      if (isEsc && reactData.isZMax && zoomOpts.escRestore !== false) {
        gridPrivateMethods.triggerZoomEvent(evnt);
      }
    };

    v_x_e_table.hooks.forEach(function (options) {
      var setupGrid = options.setupGrid;

      if (setupGrid) {
        var hookRest = setupGrid($xegrid);

        if (hookRest && ctor_amd_xe_utils_default.a.isObject(hookRest)) {
          Object.assign($xegrid, hookRest);
        }
      }
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var data = props.data,
          columns = props.columns,
          proxyConfig = props.proxyConfig;
      var proxyOpts = computeProxyOpts.value;
      var formOpts = computeFormOpts.value;

      if (proxyConfig && (data || proxyOpts.form && formOpts.data)) {
        UtilTools.error('errConflicts', ['grid.data', 'grid.proxy-config']);
      }

      if (columns && columns.length) {
        gridMethods.loadColumn(columns);
      }

      initToolbar();
      initPages();
      initProxy();
      GlobalEvent.on($xegrid, 'keydown', handleGlobalKeydownEvent);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      GlobalEvent.off($xegrid, 'keydown');
    });

    var renderVN = function renderVN() {
      var _ref3;

      var vSize = computeSize.value;
      var styles = computeStyles.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-grid', (_ref3 = {}, _defineProperty(_ref3, "size--".concat(vSize), vSize), _defineProperty(_ref3, 't--animat', !!props.animat), _defineProperty(_ref3, 'is--round', props.round), _defineProperty(_ref3, 'is--maximize', reactData.isZMax), _defineProperty(_ref3, 'is--loading', props.loading || reactData.tableLoading), _ref3)],
        style: styles
      }, renderForms().concat(renderToolbars(), renderTops(), renderTables(), renderBottoms(), renderPagers()));
    };

    $xegrid.renderVN = renderVN;
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('$xegrid', $xegrid);
    return $xegrid;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/grid/index.ts


var Grid = {
  install: function install(app) {
    app.component(grid.name, grid);
  }
};
/* harmony default export */ var packages_grid = (Grid);
// CONCATENATED MODULE: ./packages/toolbar/src/toolbar.ts














/* harmony default export */ var toolbar = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeToolbar',
  props: {
    loading: Boolean,
    refresh: [Boolean, Object],
    import: [Boolean, Object],
    export: [Boolean, Object],
    print: [Boolean, Object],
    zoom: [Boolean, Object],
    custom: [Boolean, Object],
    buttons: {
      type: Array,
      default: function _default() {
        return conf.toolbar.buttons;
      }
    },
    perfect: {
      type: Boolean,
      default: function _default() {
        return conf.toolbar.perfect;
      }
    },
    size: {
      type: String,
      default: function _default() {
        return conf.toolbar.size || conf.size;
      }
    }
  },
  emits: ['button-click'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      isRefresh: false,
      columns: []
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refCustomWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var customStore = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      isAll: false,
      isIndeterminate: false,
      activeBtn: false,
      activeWrapper: false,
      visible: false
    });
    var refMaps = {
      refElem: refElem
    };
    var $xetoolbar = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData,
      refMaps: refMaps
    };
    var toolbarMethods = {};
    var $xegrid = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xegrid', null);
    var $xetable;
    var computeRefreshOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.toolbar.refresh, props.refresh);
    });
    var computeImportOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.toolbar.import, props.import);
    });
    var computeExportOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.toolbar.export, props.export);
    });
    var computePrintOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.toolbar.print, props.print);
    });
    var computeZoomOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.toolbar.zoom, props.zoom);
    });
    var computeCustomOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.toolbar.custom, props.custom);
    });

    var checkTable = function checkTable() {
      if ($xetable) {
        return true;
      }

      UtilTools.error('vxe.error.barUnableLink');
    };

    var checkCustomStatus = function checkCustomStatus() {
      var columns = reactData.columns;
      var _$xetable = $xetable,
          tableComputeMaps = _$xetable.computeMaps;
      var computeTableCustomOpts = tableComputeMaps.computeCustomOpts;
      var tableCustomOpts = computeTableCustomOpts.value;
      var checkMethod = tableCustomOpts.checkMethod;
      customStore.isAll = columns.every(function (column) {
        return (checkMethod ? !checkMethod({
          column: column
        }) : false) || column.visible;
      });
      customStore.isIndeterminate = !customStore.isAll && columns.some(function (column) {
        return (!checkMethod || checkMethod({
          column: column
        })) && (column.visible || column.halfVisible);
      });
    };

    var showCustom = function showCustom() {
      customStore.visible = true;
      checkCustomStatus();
    };

    var handleCustoms = function handleCustoms() {
      $xetable.saveCustomVisible();
      $xetable.analyColumnWidth();
      $xetable.refreshColumn();
    };

    var closeCustom = function closeCustom() {
      var custom = props.custom;
      var customOpts = computeCustomOpts.value;

      if (customStore.visible) {
        customStore.visible = false;

        if (custom && !customOpts.immediate) {
          handleCustoms();
        }
      }
    };

    var emitCustomEvent = function emitCustomEvent(type, evnt) {
      var comp = $xegrid || $xetable;
      comp.dispatchEvent('custom', {
        type: type
      }, evnt);
    };

    var confirmCustomEvent = function confirmCustomEvent(evnt) {
      closeCustom();
      emitCustomEvent('confirm', evnt);
    };

    var customOpenEvent = function customOpenEvent(evnt) {
      if (checkTable()) {
        if (!customStore.visible) {
          showCustom();
          emitCustomEvent('open', evnt);
        }
      }
    };

    var customColseEvent = function customColseEvent(evnt) {
      if (customStore.visible) {
        closeCustom();
        emitCustomEvent('close', evnt);
      }
    };

    var resetCustomEvent = function resetCustomEvent(evnt) {
      var columns = reactData.columns;
      var _$xetable2 = $xetable,
          tableComputeMaps = _$xetable2.computeMaps;
      var computeTableCustomOpts = tableComputeMaps.computeCustomOpts;
      var tableCustomOpts = computeTableCustomOpts.value;
      var checkMethod = tableCustomOpts.checkMethod;
      ctor_amd_xe_utils_default.a.eachTree(columns, function (column) {
        if (!checkMethod || checkMethod({
          column: column
        })) {
          column.visible = column.defaultVisible;
          column.halfVisible = false;
        }

        column.resizeWidth = 0;
      });
      $xetable.saveCustomResizable(true);
      closeCustom();
      emitCustomEvent('reset', evnt);
    };

    var handleOptionCheck = function handleOptionCheck(column) {
      var columns = reactData.columns;
      var matchObj = ctor_amd_xe_utils_default.a.findTree(columns, function (item) {
        return item === column;
      });

      if (matchObj && matchObj.parent) {
        var parent = matchObj.parent;

        if (parent.children && parent.children.length) {
          parent.visible = parent.children.every(function (column) {
            return column.visible;
          });
          parent.halfVisible = !parent.visible && parent.children.some(function (column) {
            return column.visible || column.halfVisible;
          });
          handleOptionCheck(parent);
        }
      }
    };

    var changeCustomOption = function changeCustomOption(column) {
      var isChecked = !column.visible;
      var customOpts = computeCustomOpts.value;
      ctor_amd_xe_utils_default.a.eachTree([column], function (item) {
        item.visible = isChecked;
        item.halfVisible = false;
      });
      handleOptionCheck(column);

      if (props.custom && customOpts.immediate) {
        handleCustoms();
      }

      checkCustomStatus();
    };

    var allCustomEvent = function allCustomEvent() {
      var columns = reactData.columns;
      var _$xetable3 = $xetable,
          tableComputeMaps = _$xetable3.computeMaps;
      var computeTableCustomOpts = tableComputeMaps.computeCustomOpts;
      var tableCustomOpts = computeTableCustomOpts.value;
      var checkMethod = tableCustomOpts.checkMethod;
      var isAll = !customStore.isAll;
      ctor_amd_xe_utils_default.a.eachTree(columns, function (column) {
        if (!checkMethod || checkMethod({
          column: column
        })) {
          column.visible = isAll;
          column.halfVisible = false;
        }
      });
      customStore.isAll = isAll;
      checkCustomStatus();
    };

    var handleGlobalMousedownEvent = function handleGlobalMousedownEvent(evnt) {
      var customWrapperElem = refCustomWrapper.value;

      if (!DomTools.getEventTargetNode(evnt, customWrapperElem).flag) {
        customColseEvent(evnt);
      }
    };

    var handleGlobalBlurEvent = function handleGlobalBlurEvent(evnt) {
      customColseEvent(evnt);
    };

    var handleClickSettingEvent = function handleClickSettingEvent(evnt) {
      if (customStore.visible) {
        customColseEvent(evnt);
      } else {
        customOpenEvent(evnt);
      }
    };

    var handleMouseenterSettingEvent = function handleMouseenterSettingEvent(evnt) {
      customStore.activeBtn = true;
      customOpenEvent(evnt);
    };

    var handleMouseleaveSettingEvent = function handleMouseleaveSettingEvent(evnt) {
      customStore.activeBtn = false;
      setTimeout(function () {
        if (!customStore.activeBtn && !customStore.activeWrapper) {
          customColseEvent(evnt);
        }
      }, 300);
    };

    var handleWrapperMouseenterEvent = function handleWrapperMouseenterEvent(evnt) {
      customStore.activeWrapper = true;
      customOpenEvent(evnt);
    };

    var handleWrapperMouseleaveEvent = function handleWrapperMouseleaveEvent(evnt) {
      customStore.activeWrapper = false;
      setTimeout(function () {
        if (!customStore.activeBtn && !customStore.activeWrapper) {
          customColseEvent(evnt);
        }
      }, 300);
    };

    var refreshEvent = function refreshEvent() {
      var isRefresh = reactData.isRefresh;
      var refreshOpts = computeRefreshOpts.value;

      if (!isRefresh) {
        var query = refreshOpts.query;

        if (query) {
          reactData.isRefresh = true;

          try {
            Promise.resolve(query({})).catch(function (e) {
              return e;
            }).then(function () {
              reactData.isRefresh = false;
            });
          } catch (e) {
            reactData.isRefresh = false;
          }
        } else if ($xegrid) {
          reactData.isRefresh = true;
          $xegrid.commitProxy('reload').catch(function (e) {
            return e;
          }).then(function () {
            reactData.isRefresh = false;
          });
        }
      }
    };

    var zoomEvent = function zoomEvent(evnt) {
      if ($xegrid) {
        $xegrid.triggerZoomEvent(evnt);
      }
    };

    var btnEvent = function btnEvent(evnt, item) {
      var code = item.code;

      if (code) {
        if ($xegrid) {
          $xegrid.triggerToolbarBtnEvent(item, evnt);
        } else {
          var commandMethod = v_x_e_table.commands.get(code);
          var params = {
            code: code,
            button: item,
            $table: $xetable,
            $event: evnt
          };

          if (commandMethod) {
            commandMethod(params, evnt);
          }

          $xetoolbar.dispatchEvent('button-click', params, evnt);
        }
      }
    };

    var importEvent = function importEvent() {
      if (checkTable()) {
        $xetable.openImport();
      }
    };

    var exportEvent = function exportEvent() {
      if (checkTable()) {
        $xetable.openExport();
      }
    };

    var printEvent = function printEvent() {
      if (checkTable()) {
        $xetable.openPrint();
      }
    };

    var renderDropdowns = function renderDropdowns(item) {
      var dropdowns = item.dropdowns;
      var downVNs = [];
      var ButtonComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-button');

      if (dropdowns) {
        dropdowns.forEach(function (child, index) {
          if (child.visible !== false) {
            downVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ButtonComponent, {
              key: index,
              disabled: child.disabled,
              loading: child.loading,
              type: child.type,
              icon: child.icon,
              circle: child.circle,
              round: child.round,
              status: child.status,
              content: UtilTools.getFuncText(child.name),
              onClick: function onClick(evnt) {
                return btnEvent(evnt, child);
              }
            }));
          }
        });
      }

      return downVNs;
    };
    /**
     * 渲染按钮
     */


    var renderBtns = function renderBtns() {
      var buttons = props.buttons;

      if (slots.buttons) {
        return slots.buttons({
          $grid: $xegrid,
          $table: $xetable
        });
      }

      var VxeButtonConstructor = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-button');
      var btnVNs = [];

      if (buttons) {
        buttons.forEach(function (item) {
          var dropdowns = item.dropdowns,
              buttonRender = item.buttonRender;

          if (item.visible !== false) {
            var compConf = buttonRender ? v_x_e_table.renderer.get(buttonRender.name) : null;

            if (buttonRender && compConf && compConf.renderButton) {
              btnVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
                class: 'vxe-button--item'
              }, compConf.renderButton(buttonRender, {
                $grid: $xegrid,
                $table: $xetable,
                button: item
              })));
            } else {
              btnVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(VxeButtonConstructor, {
                disabled: item.disabled,
                loading: item.loading,
                type: item.type,
                icon: item.icon,
                circle: item.circle,
                round: item.round,
                status: item.status,
                content: UtilTools.getFuncText(item.name),
                destroyOnClose: item.destroyOnClose,
                placement: item.placement,
                transfer: item.transfer,
                onClick: function onClick(evnt) {
                  return btnEvent(evnt, item);
                }
              }, dropdowns && dropdowns.length ? {
                dropdowns: function dropdowns() {
                  return renderDropdowns(item);
                }
              } : {}));
            }
          }
        });
      }

      return btnVNs;
    };
    /**
     * 渲染右侧工具
     */


    var renderRightTools = function renderRightTools() {
      if (slots.tools) {
        return slots.tools({
          $grid: $xegrid,
          $table: $xetable
        });
      }

      return [];
    };

    var renderCustoms = function renderCustoms() {
      var columns = reactData.columns;
      var customOpts = computeCustomOpts.value;
      var VxeButtonConstructor = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-button');
      var colVNs = [];
      var customBtnOns = {};
      var customWrapperOns = {};
      var checkMethod;

      if ($xetable) {
        var _$xetable4 = $xetable,
            tableComputeMaps = _$xetable4.computeMaps;
        var computeTableCustomOpts = tableComputeMaps.computeCustomOpts;
        var tableCustomOpts = computeTableCustomOpts.value;
        checkMethod = tableCustomOpts.checkMethod;
      }

      if (customOpts.trigger === 'manual') {// 手动触发
      } else if (customOpts.trigger === 'hover') {
        // hover 触发
        customBtnOns.onMouseenter = handleMouseenterSettingEvent;
        customBtnOns.onMouseleave = handleMouseleaveSettingEvent;
        customWrapperOns.onMouseenter = handleWrapperMouseenterEvent;
        customWrapperOns.onMouseleave = handleWrapperMouseleaveEvent;
      } else {
        // 点击触发
        customBtnOns.onClick = handleClickSettingEvent;
      }

      ctor_amd_xe_utils_default.a.eachTree(columns, function (column) {
        var colTitle = UtilTools.formatText(column.getTitle(), 1);
        var colKey = column.getKey();
        var isColGroup = column.children && column.children.length;
        var isDisabled = checkMethod ? !checkMethod({
          column: column
        }) : false;

        if (isColGroup || colKey) {
          colVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
            class: ['vxe-custom--option', "level--".concat(column.level), {
              'is--group': isColGroup,
              'is--checked': column.visible,
              'is--indeterminate': column.halfVisible,
              'is--disabled': isDisabled
            }],
            title: colTitle,
            onClick: function onClick() {
              if (!isDisabled) {
                changeCustomOption(column);
              }
            }
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--label'
          }, colTitle)]));
        }
      });
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: ['vxe-custom--wrapper', {
          'is--active': customStore.visible
        }],
        ref: refCustomWrapper
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(VxeButtonConstructor, _objectSpread2({
        circle: true,
        icon: customOpts.icon || conf.icon.TOOLBAR_TOOLS_CUSTOM,
        title: conf.i18n('vxe.toolbar.custom')
      }, customBtnOns)), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-custom--option-wrapper'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
        class: 'vxe-custom--header'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
        class: ['vxe-custom--option', {
          'is--checked': customStore.isAll,
          'is--indeterminate': customStore.isIndeterminate
        }],
        title: conf.i18n('vxe.table.allTitle'),
        onClick: allCustomEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--label'
      }, conf.i18n('vxe.toolbar.customAll'))])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', _objectSpread2({
        class: 'vxe-custom--body'
      }, customWrapperOns), colVNs), customOpts.isFooter === false ? null : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-custom--footer'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
        class: 'btn--confirm',
        onClick: confirmCustomEvent
      }, conf.i18n('vxe.toolbar.customConfirm')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
        class: 'btn--reset',
        onClick: resetCustomEvent
      }, conf.i18n('vxe.toolbar.customRestore'))])])]);
    };

    toolbarMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $toolbar: $xetoolbar,
          $event: evnt
        }, params));
      },
      syncUpdate: function syncUpdate(params) {
        var collectColumn = params.collectColumn;
        $xetable = params.$table;
        reactData.columns = collectColumn;
      }
    };
    Object.assign($xetoolbar, toolbarMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      GlobalEvent.on($xetoolbar, 'mousedown', handleGlobalMousedownEvent);
      GlobalEvent.on($xetoolbar, 'blur', handleGlobalBlurEvent);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      GlobalEvent.off($xetoolbar, 'mousedown');
      GlobalEvent.off($xetoolbar, 'blur');
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var refresh = props.refresh;
      var refreshOpts = computeRefreshOpts.value;

      if (refresh && !$xegrid && !refreshOpts.query) {
        UtilTools.warn('vxe.error.notFunc', ['query']);
      }
    });

    var renderVN = function renderVN() {
      var _ref;

      var ButtonComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-button');
      var perfect = props.perfect,
          loading = props.loading,
          refresh = props.refresh,
          zoom = props.zoom,
          custom = props.custom;
      var vSize = computeSize.value;
      var refreshOpts = computeRefreshOpts.value;
      var importOpts = computeImportOpts.value;
      var exportOpts = computeExportOpts.value;
      var printOpts = computePrintOpts.value;
      var zoomOpts = computeZoomOpts.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-toolbar', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--perfect', perfect), _defineProperty(_ref, 'is--loading', loading), _ref)]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-button--wrapper'
      }, renderBtns()), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-tools--wrapper'
      }, renderRightTools()), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-tools--operate'
      }, [props.import ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ButtonComponent, {
        circle: true,
        icon: importOpts.icon || conf.icon.TOOLBAR_TOOLS_IMPORT,
        title: conf.i18n('vxe.toolbar.import'),
        onClick: importEvent
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), props.export ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ButtonComponent, {
        circle: true,
        icon: exportOpts.icon || conf.icon.TOOLBAR_TOOLS_EXPORT,
        title: conf.i18n('vxe.toolbar.export'),
        onClick: exportEvent
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), props.print ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ButtonComponent, {
        circle: true,
        icon: printOpts.icon || conf.icon.TOOLBAR_TOOLS_PRINT,
        title: conf.i18n('vxe.toolbar.print'),
        onClick: printEvent
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), refresh ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ButtonComponent, {
        circle: true,
        icon: reactData.isRefresh ? refreshOpts.iconLoading || conf.icon.TOOLBAR_TOOLS_REFRESH_LOADING : refreshOpts.icon || conf.icon.TOOLBAR_TOOLS_REFRESH,
        title: conf.i18n('vxe.toolbar.refresh'),
        onClick: refreshEvent
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), zoom && $xegrid ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ButtonComponent, {
        circle: true,
        icon: $xegrid.isMaximized() ? zoomOpts.iconOut || conf.icon.TOOLBAR_TOOLS_ZOOM_OUT : zoomOpts.iconIn || conf.icon.TOOLBAR_TOOLS_ZOOM_IN,
        title: conf.i18n("vxe.toolbar.zoom".concat($xegrid.isMaximized() ? 'Out' : 'In')),
        onClick: zoomEvent
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), custom ? renderCustoms() : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])()])]);
    };

    $xetoolbar.renderVN = renderVN;
    return $xetoolbar;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/toolbar/index.ts


var Toolbar = {
  install: function install(app) {
    app.component(toolbar.name, toolbar);
  }
};
/* harmony default export */ var packages_toolbar = (Toolbar);
// CONCATENATED MODULE: ./packages/pager/src/pager.ts












/* harmony default export */ var pager = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxePager',
  props: {
    size: {
      type: String,
      default: function _default() {
        return conf.pager.size || conf.size;
      }
    },
    // 自定义布局
    layouts: {
      type: Array,
      default: function _default() {
        return conf.pager.layouts || ['PrevJump', 'PrevPage', 'Jump', 'PageCount', 'NextPage', 'NextJump', 'Sizes', 'Total'];
      }
    },
    // 当前页
    currentPage: {
      type: Number,
      default: 1
    },
    // 加载中
    loading: Boolean,
    // 每页大小
    pageSize: {
      type: Number,
      default: function _default() {
        return conf.pager.pageSize || 10;
      }
    },
    // 总条数
    total: {
      type: Number,
      default: 0
    },
    // 显示页码按钮的数量
    pagerCount: {
      type: Number,
      default: function _default() {
        return conf.pager.pagerCount || 7;
      }
    },
    // 每页大小选项列表
    pageSizes: {
      type: Array,
      default: function _default() {
        return conf.pager.pageSizes || [10, 15, 20, 50, 100];
      }
    },
    // 列对其方式
    align: {
      type: String,
      default: function _default() {
        return conf.pager.align;
      }
    },
    // 带边框
    border: {
      type: Boolean,
      default: function _default() {
        return conf.pager.border;
      }
    },
    // 带背景颜色
    background: {
      type: Boolean,
      default: function _default() {
        return conf.pager.background;
      }
    },
    // 配套的样式
    perfect: {
      type: Boolean,
      default: function _default() {
        return conf.pager.perfect;
      }
    },
    // 当只有一页时隐藏
    autoHidden: {
      type: Boolean,
      default: function _default() {
        return conf.pager.autoHidden;
      }
    },
    // 自定义图标
    iconPrevPage: String,
    iconJumpPrev: String,
    iconJumpNext: String,
    iconNextPage: String,
    iconJumpMore: String
  },
  emits: ['update:pageSize', 'update:currentPage', 'page-change'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var $xegrid = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xegrid', null);
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xepager = {
      xID: xID,
      props: props,
      context: context,
      refMaps: refMaps
    };
    var pagerMethods = {};
    var pagerPrivateMethods = {};

    var getPageCount = function getPageCount(total, size) {
      return Math.max(Math.ceil(total / size), 1);
    };

    var computePageCount = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return getPageCount(props.total, props.pageSize);
    });

    var jumpPageEvent = function jumpPageEvent(evnt, currentPage) {
      emit('update:currentPage', currentPage);

      if (evnt && currentPage !== props.currentPage) {
        pagerMethods.dispatchEvent('page-change', {
          type: 'current',
          pageSize: props.pageSize,
          currentPage: currentPage
        }, evnt);
      }
    };

    var changeCurrentPage = function changeCurrentPage(currentPage, evnt) {
      emit('update:currentPage', currentPage);

      if (evnt && currentPage !== props.currentPage) {
        pagerMethods.dispatchEvent('page-change', {
          type: 'current',
          pageSize: props.pageSize,
          currentPage: currentPage
        }, evnt);
      }
    };

    var triggerJumpEvent = function triggerJumpEvent(evnt) {
      var inputElem = evnt.target;
      var inpValue = ctor_amd_xe_utils_default.a.toNumber(inputElem.value);
      var pageCount = computePageCount.value;
      var current = inpValue <= 0 ? 1 : inpValue >= pageCount ? pageCount : inpValue;
      inputElem.value = ctor_amd_xe_utils_default.a.toString(current);
      changeCurrentPage(current, evnt);
    };

    var computeNumList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var pagerCount = props.pagerCount;
      var pageCount = computePageCount.value;
      var len = pageCount > pagerCount ? pagerCount - 2 : pagerCount;
      var rest = [];

      for (var index = 0; index < len; index++) {
        rest.push(index);
      }

      return rest;
    });
    var computeOffsetNumber = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Math.floor((props.pagerCount - 2) / 2);
    });
    var computeSizeList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.pageSizes.map(function (item) {
        if (ctor_amd_xe_utils_default.a.isNumber(item)) {
          return {
            value: item,
            label: "".concat(conf.i18n('vxe.pager.pagesize', [item]))
          };
        }

        return _objectSpread2({
          value: '',
          label: ''
        }, item);
      });
    });

    var handlePrevPage = function handlePrevPage(evnt) {
      var currentPage = props.currentPage;
      var pageCount = computePageCount.value;

      if (currentPage > 1) {
        changeCurrentPage(Math.min(pageCount, Math.max(currentPage - 1, 1)), evnt);
      }
    };

    var handleNextPage = function handleNextPage(evnt) {
      var currentPage = props.currentPage;
      var pageCount = computePageCount.value;

      if (currentPage < pageCount) {
        changeCurrentPage(Math.min(pageCount, currentPage + 1), evnt);
      }
    };

    var handlePrevJump = function handlePrevJump(evnt) {
      var numList = computeNumList.value;
      changeCurrentPage(Math.max(props.currentPage - numList.length, 1), evnt);
    };

    var handleNextJump = function handleNextJump(evnt) {
      var pageCount = computePageCount.value;
      var numList = computeNumList.value;
      changeCurrentPage(Math.min(props.currentPage + numList.length, pageCount), evnt);
    };

    var pageSizeEvent = function pageSizeEvent(params) {
      var value = params.value;
      var pageSize = ctor_amd_xe_utils_default.a.toNumber(value);
      emit('update:pageSize', pageSize);
      pagerMethods.dispatchEvent('page-change', {
        type: 'size',
        pageSize: pageSize,
        currentPage: Math.min(props.currentPage, getPageCount(props.total, pageSize))
      });
    };

    var jumpKeydownEvent = function jumpKeydownEvent(evnt) {
      if (evnt.keyCode === 13) {
        triggerJumpEvent(evnt);
      } else if (evnt.keyCode === 38) {
        evnt.preventDefault();
        handleNextPage(evnt);
      } else if (evnt.keyCode === 40) {
        evnt.preventDefault();
        handlePrevPage(evnt);
      }
    }; // 上一页


    var renderPrevPage = function renderPrevPage() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: ['vxe-pager--prev-btn', {
          'is--disabled': props.currentPage <= 1
        }],
        title: conf.i18n('vxe.pager.prevPage'),
        onClick: handlePrevPage
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-pager--btn-icon', props.iconPrevPage || conf.icon.PAGER_PREV_PAGE]
      })]);
    }; // 向上翻页


    var renderPrevJump = function renderPrevJump(tagName) {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(tagName || 'span', {
        class: ['vxe-pager--jump-prev', {
          'is--fixed': !tagName,
          'is--disabled': props.currentPage <= 1
        }],
        title: conf.i18n('vxe.pager.prevJump'),
        onClick: handlePrevJump
      }, [tagName ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-pager--jump-more-icon', props.iconJumpMore || conf.icon.PAGER_JUMP_MORE]
      }) : null, Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-pager--jump-icon', props.iconJumpPrev || conf.icon.PAGER_JUMP_PREV]
      })]);
    }; // 向下翻页


    var renderNextJump = function renderNextJump(tagName) {
      var pageCount = computePageCount.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(tagName || 'span', {
        class: ['vxe-pager--jump-next', {
          'is--fixed': !tagName,
          'is--disabled': props.currentPage >= pageCount
        }],
        title: conf.i18n('vxe.pager.nextJump'),
        onClick: handleNextJump
      }, [tagName ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-pager--jump-more-icon', props.iconJumpMore || conf.icon.PAGER_JUMP_MORE]
      }) : null, Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-pager--jump-icon', props.iconJumpNext || conf.icon.PAGER_JUMP_NEXT]
      })]);
    }; // 下一页


    var renderNextPage = function renderNextPage() {
      var pageCount = computePageCount.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: ['vxe-pager--next-btn', {
          'is--disabled': props.currentPage >= pageCount
        }],
        title: conf.i18n('vxe.pager.nextPage'),
        onClick: handleNextPage
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-pager--btn-icon', props.iconNextPage || conf.icon.PAGER_NEXT_PAGE]
      })]);
    }; // 页数


    var renderNumber = function renderNumber(showJump) {
      var currentPage = props.currentPage,
          pagerCount = props.pagerCount;
      var nums = [];
      var pageCount = computePageCount.value;
      var numList = computeNumList.value;
      var offsetNumber = computeOffsetNumber.value;
      var isOv = pageCount > pagerCount;
      var isLt = isOv && currentPage > offsetNumber + 1;
      var isGt = isOv && currentPage < pageCount - offsetNumber;
      var startNumber = 1;

      if (isOv) {
        if (currentPage >= pageCount - offsetNumber) {
          startNumber = Math.max(pageCount - numList.length + 1, 1);
        } else {
          startNumber = Math.max(currentPage - offsetNumber, 1);
        }
      }

      if (showJump && isLt) {
        nums.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
          class: 'vxe-pager--num-btn',
          onClick: function onClick(evnt) {
            return jumpPageEvent(evnt, 1);
          }
        }, 1), renderPrevJump('li'));
      }

      numList.forEach(function (item, index) {
        var number = startNumber + index;

        if (number <= pageCount) {
          nums.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
            key: number,
            class: ['vxe-pager--num-btn', {
              'is--active': currentPage === number
            }],
            onClick: function onClick(evnt) {
              return jumpPageEvent(evnt, number);
            }
          }, number));
        }
      });

      if (showJump && isGt) {
        nums.push(renderNextJump('li'), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
          class: 'vxe-pager--num-btn',
          onClick: function onClick(evnt) {
            return jumpPageEvent(evnt, pageCount);
          }
        }, pageCount));
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
        class: 'vxe-pager--btn-wrapper'
      }, nums);
    }; // jumpNumber


    var renderJumpNumber = function renderJumpNumber() {
      return renderNumber(true);
    }; // sizes


    var renderSizes = function renderSizes() {
      var sizeList = computeSizeList.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-select'), {
        class: 'vxe-pager--sizes',
        modelValue: props.pageSize,
        placement: 'top',
        options: sizeList,
        onChange: pageSizeEvent
      });
    }; // Jump


    var renderJump = function renderJump(isFull) {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-pager--jump'
      }, [isFull ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-pager--goto-text'
      }, conf.i18n('vxe.pager.goto')) : null, Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('input', {
        class: 'vxe-pager--goto',
        value: props.currentPage,
        type: 'text',
        autocomplete: 'off',
        onKeydown: jumpKeydownEvent,
        onBlur: triggerJumpEvent
      }), isFull ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-pager--classifier-text'
      }, conf.i18n('vxe.pager.pageClassifier')) : null]);
    }; // FullJump


    var renderFullJump = function renderFullJump() {
      return renderJump(true);
    }; // PageCount


    var renderPageCount = function renderPageCount() {
      var pageCount = computePageCount.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-pager--count'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-pager--separator'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', pageCount)]);
    }; // total


    var renderTotal = function renderTotal() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-pager--total'
      }, conf.i18n('vxe.pager.total', [props.total]));
    };

    pagerMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $pager: $xepager,
          $event: evnt
        }, params));
      },
      prevPage: function prevPage() {
        handlePrevPage();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      nextPage: function nextPage() {
        handleNextPage();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      prevJump: function prevJump() {
        handlePrevJump();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      nextJump: function nextJump() {
        handleNextJump();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    pagerPrivateMethods = {
      handlePrevPage: handlePrevPage,
      handleNextPage: handleNextPage,
      handlePrevJump: handlePrevJump,
      handleNextJump: handleNextJump
    };
    Object.assign($xepager, pagerMethods, pagerPrivateMethods);

    var renderVN = function renderVN() {
      var _ref;

      var align = props.align,
          layouts = props.layouts;
      var childNodes = [];
      var vSize = computeSize.value;
      var pageCount = computePageCount.value;

      if (slots.left) {
        childNodes.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-pager--left-wrapper'
        }, slots.left({
          $grid: $xegrid
        })));
      }

      layouts.forEach(function (name) {
        var renderFn;

        switch (name) {
          case 'PrevPage':
            renderFn = renderPrevPage;
            break;

          case 'PrevJump':
            renderFn = renderPrevJump;
            break;

          case 'JumpNumber':
            renderFn = renderJumpNumber;
            break;

          case 'NextJump':
            renderFn = renderNextJump;
            break;

          case 'NextPage':
            renderFn = renderNextPage;
            break;

          case 'Sizes':
            renderFn = renderSizes;
            break;

          case 'FullJump':
            renderFn = renderFullJump;
            break;

          case 'Jump':
            renderFn = renderJump;
            break;

          case 'PageCount':
            renderFn = renderPageCount;
            break;

          case 'Total':
            renderFn = renderTotal;
            break;
        }

        if (renderFn) {
          childNodes.push(renderFn());
        }
      });

      if (slots.right) {
        childNodes.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-pager--right-wrapper'
        }, slots.right({
          $grid: $xegrid
        })));
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-pager', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, "align--".concat(align), align), _defineProperty(_ref, 'is--border', props.border), _defineProperty(_ref, 'is--background', props.background), _defineProperty(_ref, 'is--perfect', props.perfect), _defineProperty(_ref, 'is--hidden', props.autoHidden && pageCount === 1), _defineProperty(_ref, 'is--loading', props.loading), _ref)]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-pager--wrapper'
      }, childNodes)]);
    };

    $xepager.renderVN = renderVN;
    return $xepager;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/pager/index.ts


var Pager = {
  install: function install(app) {
    app.component(pager.name, pager);
  }
};
/* harmony default export */ var packages_pager = (Pager);
// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.ts









/* harmony default export */ var src_checkbox = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeCheckbox',
  props: {
    modelValue: Boolean,
    label: {
      type: [String, Number],
      default: null
    },
    indeterminate: Boolean,
    title: [String, Number],
    content: [String, Number],
    disabled: Boolean,
    size: {
      type: String,
      default: function _default() {
        return conf.checkbox.size || conf.size;
      }
    }
  },
  emits: ['update:modelValue', 'change'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var $xecheckbox = {
      xID: xID,
      props: props,
      context: context
    };
    var checkboxMethods = {};
    var computeSize = useSize(props);
    var $xecheckboxgroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xecheckboxgroup', null);
    var computeDisabled = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.disabled || $xecheckboxgroup && $xecheckboxgroup.props.disabled;
    });
    var computeChecked = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return $xecheckboxgroup ? ctor_amd_xe_utils_default.a.includes($xecheckboxgroup.props.modelValue, props.label) : props.modelValue;
    });

    var changeEvent = function changeEvent(evnt) {
      var isDisabled = computeDisabled.value;

      if (!isDisabled) {
        var checked = evnt.target.checked;

        if ($xecheckboxgroup) {
          $xecheckboxgroup.handleChecked({
            checked: checked,
            label: props.label
          }, evnt);
        } else {
          emit('update:modelValue', checked);
          checkboxMethods.dispatchEvent('change', {
            checked: checked,
            label: props.label
          }, evnt);
        }
      }
    };

    checkboxMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $checkbox: $xecheckbox,
          $event: evnt
        }, params));
      }
    };
    Object.assign($xecheckbox, checkboxMethods);

    var renderVN = function renderVN() {
      var _ref;

      var vSize = computeSize.value;
      var isDisabled = computeDisabled.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('label', {
        class: ['vxe-checkbox', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--indeterminate', props.indeterminate), _defineProperty(_ref, 'is--disabled', isDisabled), _ref)],
        title: props.title
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('input', {
        class: 'vxe-checkbox--input',
        type: 'checkbox',
        disabled: isDisabled,
        checked: computeChecked.value,
        onChange: changeEvent
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--icon'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--label'
      }, slots.default ? slots.default({}) : UtilTools.getFuncText(props.content))]);
    };

    $xecheckbox.renderVN = renderVN;
    return $xecheckbox;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/checkbox/src/group.ts






/* harmony default export */ var checkbox_src_group = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeCheckboxGroup',
  props: {
    modelValue: Array,
    disabled: Boolean,
    size: {
      type: String,
      default: function _default() {
        return conf.checkbox.size || conf.size;
      }
    }
  },
  emits: ['update:modelValue', 'change'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var $xecheckboxgroup = {
      xID: xID,
      props: props,
      context: context
    };
    useSize(props);
    var checkboxGroupMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $checkboxGroup: $xecheckboxgroup,
          $event: evnt
        }, params));
      }
    };
    var checkboxGroupPrivateMethods = {
      handleChecked: function handleChecked(params, evnt) {
        var checked = params.checked,
            label = params.label;
        var checklist = props.modelValue || [];
        var checkIndex = checklist.indexOf(label);

        if (checked) {
          if (checkIndex === -1) {
            checklist.push(label);
          }
        } else {
          checklist.splice(checkIndex, 1);
        }

        emit('update:modelValue', checklist);
        $xecheckboxgroup.dispatchEvent('change', Object.assign({
          checklist: checklist
        }, params), evnt);
      }
    };
    Object.assign($xecheckboxgroup, checkboxGroupMethods, checkboxGroupPrivateMethods);

    var renderVN = function renderVN() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-checkbox-group'
      }, slots.default ? slots.default({}) : []);
    };

    $xecheckboxgroup.renderVN = renderVN;
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('$xecheckboxgroup', $xecheckboxgroup);
    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/checkbox/index.ts



var Checkbox = {
  install: function install(app) {
    app.component(src_checkbox.name, src_checkbox);
    app.component(checkbox_src_group.name, checkbox_src_group);
  }
};
/* harmony default export */ var packages_checkbox = (Checkbox);
// CONCATENATED MODULE: ./packages/radio/src/radio.ts








/* harmony default export */ var src_radio = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeRadio',
  props: {
    modelValue: [String, Number, Boolean],
    label: {
      type: [String, Number, Boolean],
      default: null
    },
    title: [String, Number],
    content: [String, Number],
    disabled: Boolean,
    name: String,
    size: {
      type: String,
      default: function _default() {
        return conf.radio.size || conf.size;
      }
    }
  },
  emits: ['update:modelValue', 'change'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var $xeradio = {
      xID: xID,
      props: props,
      context: context
    };
    var computeSize = useSize(props);
    var $xeradiogroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xeradiogroup', null);
    var radioMethods = {};
    var computeDisabled = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.disabled || $xeradiogroup && $xeradiogroup.props.disabled;
    });
    var computeName = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return $xeradiogroup ? $xeradiogroup.name : props.name;
    });
    var computeChecked = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var modelValue = props.modelValue,
          label = props.label;
      return $xeradiogroup ? $xeradiogroup.props.modelValue === label : modelValue === label;
    });

    var changeEvent = function changeEvent(evnt) {
      var label = props.label;
      var isDisabled = computeDisabled.value;

      if (!isDisabled) {
        if ($xeradiogroup) {
          $xeradiogroup.handleChecked({
            label: label
          }, evnt);
        } else {
          emit('update:modelValue', label);
          radioMethods.dispatchEvent('change', {
            label: label
          }, evnt);
        }
      }
    };

    radioMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $radio: $xeradio,
          $event: evnt
        }, params));
      }
    };
    Object.assign($xeradio, radioMethods);

    var renderVN = function renderVN() {
      var _ref;

      var vSize = computeSize.value;
      var isDisabled = computeDisabled.value;
      var name = computeName.value;
      var checked = computeChecked.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('label', {
        class: ['vxe-radio', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--disabled', isDisabled), _ref)],
        title: props.title
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('input', {
        class: 'vxe-radio--input',
        type: 'radio',
        name: name,
        checked: checked,
        disabled: isDisabled,
        onChange: changeEvent
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-radio--icon'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-radio--label'
      }, slots.default ? slots.default({}) : UtilTools.getFuncText(props.content))]);
    };

    $xeradio.renderVN = renderVN;
    return $xeradio;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/radio/src/button.ts








/* harmony default export */ var src_button = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeRadioButton',
  props: {
    modelValue: [String, Number, Boolean],
    label: {
      type: [String, Number, Boolean],
      default: null
    },
    title: [String, Number],
    content: [String, Number],
    disabled: Boolean,
    size: {
      type: String,
      default: function _default() {
        return conf.radio.size || conf.size;
      }
    }
  },
  emits: ['update:modelValue', 'change'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var $xeradiobutton = {
      xID: xID,
      props: props,
      context: context
    };
    var radioButtonMethods = {};
    var $xeradiogroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xeradiogroup', null);
    var computeDisabled = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.disabled || $xeradiogroup && $xeradiogroup.props.disabled;
    });
    var computeName = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return $xeradiogroup ? $xeradiogroup.name : null;
    });
    var computeChecked = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var modelValue = props.modelValue,
          label = props.label;
      return $xeradiogroup ? $xeradiogroup.props.modelValue === label : modelValue === label;
    });
    radioButtonMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $radioButton: $xeradiobutton,
          $event: evnt
        }, params));
      }
    };
    Object.assign($xeradiobutton, radioButtonMethods);

    var changeEvent = function changeEvent(evnt) {
      var label = props.label;
      var isDisabled = computeDisabled.value;

      if (!isDisabled) {
        if ($xeradiogroup) {
          $xeradiogroup.handleChecked({
            label: label
          }, evnt);
        } else {
          emit('update:modelValue', label);
          radioButtonMethods.dispatchEvent('change', {
            label: label
          }, evnt);
        }
      }
    };

    var renderVN = function renderVN() {
      var _ref;

      var vSize = computeSize.value;
      var isDisabled = computeDisabled.value;
      var name = computeName.value;
      var checked = computeChecked.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('label', {
        class: ['vxe-radio', 'vxe-radio-button', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--disabled', isDisabled), _ref)],
        title: props.title
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('input', {
        class: 'vxe-radio--input',
        type: 'radio',
        name: name,
        checked: checked,
        disabled: isDisabled,
        onChange: changeEvent
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-radio--label'
      }, slots.default ? slots.default({}) : UtilTools.getFuncText(props.content))]);
    };

    Object.assign($xeradiobutton, {
      renderVN: renderVN,
      dispatchEvent: dispatchEvent
    });
    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/radio/src/group.ts





/* harmony default export */ var radio_src_group = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeRadioGroup',
  props: {
    modelValue: [String, Number, Boolean],
    disabled: Boolean,
    size: {
      type: String,
      default: function _default() {
        return conf.radio.size || conf.size;
      }
    }
  },
  emits: ['update:modelValue', 'change'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var $xeradiogroup = {
      xID: xID,
      props: props,
      context: context,
      name: ctor_amd_xe_utils_default.a.uniqueId('xegroup_')
    };
    var radioGroupMethods = {};
    useSize(props);
    var radioGroupPrivateMethods = {
      handleChecked: function handleChecked(params) {
        emit('update:modelValue', params.label);
        radioGroupMethods.dispatchEvent('change', params);
      }
    };
    radioGroupMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $radioGroup: $xeradiogroup,
          $event: evnt
        }, params));
      }
    };

    var renderVN = function renderVN() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-radio-group'
      }, slots.default ? slots.default({}) : []);
    };

    Object.assign($xeradiogroup, radioGroupPrivateMethods, {
      renderVN: renderVN,
      dispatchEvent: dispatchEvent
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('$xeradiogroup', $xeradiogroup);
    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/radio/index.ts




var Radio = {
  install: function install(app) {
    app.component(src_radio.name, src_radio);
    app.component(src_button.name, src_button);
    app.component(radio_src_group.name, radio_src_group);
  }
};
/* harmony default export */ var packages_radio = (Radio);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.pad-start.js
var es_string_pad_start = __webpack_require__("4d90");

// CONCATENATED MODULE: ./packages/input/src/input.ts




















var yearSize = 20;
var monthSize = 20;

function toStringTimeDate(str) {
  if (str) {
    var rest = new Date();
    var _h = 0;
    var m = 0;
    var s = 0;

    if (ctor_amd_xe_utils_default.a.isDate(str)) {
      _h = str.getHours();
      m = str.getMinutes();
      s = str.getSeconds();
    } else {
      str = ctor_amd_xe_utils_default.a.toString(str);
      var parses = str.match(/^(\d{1,2})(:(\d{1,2}))?(:(\d{1,2}))?/);

      if (parses) {
        _h = ctor_amd_xe_utils_default.a.toNumber(parses[1]);
        m = ctor_amd_xe_utils_default.a.toNumber(parses[3]);
        s = ctor_amd_xe_utils_default.a.toNumber(parses[5]);
      }
    }

    rest.setHours(_h);
    rest.setMinutes(m);
    rest.setSeconds(s);
    return rest;
  }

  return new Date('');
}

/* harmony default export */ var input = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeInput',
  props: {
    modelValue: [String, Number, Date],
    name: String,
    type: {
      type: String,
      default: 'text'
    },
    clearable: {
      type: Boolean,
      default: function _default() {
        return conf.input.clearable;
      }
    },
    readonly: Boolean,
    disabled: Boolean,
    placeholder: String,
    maxlength: [String, Number],
    autocomplete: {
      type: String,
      default: 'off'
    },
    align: String,
    form: String,
    size: {
      type: String,
      default: function _default() {
        return conf.input.size || conf.size;
      }
    },
    // number、integer、float
    min: {
      type: [String, Number],
      default: null
    },
    max: {
      type: [String, Number],
      default: null
    },
    step: [String, Number],
    // number、integer、float、password
    controls: {
      type: Boolean,
      default: function _default() {
        return conf.input.controls;
      }
    },
    // float
    digits: {
      type: [String, Number],
      default: function _default() {
        return conf.input.digits;
      }
    },
    // date、week、month、year
    minDate: {
      type: [String, Number, Date],
      default: function _default() {
        return conf.input.minDate;
      }
    },
    maxDate: {
      type: [String, Number, Date],
      default: function _default() {
        return conf.input.maxDate;
      }
    },
    startWeek: {
      type: Number,
      default: function _default() {
        return conf.input.startWeek;
      }
    },
    labelFormat: {
      type: String,
      default: function _default() {
        return conf.input.labelFormat;
      }
    },
    parseFormat: {
      type: String,
      default: function _default() {
        return conf.input.parseFormat;
      }
    },
    valueFormat: {
      type: String,
      default: function _default() {
        return conf.input.valueFormat;
      }
    },
    editable: {
      type: Boolean,
      default: true
    },
    festivalMethod: {
      type: Function,
      default: function _default() {
        return conf.input.festivalMethod;
      }
    },
    disabledMethod: {
      type: Function,
      default: function _default() {
        return conf.input.disabledMethod;
      }
    },
    prefixIcon: String,
    suffixIcon: String,
    placement: String,
    transfer: {
      type: Boolean,
      default: function _default() {
        return conf.input.transfer;
      }
    }
  },
  emits: ['update:modelValue', 'input', 'change', 'keydown', 'keyup', 'mousewheel', 'click', 'focus', 'blur', 'clear', 'search-click', 'toggle-visible', 'prev-number', 'next-number', 'prefix-click', 'suffix-click', 'date-prev', 'date-today', 'date-next'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      inited: false,
      panelIndex: 0,
      showPwd: false,
      visiblePanel: false,
      animatVisible: false,
      panelStyle: null,
      panelPlacement: '',
      isActivated: false,
      inputValue: '',
      datetimePanelValue: null,
      datePanelValue: null,
      datePanelLabel: '',
      datePanelType: 'day',
      selectMonth: null,
      currentDate: null
    });
    var $xeinput = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData
    };
    var inputMethods = {};
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refInputTarget = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refInputPanel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refInputTimeBody = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var computeIsDateTimeType = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type;
      return type === 'time' || type === 'datetime';
    });
    var computeIsNumType = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return ['number', 'integer', 'float'].indexOf(props.type) > -1;
    });
    var computeIsDatePickerType = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var isDateTimeType = computeIsDateTimeType.value;
      return isDateTimeType || ['date', 'week', 'month', 'year'].indexOf(props.type) > -1;
    });
    var computeIsPawdType = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.type === 'password';
    });
    var computeIsSearchType = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.type === 'search';
    });
    var computeDigitsValue = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return ctor_amd_xe_utils_default.a.toInteger(props.digits) || 1;
    });
    var computeStepValue = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type;
      var digitsValue = computeDigitsValue.value;
      var step = props.step;

      if (type === 'integer') {
        return ctor_amd_xe_utils_default.a.toInteger(step) || 1;
      } else if (type === 'float') {
        return ctor_amd_xe_utils_default.a.toNumber(step) || 1 / Math.pow(10, digitsValue);
      }

      return ctor_amd_xe_utils_default.a.toNumber(step) || 1;
    });
    var computeIsClearable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type;
      var isNumType = computeIsNumType.value;
      var isDatePickerType = computeIsDatePickerType.value;
      var isPawdType = computeIsPawdType.value;
      return props.clearable && (isPawdType || isNumType || isDatePickerType || type === 'text' || type === 'search');
    });
    var computeDateMinTime = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.minDate ? ctor_amd_xe_utils_default.a.toStringDate(props.minDate) : null;
    });
    var computeDateMaxTime = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.maxDate ? ctor_amd_xe_utils_default.a.toStringDate(props.maxDate) : null;
    });
    var computeDateValueFormat = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type;
      return type === 'time' ? 'HH:mm:ss' : props.valueFormat || (type === 'datetime' ? 'yyyy-MM-dd HH:mm:ss' : 'yyyy-MM-dd');
    });
    var computeDateValue = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var modelValue = props.modelValue,
          type = props.type;
      var isDatePickerType = computeIsDatePickerType.value;
      var dateValueFormat = computeDateValueFormat.value;
      var val = null;

      if (modelValue && isDatePickerType) {
        var date;

        if (type === 'time') {
          date = toStringTimeDate(modelValue);
        } else {
          date = ctor_amd_xe_utils_default.a.toStringDate(modelValue, dateValueFormat);
        }

        if (ctor_amd_xe_utils_default.a.isValidDate(date)) {
          val = date;
        }
      }

      return val;
    });
    var computeIsDisabledPrevDateBtn = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var dateMinTime = computeDateMinTime.value;
      var selectMonth = reactData.selectMonth;

      if (selectMonth && dateMinTime) {
        return selectMonth <= dateMinTime;
      }

      return false;
    });
    var computeIsDisabledNextDateBtn = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var dateMaxTime = computeDateMaxTime.value;
      var selectMonth = reactData.selectMonth;

      if (selectMonth && dateMaxTime) {
        return selectMonth >= dateMaxTime;
      }

      return false;
    });
    var computeDateTimeLabel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var datetimePanelValue = reactData.datetimePanelValue;

      if (datetimePanelValue) {
        return ctor_amd_xe_utils_default.a.toDateString(datetimePanelValue, 'HH:mm:ss');
      }

      return '';
    });
    var computeDateHMSTime = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var dateValue = computeDateValue.value;
      var isDateTimeType = computeIsDateTimeType.value;
      return dateValue && isDateTimeType ? (dateValue.getHours() * 3600 + dateValue.getMinutes() * 60 + dateValue.getSeconds()) * 1000 : 0;
    });
    var computeDateLabelFormat = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        return props.labelFormat || conf.i18n("vxe.input.date.labelFormat.".concat(props.type));
      }

      return null;
    });
    var computeYearList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var selectMonth = reactData.selectMonth,
          currentDate = reactData.currentDate;
      var years = [];

      if (selectMonth && currentDate) {
        var currFullYear = currentDate.getFullYear();
        var startYear = new Date(ctor_amd_xe_utils_default.a.toNumber(('' + selectMonth.getFullYear()).replace(/\d{1}$/, '0')), 0, 1);

        for (var index = -10; index < yearSize - 10; index++) {
          var date = ctor_amd_xe_utils_default.a.getWhatYear(startYear, index, 'first');
          var itemFullYear = date.getFullYear();
          years.push({
            date: date,
            isCurrent: true,
            isNow: currFullYear === itemFullYear,
            year: itemFullYear
          });
        }
      }

      return years;
    });
    var computeSelectDatePanelLabel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        var datePanelType = reactData.datePanelType,
            selectMonth = reactData.selectMonth;
        var yearList = computeYearList.value;
        var year = '';
        var month;

        if (selectMonth) {
          year = selectMonth.getFullYear();
          month = selectMonth.getMonth() + 1;
        }

        if (datePanelType === 'month') {
          return conf.i18n('vxe.input.date.monthLabel', [year]);
        } else if (datePanelType === 'year') {
          return yearList.length ? "".concat(yearList[0].year, " - ").concat(yearList[yearList.length - 1].year) : '';
        }

        return conf.i18n('vxe.input.date.dayLabel', [year, month ? conf.i18n("vxe.input.date.m".concat(month)) : '-']);
      }

      return '';
    });
    var computeWeekDatas = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var weeks = [];
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        var startWeek = props.startWeek;
        var sWeek = ctor_amd_xe_utils_default.a.toNumber(startWeek);
        weeks.push(sWeek);

        for (var index = 0; index < 6; index++) {
          if (sWeek >= 6) {
            sWeek = 0;
          } else {
            sWeek++;
          }

          weeks.push(sWeek);
        }
      }

      return weeks;
    });
    var computeDateHeaders = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        var weekDatas = computeWeekDatas.value;
        return weekDatas.map(function (day) {
          return {
            value: day,
            label: conf.i18n("vxe.input.date.weeks.w".concat(day))
          };
        });
      }

      return [];
    });
    var computeWeekHeaders = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        var dateHeaders = computeDateHeaders.value;
        return [{
          label: conf.i18n('vxe.input.date.weeks.w')
        }].concat(dateHeaders);
      }

      return [];
    });
    var computeYearDatas = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var yearList = computeYearList.value;
      return ctor_amd_xe_utils_default.a.chunk(yearList, 4);
    });
    var computeMonthList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var selectMonth = reactData.selectMonth,
          currentDate = reactData.currentDate;
      var months = [];

      if (selectMonth && currentDate) {
        var currFullYear = currentDate.getFullYear();
        var currMonth = currentDate.getMonth();
        var selFullYear = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, 0, 'first').getFullYear();

        for (var index = -4; index < monthSize - 4; index++) {
          var date = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, 0, index);
          var itemFullYear = date.getFullYear();
          var itemMonth = date.getMonth();
          var isPrev = itemFullYear < selFullYear;
          months.push({
            date: date,
            isPrev: isPrev,
            isCurrent: itemFullYear === selFullYear,
            isNow: itemFullYear === currFullYear && itemMonth === currMonth,
            isNext: !isPrev && itemFullYear > selFullYear,
            month: itemMonth
          });
        }
      }

      return months;
    });
    var computeMonthDatas = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var monthList = computeMonthList.value;
      return ctor_amd_xe_utils_default.a.chunk(monthList, 4);
    });
    var computeDayList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var selectMonth = reactData.selectMonth,
          currentDate = reactData.currentDate;
      var days = [];

      if (selectMonth && currentDate) {
        var dateHMSTime = computeDateHMSTime.value;
        var weekDatas = computeWeekDatas.value;
        var currFullYear = currentDate.getFullYear();
        var currMonth = currentDate.getMonth();
        var currDate = currentDate.getDate();
        var selFullYear = selectMonth.getFullYear();
        var selMonth = selectMonth.getMonth();
        var selDay = selectMonth.getDay();
        var prevOffsetDate = -weekDatas.indexOf(selDay);
        var startDate = new Date(ctor_amd_xe_utils_default.a.getWhatDay(selectMonth, prevOffsetDate).getTime() + dateHMSTime);

        for (var index = 0; index < 42; index++) {
          var date = ctor_amd_xe_utils_default.a.getWhatDay(startDate, index);
          var itemFullYear = date.getFullYear();
          var itemMonth = date.getMonth();
          var itemDate = date.getDate();
          var isPrev = date < selectMonth;
          days.push({
            date: date,
            isPrev: isPrev,
            isCurrent: itemFullYear === selFullYear && itemMonth === selMonth,
            isNow: itemFullYear === currFullYear && itemMonth === currMonth && itemDate === currDate,
            isNext: !isPrev && selMonth !== itemMonth,
            label: itemDate
          });
        }
      }

      return days;
    });
    var computeDayDatas = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var dayList = computeDayList.value;
      return ctor_amd_xe_utils_default.a.chunk(dayList, 7);
    });
    var computeWeekDates = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var dayDatas = computeDayDatas.value;
      return dayDatas.map(function (list) {
        var firstItem = list[0];
        var item = {
          date: firstItem.date,
          isWeekNumber: true,
          isPrev: false,
          isCurrent: false,
          isNow: false,
          isNext: false,
          label: ctor_amd_xe_utils_default.a.getYearWeek(firstItem.date)
        };
        return [item].concat(list);
      });
    });
    var computeHourList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var list = [];
      var isDateTimeType = computeIsDateTimeType.value;

      if (isDateTimeType) {
        for (var index = 0; index < 24; index++) {
          list.push({
            value: index,
            label: ('' + index).padStart(2, '0')
          });
        }
      }

      return list;
    });
    var computeMinuteList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var list = [];
      var isDateTimeType = computeIsDateTimeType.value;

      if (isDateTimeType) {
        for (var index = 0; index < 60; index++) {
          list.push({
            value: index,
            label: ('' + index).padStart(2, '0')
          });
        }
      }

      return list;
    });
    var computeSecondList = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var minuteList = computeMinuteList.value;
      return minuteList;
    });
    var computeIsReadonly = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type,
          readonly = props.readonly,
          editable = props.editable;
      return readonly || type === 'week' || !editable;
    });
    var computeInputType = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type;
      var showPwd = reactData.showPwd;
      var isNumType = computeIsNumType.value;
      var isDatePickerType = computeIsDatePickerType.value;
      var isPawdType = computeIsPawdType.value;

      if (isDatePickerType || isNumType || isPawdType && showPwd || type === 'number') {
        return 'text';
      }

      return type;
    });
    var computeInpPlaceholder = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var placeholder = props.placeholder;

      if (placeholder) {
        return UtilTools.getFuncText(placeholder);
      }

      return '';
    });
    var computeInpMaxlength = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var maxlength = props.maxlength;
      var isNumType = computeIsNumType.value; // 数值最大长度限制 16 位，包含小数

      return isNumType && !ctor_amd_xe_utils_default.a.toNumber(maxlength) ? 16 : maxlength;
    });

    var triggerEvent = function triggerEvent(evnt) {
      inputMethods.dispatchEvent(evnt.type, {
        value: props.modelValue
      }, evnt);
    };

    var emitUpdate = function emitUpdate(value, evnt) {
      emit('update:modelValue', value);

      if (ctor_amd_xe_utils_default.a.toString(props.modelValue) !== value) {
        inputMethods.dispatchEvent('change', {
          value: value
        }, evnt);
      }
    };

    var inputEvent = function inputEvent(evnt) {
      var isDatePickerType = computeIsDatePickerType.value;
      var inputElem = evnt.target;
      var value = inputElem.value;
      reactData.inputValue = value;

      if (!isDatePickerType) {
        emitUpdate(value, evnt);
      }

      inputMethods.dispatchEvent('input', {
        value: value
      }, evnt);
    };

    var focusEvent = function focusEvent(evnt) {
      reactData.isActivated = true;
      triggerEvent(evnt);
    };

    var clickPrefixEvent = function clickPrefixEvent(evnt) {
      var disabled = props.disabled;

      if (!disabled) {
        inputMethods.dispatchEvent('prefix-click', {
          value: props.modelValue
        }, evnt);
      }
    };

    var hidePanelTimeout;

    var hidePanel = function hidePanel() {
      reactData.visiblePanel = false;
      hidePanelTimeout = window.setTimeout(function () {
        reactData.animatVisible = false;
      }, 350);
    };

    var clearValueEvent = function clearValueEvent(evnt, value) {
      var type = props.type;
      var isNumType = computeIsNumType.value;
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        hidePanel();
      }

      if (isNumType || ['text', 'search', 'password'].indexOf(type) > -1) {
        focus();
      }

      inputMethods.dispatchEvent('clear', {
        value: value
      }, evnt);
    };

    var clickSuffixEvent = function clickSuffixEvent(evnt) {
      var disabled = props.disabled;

      if (!disabled) {
        if (DomTools.hasClass(evnt.currentTarget, 'is--clear')) {
          emitUpdate('', evnt);
          clearValueEvent(evnt, '');
        } else {
          inputMethods.dispatchEvent('suffix-click', {
            value: props.modelValue
          }, evnt);
        }
      }
    };

    var dateParseValue = function dateParseValue(value) {
      var type = props.type;
      var parseFormat = props.parseFormat;
      var dateLabelFormat = computeDateLabelFormat.value;
      var dValue = null;
      var dLabel = '';

      if (value) {
        if (type === 'time') {
          dValue = toStringTimeDate(value);
        } else {
          dValue = ctor_amd_xe_utils_default.a.toStringDate(value, parseFormat);
        }
      }

      if (ctor_amd_xe_utils_default.a.isValidDate(dValue)) {
        dLabel = ctor_amd_xe_utils_default.a.toDateString(dValue, dateLabelFormat);
      } else {
        dValue = null;
      }

      reactData.datePanelValue = dValue;
      reactData.datePanelLabel = dLabel;
    };
    /**
     * 值变化时处理
     */


    var changeValue = function changeValue() {
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        dateParseValue(props.modelValue);
        reactData.inputValue = reactData.datePanelLabel;
      }
    };
    /**
     * 检查初始值
     */


    var initValue = function initValue() {
      var type = props.type,
          modelValue = props.modelValue;
      var isDatePickerType = computeIsDatePickerType.value;
      var digitsValue = computeDigitsValue.value;

      if (isDatePickerType) {
        changeValue();
      } else if (type === 'float') {
        if (modelValue) {
          var validValue = ctor_amd_xe_utils_default.a.toFixed(ctor_amd_xe_utils_default.a.floor(modelValue, digitsValue), digitsValue);

          if (modelValue !== validValue) {
            emitUpdate(validValue, {
              type: 'init'
            });
          }
        }
      }
    };

    var vaildMaxNum = function vaildMaxNum(num) {
      return props.max === null || num <= ctor_amd_xe_utils_default.a.toNumber(props.max);
    };

    var vaildMinNum = function vaildMinNum(num) {
      return props.min === null || num >= ctor_amd_xe_utils_default.a.toNumber(props.min);
    };

    var dateRevert = function dateRevert() {
      reactData.inputValue = reactData.datePanelLabel;
    };

    var dateCheckMonth = function dateCheckMonth(date) {
      var month = ctor_amd_xe_utils_default.a.getWhatMonth(date, 0, 'first');

      if (!ctor_amd_xe_utils_default.a.isEqual(month, reactData.selectMonth)) {
        reactData.selectMonth = month;
      }
    };

    var dateChange = function dateChange(date) {
      var modelValue = props.modelValue;
      var datetimePanelValue = reactData.datetimePanelValue;
      var isDateTimeType = computeIsDateTimeType.value;
      var dateValueFormat = computeDateValueFormat.value;

      if (props.type === 'week') {
        var sWeek = ctor_amd_xe_utils_default.a.toNumber(props.startWeek);
        date = ctor_amd_xe_utils_default.a.getWhatWeek(date, 0, sWeek);
      } else if (isDateTimeType) {
        date.setHours(datetimePanelValue.getHours());
        date.setMinutes(datetimePanelValue.getMinutes());
        date.setSeconds(datetimePanelValue.getSeconds());
      }

      var inpVal = ctor_amd_xe_utils_default.a.toDateString(date, dateValueFormat);
      dateCheckMonth(date);

      if (!ctor_amd_xe_utils_default.a.isEqual(modelValue, inpVal)) {
        emitUpdate(inpVal, {
          type: 'update'
        });
      }
    };

    var afterCheckValue = function afterCheckValue() {
      var type = props.type,
          min = props.min,
          max = props.max;
      var inputValue = reactData.inputValue,
          datetimePanelValue = reactData.datetimePanelValue;
      var isNumType = computeIsNumType.value;
      var isDatePickerType = computeIsDatePickerType.value;
      var digitsValue = computeDigitsValue.value;
      var dateLabelFormat = computeDateLabelFormat.value;
      var isReadonly = computeIsReadonly.value;
      var value = props.modelValue;
      var inpVal;

      if (!isReadonly) {
        if (isNumType) {
          if (value) {
            inpVal = type === 'integer' ? ctor_amd_xe_utils_default.a.toInteger(value) : ctor_amd_xe_utils_default.a.toNumber(value);

            if (!vaildMinNum(inpVal)) {
              inpVal = min;
            } else if (!vaildMaxNum(inpVal)) {
              inpVal = max;
            }

            emitUpdate(type === 'float' ? ctor_amd_xe_utils_default.a.toFixed(ctor_amd_xe_utils_default.a.floor(inpVal, digitsValue), digitsValue) : ctor_amd_xe_utils_default.a.toString(inpVal), {
              type: 'check'
            });
          }
        } else if (isDatePickerType) {
          inpVal = inputValue;

          if (inpVal) {
            if (type === 'time') {
              inpVal = toStringTimeDate(inpVal);
            } else {
              inpVal = ctor_amd_xe_utils_default.a.toStringDate(inpVal, dateLabelFormat);
            }

            if (ctor_amd_xe_utils_default.a.isValidDate(inpVal)) {
              if (type === 'time') {
                inpVal = ctor_amd_xe_utils_default.a.toDateString(inpVal, dateLabelFormat);

                if (value !== inpVal) {
                  emitUpdate(inpVal, {
                    type: 'check'
                  });
                }

                reactData.inputValue = inpVal;
              } else {
                if (!ctor_amd_xe_utils_default.a.isDateSame(value, inpVal, dateLabelFormat)) {
                  if (type === 'datetime') {
                    datetimePanelValue.setHours(inpVal.getHours());
                    datetimePanelValue.setMinutes(inpVal.getMinutes());
                    datetimePanelValue.setSeconds(inpVal.getSeconds());
                  }

                  dateChange(inpVal);
                } else {
                  reactData.inputValue = ctor_amd_xe_utils_default.a.toDateString(value, dateLabelFormat);
                }
              }
            } else {
              dateRevert();
            }
          } else {
            emitUpdate('', {
              type: 'check'
            });
          }
        }
      }
    };

    var blurEvent = function blurEvent(evnt) {
      afterCheckValue();

      if (!reactData.visiblePanel) {
        reactData.isActivated = false;
      }

      triggerEvent(evnt);
    }; // 密码


    var passwordToggleEvent = function passwordToggleEvent(evnt) {
      var disabled = props.disabled;
      var showPwd = reactData.showPwd;
      var isReadonly = computeIsReadonly.value;

      if (!disabled && !isReadonly) {
        reactData.showPwd = !showPwd;
      }

      inputMethods.dispatchEvent('toggle-visible', {
        visible: reactData.showPwd
      }, evnt);
    }; // 密码
    // 搜索


    var searchEvent = function searchEvent(evnt) {
      inputMethods.dispatchEvent('search-click', {}, evnt);
    }; // 搜索
    // 数值


    var numberChange = function numberChange(isPlus, evnt) {
      var type = props.type;
      var stepValue = computeStepValue.value;
      var digitsValue = computeDigitsValue.value;
      var value = props.modelValue;
      var inputValue = type === 'integer' ? ctor_amd_xe_utils_default.a.toInteger(value) : ctor_amd_xe_utils_default.a.toNumber(value);
      var newValue = isPlus ? ctor_amd_xe_utils_default.a.add(inputValue, stepValue) : ctor_amd_xe_utils_default.a.subtract(inputValue, stepValue);

      if (vaildMinNum(newValue) && vaildMaxNum(newValue)) {
        emitUpdate(type === 'float' ? ctor_amd_xe_utils_default.a.toFixed(ctor_amd_xe_utils_default.a.floor(newValue, digitsValue), digitsValue) : ctor_amd_xe_utils_default.a.toString(newValue), evnt);
      }
    };

    var downbumTimeout;

    var numberNextEvent = function numberNextEvent(evnt) {
      var disabled = props.disabled;
      var isReadonly = computeIsReadonly.value;
      clearTimeout(downbumTimeout);

      if (!disabled && !isReadonly) {
        numberChange(false, evnt);
      }

      inputMethods.dispatchEvent('next-number', {}, evnt);
    };

    var numberDownNextEvent = function numberDownNextEvent(evnt) {
      downbumTimeout = window.setTimeout(function () {
        numberNextEvent(evnt);
        numberDownNextEvent(evnt);
      }, 60);
    };

    var numberPrevEvent = function numberPrevEvent(evnt) {
      var disabled = props.disabled;
      var isReadonly = computeIsReadonly.value;
      clearTimeout(downbumTimeout);

      if (!disabled && !isReadonly) {
        numberChange(true, evnt);
      }

      inputMethods.dispatchEvent('prev-number', {}, evnt);
    };

    var numberKeydownEvent = function numberKeydownEvent(evnt) {
      var keyCode = evnt.keyCode;
      var isUpArrow = keyCode === 38;
      var isDwArrow = keyCode === 40;

      if (isUpArrow || isDwArrow) {
        evnt.preventDefault();

        if (isUpArrow) {
          numberPrevEvent(evnt);
        } else {
          numberNextEvent(evnt);
        }
      }
    };

    var keydownEvent = function keydownEvent(evnt) {
      var isNumType = computeIsNumType.value;

      if (isNumType) {
        var isCtrlKey = evnt.ctrlKey;
        var isShiftKey = evnt.shiftKey;
        var isAltKey = evnt.altKey;
        var keyCode = evnt.keyCode;

        if (!isCtrlKey && !isShiftKey && !isAltKey && (keyCode === 32 || keyCode >= 65 && keyCode <= 90)) {
          evnt.preventDefault();
        }

        numberKeydownEvent(evnt);
      }

      triggerEvent(evnt);
    };

    var keyupEvent = function keyupEvent(evnt) {
      triggerEvent(evnt);
    }; // 数值


    var numberStopDown = function numberStopDown() {
      clearTimeout(downbumTimeout);
    };

    var numberDownPrevEvent = function numberDownPrevEvent(evnt) {
      downbumTimeout = window.setTimeout(function () {
        numberPrevEvent(evnt);
        numberDownPrevEvent(evnt);
      }, 60);
    };

    var numberMousedownEvent = function numberMousedownEvent(evnt) {
      numberStopDown();

      if (evnt.button === 0) {
        var isPrevNumber = DomTools.hasClass(evnt.currentTarget, 'is--prev');

        if (isPrevNumber) {
          numberPrevEvent(evnt);
        } else {
          numberNextEvent(evnt);
        }

        downbumTimeout = window.setTimeout(function () {
          if (isPrevNumber) {
            numberDownPrevEvent(evnt);
          } else {
            numberDownNextEvent(evnt);
          }
        }, 500);
      }
    };

    var mousewheelEvent = function mousewheelEvent(evnt) {
      var isNumType = computeIsNumType.value;

      if (isNumType && props.controls) {
        if (reactData.isActivated) {
          var delta = -evnt.wheelDelta || evnt.detail;

          if (delta > 0) {
            numberNextEvent(evnt);
          } else if (delta < 0) {
            numberPrevEvent(evnt);
          }

          evnt.preventDefault();
        }
      }

      triggerEvent(evnt);
    }; // 日期


    var dateMonthHandle = function dateMonthHandle(date, offsetMonth) {
      reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatMonth(date, offsetMonth, 'first');
    };

    var dateNowHandle = function dateNowHandle() {
      var currentDate = ctor_amd_xe_utils_default.a.getWhatDay(Date.now(), 0, 'first');
      reactData.currentDate = currentDate;
      dateMonthHandle(currentDate, 0);
    };

    var dateToggleTypeEvent = function dateToggleTypeEvent() {
      var datePanelType = reactData.datePanelType;

      if (datePanelType === 'month') {
        datePanelType = 'year';
      } else {
        datePanelType = 'month';
      }

      reactData.datePanelType = datePanelType;
    };

    var datePrevEvent = function datePrevEvent(evnt) {
      var type = props.type;
      var datePanelType = reactData.datePanelType,
          selectMonth = reactData.selectMonth;
      var isDisabledPrevDateBtn = computeIsDisabledPrevDateBtn.value;

      if (!isDisabledPrevDateBtn) {
        if (type === 'year') {
          reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, -yearSize, 'first');
        } else if (type === 'month') {
          if (datePanelType === 'year') {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, -yearSize, 'first');
          } else {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, -1, 'first');
          }
        } else {
          if (datePanelType === 'year') {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, -yearSize, 'first');
          } else if (datePanelType === 'month') {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, -1, 'first');
          } else {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatMonth(selectMonth, -1, 'first');
          }
        }

        inputMethods.dispatchEvent('date-prev', {
          type: type
        }, evnt);
      }
    };

    var dateTodayMonthEvent = function dateTodayMonthEvent(evnt) {
      dateNowHandle();
      dateChange(reactData.currentDate);
      hidePanel();
      inputMethods.dispatchEvent('date-today', {
        type: props.type
      }, evnt);
    };

    var dateNextEvent = function dateNextEvent(evnt) {
      var type = props.type;
      var datePanelType = reactData.datePanelType,
          selectMonth = reactData.selectMonth;
      var isDisabledNextDateBtn = computeIsDisabledNextDateBtn.value;

      if (!isDisabledNextDateBtn) {
        if (type === 'year') {
          reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, yearSize, 'first');
        } else if (type === 'month') {
          if (datePanelType === 'year') {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, yearSize, 'first');
          } else {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, 1, 'first');
          }
        } else {
          if (datePanelType === 'year') {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, yearSize, 'first');
          } else if (datePanelType === 'month') {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatYear(selectMonth, 1, 'first');
          } else {
            reactData.selectMonth = ctor_amd_xe_utils_default.a.getWhatMonth(selectMonth, 1, 'first');
          }
        }

        inputMethods.dispatchEvent('date-next', {
          type: type
        }, evnt);
      }
    };

    var isDateDisabled = function isDateDisabled(item) {
      var type = props.type,
          disabledMethod = props.disabledMethod;
      return disabledMethod && disabledMethod({
        type: type,
        date: item.date
      });
    };

    var dateSelectItem = function dateSelectItem(date) {
      var type = props.type;
      var datePanelType = reactData.datePanelType;

      if (type === 'month') {
        if (datePanelType === 'year') {
          reactData.datePanelType = 'month';
          dateCheckMonth(date);
        } else {
          dateChange(date);
          hidePanel();
        }
      } else if (type === 'year') {
        hidePanel();
        dateChange(date);
      } else {
        if (datePanelType === 'month') {
          reactData.datePanelType = type === 'week' ? type : 'day';
          dateCheckMonth(date);
        } else if (datePanelType === 'year') {
          reactData.datePanelType = 'month';
          dateCheckMonth(date);
        } else {
          dateChange(date);
          hidePanel();
        }
      }
    };

    var dateSelectEvent = function dateSelectEvent(item) {
      if (!isDateDisabled(item)) {
        dateSelectItem(item.date);
      }
    };

    var dateMoveDay = function dateMoveDay(offsetDay) {
      if (!isDateDisabled({
        date: offsetDay
      })) {
        var dayList = computeDayList.value;

        if (!dayList.some(function (item) {
          return ctor_amd_xe_utils_default.a.isDateSame(item.date, offsetDay, 'yyyy-MM-dd');
        })) {
          dateCheckMonth(offsetDay);
        }

        dateParseValue(offsetDay);
      }
    };

    var dateMoveYear = function dateMoveYear(offsetYear) {
      if (!isDateDisabled({
        date: offsetYear
      })) {
        var yearList = computeYearList.value;

        if (!yearList.some(function (item) {
          return ctor_amd_xe_utils_default.a.isDateSame(item.date, offsetYear, 'yyyy');
        })) {
          dateCheckMonth(offsetYear);
        }

        dateParseValue(offsetYear);
      }
    };

    var dateMoveMonth = function dateMoveMonth(offsetMonth) {
      if (!isDateDisabled({
        date: offsetMonth
      })) {
        var monthList = computeMonthList.value;

        if (!monthList.some(function (item) {
          return ctor_amd_xe_utils_default.a.isDateSame(item.date, offsetMonth, 'yyyy-MM');
        })) {
          dateCheckMonth(offsetMonth);
        }

        dateParseValue(offsetMonth);
      }
    };

    var dateMouseenterEvent = function dateMouseenterEvent(item) {
      if (!isDateDisabled(item)) {
        var datePanelType = reactData.datePanelType;

        if (datePanelType === 'month') {
          dateMoveMonth(item.date);
        } else if (datePanelType === 'year') {
          dateMoveYear(item.date);
        } else {
          dateMoveDay(item.date);
        }
      }
    };

    var updateTimePos = function updateTimePos(liElem) {
      if (liElem) {
        var height = liElem.offsetHeight;
        var ulElem = liElem.parentNode;
        ulElem.scrollTop = liElem.offsetTop - height * 4;
      }
    };

    var dateTimeChangeEvent = function dateTimeChangeEvent(evnt) {
      reactData.datetimePanelValue = new Date(reactData.datetimePanelValue.getTime());
      updateTimePos(evnt.currentTarget);
    };

    var dateHourEvent = function dateHourEvent(evnt, item) {
      reactData.datetimePanelValue.setHours(item.value);
      dateTimeChangeEvent(evnt);
    };

    var dateConfirmEvent = function dateConfirmEvent() {
      var dateValue = computeDateValue.value;
      dateChange(dateValue || reactData.currentDate);
      hidePanel();
    };

    var dateMinuteEvent = function dateMinuteEvent(evnt, item) {
      reactData.datetimePanelValue.setMinutes(item.value);
      dateTimeChangeEvent(evnt);
    };

    var dateSecondEvent = function dateSecondEvent(evnt, item) {
      reactData.datetimePanelValue.setSeconds(item.value);
      dateTimeChangeEvent(evnt);
    };

    var dateOffsetEvent = function dateOffsetEvent(evnt) {
      var isActivated = reactData.isActivated,
          datePanelValue = reactData.datePanelValue,
          datePanelType = reactData.datePanelType;

      if (isActivated) {
        evnt.preventDefault();
        var keyCode = evnt.keyCode;
        var isLeftArrow = keyCode === 37;
        var isUpArrow = keyCode === 38;
        var isRightArrow = keyCode === 39;
        var isDwArrow = keyCode === 40;

        if (datePanelType === 'year') {
          var offsetYear = ctor_amd_xe_utils_default.a.getWhatYear(datePanelValue || Date.now(), 0, 'first');

          if (isLeftArrow) {
            offsetYear = ctor_amd_xe_utils_default.a.getWhatYear(offsetYear, -1);
          } else if (isUpArrow) {
            offsetYear = ctor_amd_xe_utils_default.a.getWhatYear(offsetYear, -4);
          } else if (isRightArrow) {
            offsetYear = ctor_amd_xe_utils_default.a.getWhatYear(offsetYear, 1);
          } else if (isDwArrow) {
            offsetYear = ctor_amd_xe_utils_default.a.getWhatYear(offsetYear, 4);
          }

          dateMoveYear(offsetYear);
        } else if (datePanelType === 'month') {
          var offsetMonth = ctor_amd_xe_utils_default.a.getWhatMonth(datePanelValue || Date.now(), 0, 'first');

          if (isLeftArrow) {
            offsetMonth = ctor_amd_xe_utils_default.a.getWhatMonth(offsetMonth, -1);
          } else if (isUpArrow) {
            offsetMonth = ctor_amd_xe_utils_default.a.getWhatMonth(offsetMonth, -4);
          } else if (isRightArrow) {
            offsetMonth = ctor_amd_xe_utils_default.a.getWhatMonth(offsetMonth, 1);
          } else if (isDwArrow) {
            offsetMonth = ctor_amd_xe_utils_default.a.getWhatMonth(offsetMonth, 4);
          }

          dateMoveMonth(offsetMonth);
        } else {
          var offsetDay = datePanelValue || ctor_amd_xe_utils_default.a.getWhatDay(Date.now(), 0, 'first');

          if (isLeftArrow) {
            offsetDay = ctor_amd_xe_utils_default.a.getWhatDay(offsetDay, -1);
          } else if (isUpArrow) {
            offsetDay = ctor_amd_xe_utils_default.a.getWhatWeek(offsetDay, -1);
          } else if (isRightArrow) {
            offsetDay = ctor_amd_xe_utils_default.a.getWhatDay(offsetDay, 1);
          } else if (isDwArrow) {
            offsetDay = ctor_amd_xe_utils_default.a.getWhatWeek(offsetDay, 1);
          }

          dateMoveDay(offsetDay);
        }
      }
    };

    var datePgOffsetEvent = function datePgOffsetEvent(evnt) {
      var isActivated = reactData.isActivated;

      if (isActivated) {
        var isPgUp = evnt.keyCode === 33;
        evnt.preventDefault();

        if (isPgUp) {
          datePrevEvent(evnt);
        } else {
          dateNextEvent(evnt);
        }
      }
    };

    var dateOpenPanel = function dateOpenPanel() {
      var type = props.type;
      var isDateTimeType = computeIsDateTimeType.value;
      var dateValue = computeDateValue.value;

      if (['year', 'month', 'week'].indexOf(type) > -1) {
        reactData.datePanelType = type;
      } else {
        reactData.datePanelType = 'day';
      }

      reactData.currentDate = ctor_amd_xe_utils_default.a.getWhatDay(Date.now(), 0, 'first');

      if (dateValue) {
        dateMonthHandle(dateValue, 0);
        dateParseValue(dateValue);
      } else {
        dateNowHandle();
      }

      if (isDateTimeType) {
        reactData.datetimePanelValue = reactData.datePanelValue || ctor_amd_xe_utils_default.a.getWhatDay(Date.now(), 0, 'first');
        Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
          var timeBodyElem = refInputTimeBody.value;
          ctor_amd_xe_utils_default.a.arrayEach(timeBodyElem.querySelectorAll('li.is--selected'), updateTimePos);
        });
      }
    }; // 日期
    // 弹出面板


    var updateZindex = function updateZindex() {
      if (reactData.panelIndex < UtilTools.getLastZIndex()) {
        reactData.panelIndex = UtilTools.nextZIndex();
      }
    };

    var updatePlacement = function updatePlacement() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var transfer = props.transfer,
            placement = props.placement;
        var panelIndex = reactData.panelIndex;
        var targetElem = refInputTarget.value;
        var panelElem = refInputPanel.value;

        if (targetElem && panelElem) {
          var targetHeight = targetElem.offsetHeight;
          var targetWidth = targetElem.offsetWidth;
          var panelHeight = panelElem.offsetHeight;
          var panelWidth = panelElem.offsetWidth;
          var marginSize = 5;
          var panelStyle = {
            zIndex: panelIndex
          };

          var _DomTools$getAbsolute = DomTools.getAbsolutePos(targetElem),
              boundingTop = _DomTools$getAbsolute.boundingTop,
              boundingLeft = _DomTools$getAbsolute.boundingLeft,
              visibleHeight = _DomTools$getAbsolute.visibleHeight,
              visibleWidth = _DomTools$getAbsolute.visibleWidth;

          var panelPlacement = 'bottom';

          if (transfer) {
            var left = boundingLeft;
            var top = boundingTop + targetHeight;

            if (placement === 'top') {
              panelPlacement = 'top';
              top = boundingTop - panelHeight;
            } else if (!placement) {
              // 如果下面不够放，则向上
              if (top + panelHeight + marginSize > visibleHeight) {
                panelPlacement = 'top';
                top = boundingTop - panelHeight;
              } // 如果上面不够放，则向下（优先）


              if (top < marginSize) {
                panelPlacement = 'bottom';
                top = boundingTop + targetHeight;
              }
            } // 如果溢出右边


            if (left + panelWidth + marginSize > visibleWidth) {
              left -= left + panelWidth + marginSize - visibleWidth;
            } // 如果溢出左边


            if (left < marginSize) {
              left = marginSize;
            }

            Object.assign(panelStyle, {
              left: "".concat(left, "px"),
              top: "".concat(top, "px"),
              minWidth: "".concat(targetWidth, "px")
            });
          } else {
            if (placement === 'top') {
              panelPlacement = 'top';
              panelStyle.bottom = "".concat(targetHeight, "px");
            } else if (!placement) {
              // 如果下面不够放，则向上
              if (boundingTop + targetHeight + panelHeight > visibleHeight) {
                // 如果上面不够放，则向下（优先）
                if (boundingTop - targetHeight - panelHeight > marginSize) {
                  panelPlacement = 'top';
                  panelStyle.bottom = "".concat(targetHeight, "px");
                }
              }
            }
          }

          reactData.panelStyle = panelStyle;
          reactData.panelPlacement = panelPlacement;
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
        }
      });
    };

    var showPanel = function showPanel() {
      var disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel;
      var isDatePickerType = computeIsDatePickerType.value;

      if (!disabled && !visiblePanel) {
        if (!reactData.inited) {
          reactData.inited = true;
        }

        clearTimeout(hidePanelTimeout);
        reactData.isActivated = true;
        reactData.animatVisible = true;

        if (isDatePickerType) {
          dateOpenPanel();
        }

        setTimeout(function () {
          reactData.visiblePanel = true;
        }, 10);
        updateZindex();
        updatePlacement();
      }
    };

    var datePickerOpenEvent = function datePickerOpenEvent(evnt) {
      evnt.preventDefault();
      showPanel();
    };

    var clickEvent = function clickEvent(evnt) {
      var isDatePickerType = computeIsDatePickerType.value;

      if (isDatePickerType) {
        datePickerOpenEvent(evnt);
      }

      triggerEvent(evnt);
    }; // 弹出面板
    // 全局事件


    var handleGlobalMousedownEvent = function handleGlobalMousedownEvent(evnt) {
      var disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel,
          isActivated = reactData.isActivated;
      var isDatePickerType = computeIsDatePickerType.value;
      var el = refElem.value;
      var panelElem = refInputPanel.value;

      if (!disabled && isActivated) {
        reactData.isActivated = DomTools.getEventTargetNode(evnt, el).flag || DomTools.getEventTargetNode(evnt, panelElem).flag;

        if (!reactData.isActivated) {
          // 如果是日期类型
          if (isDatePickerType) {
            if (visiblePanel) {
              hidePanel();
              afterCheckValue();
            }
          } else {
            afterCheckValue();
          }
        }
      }
    };

    var handleGlobalKeydownEvent = function handleGlobalKeydownEvent(evnt) {
      var clearable = props.clearable,
          disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel;
      var isDatePickerType = computeIsDatePickerType.value;

      if (!disabled) {
        var keyCode = evnt.keyCode;
        var isTab = keyCode === 9;
        var isDel = keyCode === 46;
        var isEsc = keyCode === 27;
        var isEnter = keyCode === 13;
        var isLeftArrow = keyCode === 37;
        var isUpArrow = keyCode === 38;
        var isRightArrow = keyCode === 39;
        var isDwArrow = keyCode === 40;
        var isPgUp = keyCode === 33;
        var isPgDn = keyCode === 34;
        var operArrow = isLeftArrow || isUpArrow || isRightArrow || isDwArrow;
        var isActivated = reactData.isActivated;

        if (isTab) {
          if (isActivated) {
            afterCheckValue();
          }

          isActivated = false;
          reactData.isActivated = isActivated;
        } else if (operArrow) {
          if (isDatePickerType) {
            if (isActivated) {
              if (visiblePanel) {
                dateOffsetEvent(evnt);
              } else if (isUpArrow || isDwArrow) {
                evnt.preventDefault();
                showPanel();
              }
            }
          }
        } else if (isEnter) {
          if (isDatePickerType) {
            if (visiblePanel) {
              if (reactData.datePanelValue) {
                dateSelectItem(reactData.datePanelValue);
              } else {
                hidePanel();
              }
            } else if (isActivated) {
              showPanel();
            }
          }
        } else if (isPgUp || isPgDn) {
          if (isDatePickerType) {
            if (isActivated) {
              datePgOffsetEvent(evnt);
            }
          }
        }

        if (isTab || isEsc) {
          if (visiblePanel) {
            hidePanel();
          }
        } else if (isDel && clearable) {
          if (isActivated) {
            clearValueEvent(evnt, null);
          }
        }
      }
    };

    var handleGlobalMousewheelEvent = function handleGlobalMousewheelEvent(evnt) {
      var disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel;

      if (!disabled) {
        if (visiblePanel) {
          var panelElem = refInputPanel.value;

          if (DomTools.getEventTargetNode(evnt, panelElem).flag) {
            updatePlacement();
          } else {
            hidePanel();
            afterCheckValue();
          }
        }
      }
    };

    var handleGlobalBlurEvent = function handleGlobalBlurEvent() {
      var isActivated = reactData.isActivated,
          visiblePanel = reactData.visiblePanel;

      if (visiblePanel) {
        hidePanel();
        afterCheckValue();
      } else if (isActivated) {
        afterCheckValue();
      }
    };

    var renderInput = function renderInput(value) {
      var name = props.name,
          disabled = props.disabled,
          autocomplete = props.autocomplete;
      var isReadonly = computeIsReadonly.value;
      var inpMaxlength = computeInpMaxlength.value;
      var inputType = computeInputType.value;
      var inpPlaceholder = computeInpPlaceholder.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('input', {
        ref: refInputTarget,
        class: 'vxe-input--inner',
        value: value,
        name: name,
        type: inputType,
        placeholder: inpPlaceholder,
        maxlength: inpMaxlength,
        readonly: isReadonly,
        disabled: disabled,
        autocomplete: autocomplete,
        onKeydown: keydownEvent,
        onKeyup: keyupEvent,
        onMousewheel: mousewheelEvent,
        onClick: clickEvent,
        onInput: inputEvent,
        onFocus: focusEvent,
        onBlu: blurEvent
      });
    };

    var renderDefaultInput = function renderDefaultInput() {
      var modelValue = props.modelValue;
      return renderInput(modelValue);
    };

    var renderDateInput = function renderDateInput() {
      var inputValue = reactData.inputValue;
      return renderInput(inputValue);
    };

    var renderDateLabel = function renderDateLabel(item, label) {
      var festivalMethod = props.festivalMethod;

      if (festivalMethod) {
        var festivalRest = festivalMethod({
          type: reactData.datePanelType,
          date: item.date
        });
        var festivalItem = festivalRest ? ctor_amd_xe_utils_default.a.isString(festivalRest) ? {
          label: festivalRest
        } : festivalRest : {};
        var extraItem = festivalItem.extra ? ctor_amd_xe_utils_default.a.isString(festivalItem.extra) ? {
          label: festivalItem.extra
        } : festivalItem.extra : null;
        var labels = [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: ['vxe-input--date-label', {
            'is-notice': festivalItem.notice
          }]
        }, extraItem && extraItem.label ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', label), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: ['vxe-input--date-label--extra', extraItem.important ? 'is-important' : '', extraItem.className],
          style: extraItem.style
        }, ctor_amd_xe_utils_default.a.toString(extraItem.label))] : label)];
        var festivalLabel = festivalItem.label;

        if (festivalLabel) {
          // 默认最多支持3个节日重叠
          var festivalLabels = ctor_amd_xe_utils_default.a.toString(festivalLabel).split(',');
          labels.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: ['vxe-input--date-festival', festivalItem.important ? 'is-important' : '', festivalItem.className],
            style: festivalItem.style
          }, [festivalLabels.length > 1 ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: ['vxe-input--date-festival--overlap', "overlap--".concat(festivalLabels.length)]
          }, festivalLabels.map(function (label) {
            return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', label.substring(0, 3));
          })) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-input--date-festival--label'
          }, festivalLabels[0].substring(0, 3))]));
        }

        return labels;
      }

      return label;
    };

    var renderDateDayTable = function renderDateDayTable() {
      var datePanelType = reactData.datePanelType,
          datePanelValue = reactData.datePanelValue;
      var dateValue = computeDateValue.value;
      var dateHeaders = computeDateHeaders.value;
      var dayDatas = computeDayDatas.value;
      var matchFormat = 'yyyy-MM-dd';
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
        class: "vxe-input--date-".concat(datePanelType, "-view"),
        cellspacing: 0,
        cellpadding: 0,
        border: 0
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('thead', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', dateHeaders.map(function (item) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('th', item.label);
      }))]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tbody', dayDatas.map(function (rows) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', rows.map(function (item) {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', {
            class: {
              'is--prev': item.isPrev,
              'is--current': item.isCurrent,
              'is--now': item.isNow,
              'is--next': item.isNext,
              'is--disabled': isDateDisabled(item),
              'is--selected': ctor_amd_xe_utils_default.a.isDateSame(dateValue, item.date, matchFormat),
              'is--hover': ctor_amd_xe_utils_default.a.isDateSame(datePanelValue, item.date, matchFormat)
            },
            onClick: function onClick() {
              return dateSelectEvent(item);
            },
            onMouseenter: function onMouseenter() {
              return dateMouseenterEvent(item);
            }
          }, renderDateLabel(item, item.label));
        }));
      }))])];
    };

    var renderDateWeekTable = function renderDateWeekTable() {
      var datePanelType = reactData.datePanelType,
          datePanelValue = reactData.datePanelValue;
      var dateValue = computeDateValue.value;
      var weekHeaders = computeWeekHeaders.value;
      var weekDates = computeWeekDates.value;
      var matchFormat = 'yyyy-MM-dd';
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
        class: "vxe-input--date-".concat(datePanelType, "-view"),
        cellspacing: 0,
        cellpadding: 0,
        border: 0
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('thead', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', weekHeaders.map(function (item) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('th', item.label);
      }))]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tbody', weekDates.map(function (rows) {
        var isSelected = rows.some(function (item) {
          return ctor_amd_xe_utils_default.a.isDateSame(dateValue, item.date, matchFormat);
        });
        var isHover = rows.some(function (item) {
          return ctor_amd_xe_utils_default.a.isDateSame(datePanelValue, item.date, matchFormat);
        });
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', rows.map(function (item) {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', {
            class: {
              'is--prev': item.isPrev,
              'is--current': item.isCurrent,
              'is--now': item.isNow,
              'is--next': item.isNext,
              'is--disabled': isDateDisabled(item),
              'is--selected': isSelected,
              'is--hover': isHover
            },
            // event
            onClick: function onClick() {
              return dateSelectEvent(item);
            },
            onMouseenter: function onMouseenter() {
              return dateMouseenterEvent(item);
            }
          }, renderDateLabel(item, item.label));
        }));
      }))])];
    };

    var renderDateMonthTable = function renderDateMonthTable() {
      var datePanelType = reactData.datePanelType,
          datePanelValue = reactData.datePanelValue;
      var dateValue = computeDateValue.value;
      var monthDatas = computeMonthDatas.value;
      var matchFormat = 'yyyy-MM';
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
        class: "vxe-input--date-".concat(datePanelType, "-view"),
        cellspacing: 0,
        cellpadding: 0,
        border: 0
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tbody', monthDatas.map(function (rows) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', rows.map(function (item) {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', {
            class: {
              'is--prev': item.isPrev,
              'is--current': item.isCurrent,
              'is--now': item.isNow,
              'is--next': item.isNext,
              'is--disabled': isDateDisabled(item),
              'is--selected': ctor_amd_xe_utils_default.a.isDateSame(dateValue, item.date, matchFormat),
              'is--hover': ctor_amd_xe_utils_default.a.isDateSame(datePanelValue, item.date, matchFormat)
            },
            onClick: function onClick() {
              return dateSelectEvent(item);
            },
            onMouseenter: function onMouseenter() {
              return dateMouseenterEvent(item);
            }
          }, renderDateLabel(item, conf.i18n("vxe.input.date.months.m".concat(item.month))));
        }));
      }))])];
    };

    var renderDateYearTable = function renderDateYearTable() {
      var datePanelType = reactData.datePanelType,
          datePanelValue = reactData.datePanelValue;
      var dateValue = computeDateValue.value;
      var yearDatas = computeYearDatas.value;
      var matchFormat = 'yyyy';
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
        class: "vxe-input--date-".concat(datePanelType, "-view"),
        cellspacing: 0,
        cellpadding: 0,
        border: 0
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tbody', yearDatas.map(function (rows) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', rows.map(function (item) {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', {
            class: {
              'is--disabled': isDateDisabled(item),
              'is--current': item.isCurrent,
              'is--now': item.isNow,
              'is--selected': ctor_amd_xe_utils_default.a.isDateSame(dateValue, item.date, matchFormat),
              'is--hover': ctor_amd_xe_utils_default.a.isDateSame(datePanelValue, item.date, matchFormat)
            },
            onClick: function onClick() {
              return dateSelectEvent(item);
            },
            onMouseenter: function onMouseenter() {
              return dateMouseenterEvent(item);
            }
          }, renderDateLabel(item, item.year));
        }));
      }))])];
    };

    var renderDateTable = function renderDateTable() {
      var datePanelType = reactData.datePanelType;

      switch (datePanelType) {
        case 'week':
          return renderDateWeekTable();

        case 'month':
          return renderDateMonthTable();

        case 'year':
          return renderDateYearTable();
      }

      return renderDateDayTable();
    };

    var renderDatePanel = function renderDatePanel() {
      var datePanelType = reactData.datePanelType;
      var isDisabledPrevDateBtn = computeIsDisabledPrevDateBtn.value;
      var isDisabledNextDateBtn = computeIsDisabledNextDateBtn.value;
      var selectDatePanelLabel = computeSelectDatePanelLabel.value;
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-input--date-picker-header'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-input--date-picker-type-wrapper'
      }, [datePanelType === 'year' ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--date-picker-label'
      }, selectDatePanelLabel) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--date-picker-btn',
        onClick: dateToggleTypeEvent
      }, selectDatePanelLabel)]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-input--date-picker-btn-wrapper'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: ['vxe-input--date-picker-btn vxe-input--date-picker-prev-btn', {
          'is--disabled': isDisabledPrevDateBtn
        }],
        onClick: datePrevEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: 'vxe-icon--caret-left'
      })]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--date-picker-btn vxe-input--date-picker-current-btn',
        onClick: dateTodayMonthEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: 'vxe-icon--dot'
      })]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: ['vxe-input--date-picker-btn vxe-input--date-picker-next-btn', {
          'is--disabled': isDisabledNextDateBtn
        }],
        onClick: dateNextEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: 'vxe-icon--caret-right'
      })])])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-input--date-picker-body'
      }, renderDateTable())];
    };

    var renderTimePanel = function renderTimePanel() {
      var datetimePanelValue = reactData.datetimePanelValue;
      var dateTimeLabel = computeDateTimeLabel.value;
      var hourList = computeHourList.value;
      var minuteList = computeMinuteList.value;
      var secondList = computeSecondList.value;
      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-input--time-picker-header'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--time-picker-title'
      }, dateTimeLabel), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
        class: 'vxe-input--time-picker-confirm',
        type: 'button',
        onClick: dateConfirmEvent
      }, conf.i18n('vxe.button.confirm'))]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refInputTimeBody,
        class: 'vxe-input--time-picker-body'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
        class: 'vxe-input--time-picker-hour-list'
      }, hourList.map(function (item, index) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
          key: index,
          class: {
            'is--selected': datetimePanelValue && datetimePanelValue.getHours() === item.value
          },
          onClick: function onClick(evnt) {
            return dateHourEvent(evnt, item);
          }
        }, item.label);
      })), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
        class: 'vxe-input--time-picker-minute-list'
      }, minuteList.map(function (item, index) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
          key: index,
          class: {
            'is--selected': datetimePanelValue && datetimePanelValue.getMinutes() === item.value
          },
          onClick: function onClick(evnt) {
            return dateMinuteEvent(evnt, item);
          }
        }, item.label);
      })), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
        class: 'vxe-input--time-picker-second-list'
      }, secondList.map(function (item, index) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
          key: index,
          class: {
            'is--selected': datetimePanelValue && datetimePanelValue.getSeconds() === item.value
          },
          onClick: function onClick(evnt) {
            return dateSecondEvent(evnt, item);
          }
        }, item.label);
      }))])];
    };

    var renderPanel = function renderPanel() {
      var type = props.type,
          transfer = props.transfer;
      var inited = reactData.inited,
          animatVisible = reactData.animatVisible,
          visiblePanel = reactData.visiblePanel,
          panelPlacement = reactData.panelPlacement,
          panelStyle = reactData.panelStyle;
      var vSize = computeSize.value;
      var isDatePickerType = computeIsDatePickerType.value;
      var renders = [];

      if (isDatePickerType) {
        var _ref;

        if (type === 'datetime') {
          renders.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-input--panel-layout-wrapper'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-input--panel-left-wrapper'
          }, renderDatePanel()), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-input--panel-right-wrapper'
          }, renderTimePanel())]));
        } else if (type === 'time') {
          renders.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-input--panel-wrapper'
          }, renderTimePanel()));
        } else {
          renders.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-input--panel-wrapper'
          }, renderDatePanel()));
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(external_commonjs_vue_commonjs2_vue_root_Vue_["Teleport"], {
          to: 'body',
          disabled: transfer ? !inited : true
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refInputPanel,
          class: ['vxe-table--ignore-clear vxe-input--panel', "type--".concat(type), (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--transfer', transfer), _defineProperty(_ref, 'animat--leave', animatVisible), _defineProperty(_ref, 'animat--enter', visiblePanel), _ref)],
          'data-placement': panelPlacement,
          style: panelStyle
        }, renders)]);
      }

      return null;
    };

    var renderNumberIcon = function renderNumberIcon() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--number-suffix'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--number-prev is--prev',
        onMousedown: numberMousedownEvent,
        onMouseup: numberStopDown,
        onMouseleave: numberStopDown
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-input--number-prev-icon', conf.icon.INPUT_PREV_NUM]
      })]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--number-next is--next',
        onMousedown: numberMousedownEvent,
        onMouseup: numberStopDown,
        onMouseleave: numberStopDown
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-input--number-next-icon', conf.icon.INPUT_NEXT_NUM]
      })])]);
    };

    var renderDatePickerIcon = function renderDatePickerIcon() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--date-picker-suffix',
        onClick: datePickerOpenEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-input--date-picker-icon', conf.icon.INPUT_DATE]
      })]);
    };

    var renderSearchIcon = function renderSearchIcon() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--search-suffix',
        onClick: searchEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-input--search-icon', conf.icon.INPUT_SEARCH]
      })]);
    };

    var renderPasswordIcon = function renderPasswordIcon() {
      var showPwd = reactData.showPwd;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--password-suffix',
        onClick: passwordToggleEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-input--password-icon', showPwd ? conf.icon.INPUT_SHOW_PWD : conf.icon.INPUT_PWD]
      })]);
    };

    var rendePrefixIcon = function rendePrefixIcon() {
      var prefixIcon = props.prefixIcon;
      var icons = [];

      if (slots.prefix) {
        icons.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-input--prefix-icon'
        }, slots.prefix({})));
      } else if (prefixIcon) {
        icons.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-input--prefix-icon', prefixIcon]
        }));
      }

      return icons.length ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--prefix',
        onClick: clickPrefixEvent
      }, icons) : null;
    };

    var renderSuffixIcon = function renderSuffixIcon() {
      var modelValue = props.modelValue,
          disabled = props.disabled,
          suffixIcon = props.suffixIcon;
      var isClearable = computeIsClearable.value;
      var icons = [];

      if (slots.suffix) {
        icons.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-input--suffix-icon'
        }, slots.suffix({})));
      } else if (suffixIcon) {
        icons.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-input--suffix-icon', suffixIcon]
        }));
      }

      if (isClearable) {
        icons.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-input--clear-icon', conf.icon.INPUT_CLEAR]
        }));
      }

      return icons.length ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: ['vxe-input--suffix', {
          'is--clear': isClearable && !disabled && !(modelValue === '' || ctor_amd_xe_utils_default.a.eqNull(modelValue))
        }],
        onClick: clickSuffixEvent
      }, icons) : null;
    };

    var renderExtraSuffixIcon = function renderExtraSuffixIcon() {
      var controls = props.controls;
      var isNumType = computeIsNumType.value;
      var isDatePickerType = computeIsDatePickerType.value;
      var isPawdType = computeIsPawdType.value;
      var isSearchType = computeIsSearchType.value;
      var icons;

      if (controls) {
        if (isPawdType) {
          icons = renderPasswordIcon();
        } else if (isNumType) {
          icons = renderNumberIcon();
        } else if (isDatePickerType) {
          icons = renderDatePickerIcon();
        } else if (isSearchType) {
          icons = renderSearchIcon();
        }
      }

      return icons ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-input--extra-suffix'
      }, [icons]) : null;
    };

    inputMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $input: $xeinput,
          $event: evnt
        }, params));
      },
      focus: function focus() {
        var inputElem = refInputTarget.value;
        reactData.isActivated = true;
        inputElem.focus();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      blur: function blur() {
        var inputElem = refInputTarget.value;
        inputElem.blur();
        reactData.isActivated = false;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    Object.assign($xeinput, inputMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.modelValue;
    }, function () {
      changeValue();
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(computeDateLabelFormat, function () {
      dateParseValue(reactData.datePanelValue);
      reactData.inputValue = reactData.datePanelLabel;
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      GlobalEvent.on($xeinput, 'mousewheel', handleGlobalMousewheelEvent);
      GlobalEvent.on($xeinput, 'mousedown', handleGlobalMousedownEvent);
      GlobalEvent.on($xeinput, 'keydown', handleGlobalKeydownEvent);
      GlobalEvent.on($xeinput, 'blur', handleGlobalBlurEvent);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      numberStopDown();
      GlobalEvent.off($xeinput, 'mousewheel');
      GlobalEvent.off($xeinput, 'mousedown');
      GlobalEvent.off($xeinput, 'keydown');
      GlobalEvent.off($xeinput, 'blur');
    });
    initValue();

    var renderVN = function renderVN() {
      var _ref2;

      var controls = props.controls,
          type = props.type,
          align = props.align,
          disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel,
          isActivated = reactData.isActivated;
      var vSize = computeSize.value;
      var isDatePickerType = computeIsDatePickerType.value;
      var isReadonly = computeIsReadonly.value;
      var childs = [];
      var prefix = rendePrefixIcon();
      var suffix = renderSuffixIcon(); // 前缀图标

      if (prefix) {
        childs.push(prefix);
      } // 输入框


      childs.push(isDatePickerType ? renderDateInput() : renderDefaultInput()); // 后缀图标

      if (suffix) {
        childs.push(suffix);
      } // 特殊功能图标


      childs.push(renderExtraSuffixIcon()); // 面板容器

      if (isDatePickerType) {
        childs.push(renderPanel());
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-input', "type--".concat(type), (_ref2 = {}, _defineProperty(_ref2, "size--".concat(vSize), vSize), _defineProperty(_ref2, "is--".concat(align), align), _defineProperty(_ref2, 'is--controls', controls), _defineProperty(_ref2, 'is--prefix', !!prefix), _defineProperty(_ref2, 'is--suffix', !!suffix), _defineProperty(_ref2, 'is--readonly', isReadonly), _defineProperty(_ref2, 'is--visivle', visiblePanel), _defineProperty(_ref2, 'is--disabled', disabled), _defineProperty(_ref2, 'is--active', isActivated), _ref2)]
      }, childs);
    };

    $xeinput.renderVN = renderVN;
    return $xeinput;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/input/index.ts


var Input = {
  install: function install(app) {
    app.component(input.name, input);
  }
};
/* harmony default export */ var packages_input = (Input);
// CONCATENATED MODULE: ./packages/textarea/src/textarea.ts












var autoTxtElem = document.createElement('div');
/* harmony default export */ var src_textarea = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTextarea',
  props: {
    modelValue: [String, Number],
    name: String,
    readonly: Boolean,
    disabled: Boolean,
    placeholder: String,
    maxlength: [String, Number],
    rows: {
      type: [String, Number],
      default: 2
    },
    showWordCount: Boolean,
    autosize: [Boolean, Object],
    form: String,
    resize: {
      type: String,
      default: function _default() {
        return conf.textarea.resize;
      }
    },
    size: {
      type: String,
      default: function _default() {
        return conf.textarea.size || conf.size;
      }
    }
  },
  emits: ['update:modelValue', 'input', 'change', 'focus', 'blur'],
  setup: function setup(props, context) {
    var emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var $xetextarea = {
      xID: xID,
      props: props,
      context: context
    };
    var refTextarea = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var textareaMethods = {};
    var computeInputCount = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return ctor_amd_xe_utils_default.a.getSize(props.modelValue);
    });
    var computeIsCountError = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var inputCount = computeInputCount.value;
      return props.maxlength && inputCount > ctor_amd_xe_utils_default.a.toNumber(props.maxlength);
    });
    var computeSizeOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({
        minRows: 1,
        maxRows: 10
      }, conf.textarea.autosize, props.autosize);
    });

    var updateAutoTxt = function updateAutoTxt() {
      var modelValue = props.modelValue,
          size = props.size,
          autosize = props.autosize;

      if (autosize) {
        if (!autoTxtElem.parentNode) {
          document.body.appendChild(autoTxtElem);
        }

        var textElem = refTextarea.value;
        var textStyle = getComputedStyle(textElem);
        autoTxtElem.className = ['vxe-textarea--autosize', size ? "size--".concat(size) : ''].join(' ');
        autoTxtElem.style.width = "".concat(textElem.clientWidth, "px");
        autoTxtElem.style.padding = textStyle.padding;
        autoTxtElem.innerHTML = ('' + (modelValue || '　')).replace(/\n$/, '\n　');
      }
    };

    var handleResize = function handleResize() {
      if (props.autosize) {
        Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
          var sizeOpts = computeSizeOpts.value;
          var minRows = sizeOpts.minRows,
              maxRows = sizeOpts.maxRows;
          var textElem = refTextarea.value;
          var sizeHeight = autoTxtElem.clientHeight;
          var textStyle = getComputedStyle(textElem);
          var lineHeight = ctor_amd_xe_utils_default.a.toNumber(textStyle.lineHeight);
          var paddingTop = ctor_amd_xe_utils_default.a.toNumber(textStyle.paddingTop);
          var paddingBottom = ctor_amd_xe_utils_default.a.toNumber(textStyle.paddingBottom);
          var borderTopWidth = ctor_amd_xe_utils_default.a.toNumber(textStyle.borderTopWidth);
          var borderBottomWidth = ctor_amd_xe_utils_default.a.toNumber(textStyle.borderBottomWidth);
          var intervalHeight = paddingTop + paddingBottom + borderTopWidth + borderBottomWidth;
          var rowNum = (sizeHeight - intervalHeight) / lineHeight;
          var textRows = rowNum && /[0-9]/.test('' + rowNum) ? rowNum : Math.floor(rowNum) + 1;
          var vaildRows = textRows;

          if (textRows < minRows) {
            vaildRows = minRows;
          } else if (textRows > maxRows) {
            vaildRows = maxRows;
          }

          textElem.style.height = "".concat(vaildRows * lineHeight + intervalHeight, "px");
        });
      }
    };

    var inputEvent = function inputEvent(evnt) {
      var textElem = evnt.target;
      var value = textElem.value;
      var isChange = props.modelValue !== value;
      emit('update:modelValue', value);
      $xetextarea.dispatchEvent('input', {
        value: value
      }, evnt);

      if (isChange) {
        $xetextarea.dispatchEvent('change', {
          value: value
        }, evnt);
      }

      handleResize();
    };

    var triggerEvent = function triggerEvent(evnt) {
      $xetextarea.dispatchEvent(evnt.type, {
        value: props.modelValue
      }, evnt);
    };

    textareaMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $textarea: $xetextarea,
          $event: evnt
        }, params));
      },
      focus: function focus() {
        var textElem = refTextarea.value;
        textElem.focus();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      blur: function blur() {
        var textElem = refTextarea.value;
        textElem.blur();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    Object.assign($xetextarea, textareaMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.modelValue;
    }, updateAutoTxt);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      if (props.modelValue) {
        updateAutoTxt();
        handleResize();
      }
    });

    var renderVN = function renderVN() {
      var _ref;

      var resize = props.resize,
          placeholder = props.placeholder,
          disabled = props.disabled,
          maxlength = props.maxlength,
          autosize = props.autosize,
          showWordCount = props.showWordCount;
      var vSize = computeSize.value;
      var isCountError = computeIsCountError.value;
      var inputCount = computeInputCount.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: ['vxe-textarea', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--autosize', autosize), _defineProperty(_ref, 'is--disabled', disabled), _ref)]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('textarea', {
        ref: refTextarea,
        class: 'vxe-textarea--inner',
        value: props.modelValue,
        name: props.name,
        placeholder: placeholder ? UtilTools.getFuncText(placeholder) : null,
        maxlength: maxlength,
        readonly: props.readonly,
        disabled: disabled,
        style: resize ? {
          resize: resize
        } : null,
        onInput: inputEvent,
        onFocus: triggerEvent,
        onBlur: triggerEvent
      }), showWordCount ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: ['vxe-textarea--count', {
          'is--error': isCountError
        }]
      }, "".concat(inputCount).concat(maxlength ? "/".concat(maxlength) : '')) : null]);
    };

    $xetextarea.renderVN = renderVN;
    return $xetextarea;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/textarea/index.ts


var Textarea = {
  install: function install(app) {
    app.component(src_textarea.name, src_textarea);
  }
};
/* harmony default export */ var packages_textarea = (Textarea);
// CONCATENATED MODULE: ./packages/button/src/button.ts










/* harmony default export */ var button_src_button = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeButton',
  props: {
    /**
     * 按钮类型
     */
    type: String,

    /**
     * 按钮尺寸
     */
    size: {
      type: String,
      default: function _default() {
        return conf.button.size || conf.size;
      }
    },

    /**
     * 用来标识这一项
     */
    name: [String, Number],

    /**
     * 按钮内容
     */
    content: String,

    /**
     * 固定显示下拉面板的方向
     */
    placement: String,

    /**
     * 按钮状态
     */
    status: String,

    /**
     * 按钮的图标
     */
    icon: String,

    /**
     * 圆角边框
     */
    round: Boolean,

    /**
     * 圆角按钮
     */
    circle: Boolean,

    /**
     * 是否禁用
     */
    disabled: Boolean,

    /**
     * 是否加载中
     */
    loading: Boolean,

    /**
     * 在下拉面板关闭时销毁内容
     */
    destroyOnClose: Boolean,

    /**
     * 是否将弹框容器插入于 body 内
     */
    transfer: {
      type: Boolean,
      default: function _default() {
        return conf.button.transfer;
      }
    }
  },
  emits: ['click', 'dropdown-click'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      inited: false,
      showPanel: false,
      animatVisible: false,
      panelIndex: 0,
      panelStyle: {},
      panelPlacement: ''
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refButton = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refBtnPanel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xebutton = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData,
      refMaps: refMaps
    };
    var buttonMethods = {};
    var computeIsFormBtn = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type;

      if (type) {
        return ['submit', 'reset', 'button'].indexOf(type) > -1;
      }

      return false;
    });
    var computeBtnType = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var type = props.type;
      return type && type === 'text' ? type : 'button';
    });

    var updateZindex = function updateZindex() {
      if (reactData.panelIndex < UtilTools.getLastZIndex()) {
        reactData.panelIndex = UtilTools.nextZIndex();
      }
    };

    var updatePlacement = function updatePlacement() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var transfer = props.transfer,
            placement = props.placement;
        var panelIndex = reactData.panelIndex;
        var targetElem = refButton.value;
        var panelElem = refBtnPanel.value;

        if (panelElem && targetElem) {
          var targetHeight = targetElem.offsetHeight;
          var targetWidth = targetElem.offsetWidth;
          var panelHeight = panelElem.offsetHeight;
          var panelWidth = panelElem.offsetWidth;
          var marginSize = 5;
          var panelStyle = {
            zIndex: panelIndex
          };

          var _DomTools$getAbsolute = DomTools.getAbsolutePos(targetElem),
              boundingTop = _DomTools$getAbsolute.boundingTop,
              boundingLeft = _DomTools$getAbsolute.boundingLeft,
              visibleHeight = _DomTools$getAbsolute.visibleHeight,
              visibleWidth = _DomTools$getAbsolute.visibleWidth;

          var panelPlacement = 'bottom';

          if (transfer) {
            var left = boundingLeft;
            var top = boundingTop + targetHeight;

            if (placement === 'top') {
              panelPlacement = 'top';
              top = boundingTop - panelHeight;
            } else if (!placement) {
              // 如果下面不够放，则向上
              if (top + panelHeight + marginSize > visibleHeight) {
                panelPlacement = 'top';
                top = boundingTop - panelHeight;
              } // 如果上面不够放，则向下（优先）


              if (top < marginSize) {
                panelPlacement = 'bottom';
                top = boundingTop + targetHeight;
              }
            } // 如果溢出右边


            if (left + panelWidth + marginSize > visibleWidth) {
              left -= left + panelWidth + marginSize - visibleWidth;
            } // 如果溢出左边


            if (left < marginSize) {
              left = marginSize;
            }

            Object.assign(panelStyle, {
              left: "".concat(left, "px"),
              top: "".concat(top, "px"),
              minWidth: "".concat(targetWidth, "px")
            });
          } else {
            if (placement === 'top') {
              panelPlacement = 'top';
              panelStyle.bottom = "".concat(targetHeight, "px");
            } else if (!placement) {
              // 如果下面不够放，则向上
              if (boundingTop + targetHeight + panelHeight > visibleHeight) {
                // 如果上面不够放，则向下（优先）
                if (boundingTop - targetHeight - panelHeight > marginSize) {
                  panelPlacement = 'top';
                  panelStyle.bottom = "".concat(targetHeight, "px");
                }
              }
            }
          }

          reactData.panelStyle = panelStyle;
          reactData.panelPlacement = panelPlacement;
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
        }
      });
    };

    var clickEvent = function clickEvent(evnt) {
      buttonMethods.dispatchEvent('click', {
        $event: evnt
      }, evnt);
    };

    var clickDropdownEvent = function clickDropdownEvent(evnt) {
      var dropdownElem = evnt.currentTarget;
      var panelElem = refBtnPanel.value;

      var _DomTools$getEventTar = DomTools.getEventTargetNode(evnt, dropdownElem, 'vxe-button'),
          flag = _DomTools$getEventTar.flag,
          targetElem = _DomTools$getEventTar.targetElem;

      if (flag) {
        panelElem.dataset.active = 'N';
        reactData.showPanel = false;
        setTimeout(function () {
          if (panelElem.dataset.active !== 'Y') {
            reactData.animatVisible = false;
          }
        }, 350);
        buttonMethods.dispatchEvent('dropdown-click', {
          name: targetElem.getAttribute('name'),
          $event: evnt
        }, evnt);
      }
    };

    var mouseenterEvent = function mouseenterEvent() {
      var panelElem = refBtnPanel.value;

      if (!reactData.inited) {
        reactData.inited = true;
      }

      panelElem.dataset.active = 'Y';
      reactData.animatVisible = true;
      setTimeout(function () {
        if (panelElem.dataset.active === 'Y') {
          reactData.showPanel = true;
          updateZindex();
          updatePlacement();
        }
      }, 10);
    };

    var mouseleaveEvent = function mouseleaveEvent() {
      var panelElem = refBtnPanel.value;
      panelElem.dataset.active = 'N';
      setTimeout(function () {
        if (panelElem.dataset.active !== 'Y') {
          reactData.showPanel = false;
          setTimeout(function () {
            if (panelElem.dataset.active !== 'Y') {
              reactData.animatVisible = false;
            }
          }, 350);
        }
      }, 100);
    };

    var renderContent = function renderContent() {
      var content = props.content,
          icon = props.icon,
          loading = props.loading;
      var contVNs = [];

      if (loading) {
        contVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-button--loading-icon', conf.icon.BUTTON_LOADING]
        }));
      } else if (icon) {
        contVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-button--icon', icon]
        }));
      }

      if (slots.default) {
        contVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-button--content'
        }, slots.default({})));
      } else if (content) {
        contVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-button--content'
        }, UtilTools.getFuncText(content)));
      }

      return contVNs;
    };

    buttonMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $button: $xebutton,
          $event: evnt
        }, params));
      },
      focus: function focus() {
        var btnElem = refButton.value;
        btnElem.focus();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      blur: function blur() {
        var btnElem = refButton.value;
        btnElem.blur();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    Object.assign($xebutton, buttonMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onBeforeMount"])(function () {
      GlobalEvent.on($xebutton, 'mousewheel', function (evnt) {
        var panelElem = refBtnPanel.value;

        if (reactData.showPanel && !DomTools.getEventTargetNode(evnt, panelElem).flag) {
          updatePlacement();
        }
      });
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      GlobalEvent.off($xebutton, 'mousewheel');
    });

    var renderVN = function renderVN() {
      var _ref4;

      var transfer = props.transfer,
          type = props.type,
          round = props.round,
          circle = props.circle,
          destroyOnClose = props.destroyOnClose,
          status = props.status,
          name = props.name,
          disabled = props.disabled,
          loading = props.loading;
      var inited = reactData.inited,
          showPanel = reactData.showPanel;
      var isFormBtn = computeIsFormBtn.value;
      var btnType = computeBtnType.value;
      var vSize = computeSize.value;

      if (slots.dropdowns) {
        var _ref, _ref2, _ref3;

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refElem,
          class: ['vxe-button--dropdown', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--active', showPanel), _ref)]
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
          ref: refButton,
          class: ['vxe-button', "type--".concat(btnType), (_ref2 = {}, _defineProperty(_ref2, "size--".concat(vSize), vSize), _defineProperty(_ref2, "theme--".concat(status), status), _defineProperty(_ref2, 'is--round', round), _defineProperty(_ref2, 'is--circle', circle), _defineProperty(_ref2, 'is--disabled', disabled || loading), _defineProperty(_ref2, 'is--loading', loading), _ref2)],
          name: name,
          type: isFormBtn ? type : 'button',
          disabled: disabled || loading,
          onMouseenter: mouseenterEvent,
          onMouseleave: mouseleaveEvent,
          onClick: clickEvent
        }, renderContent().concat([Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: "vxe-button--dropdown-arrow ".concat(conf.icon.BUTTON_DROPDOWN)
        })])), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(external_commonjs_vue_commonjs2_vue_root_Vue_["Teleport"], {
          to: 'body',
          disabled: transfer ? !inited : true
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          ref: refBtnPanel,
          class: ['vxe-button--dropdown-panel', (_ref3 = {}, _defineProperty(_ref3, "size--".concat(vSize), vSize), _defineProperty(_ref3, 'animat--leave', reactData.animatVisible), _defineProperty(_ref3, 'animat--enter', showPanel), _ref3)],
          'data-placement': reactData.panelPlacement,
          style: reactData.panelStyle
        }, inited ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-button--dropdown-wrapper',
          onClick: clickDropdownEvent,
          onMouseenter: mouseenterEvent,
          onMouseleave: mouseleaveEvent
        }, destroyOnClose && !showPanel ? [] : slots.dropdowns({}))] : [])])]);
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
        ref: refButton,
        class: ['vxe-button', "type--".concat(btnType), (_ref4 = {}, _defineProperty(_ref4, "size--".concat(vSize), vSize), _defineProperty(_ref4, "theme--".concat(status), status), _defineProperty(_ref4, 'is--round', round), _defineProperty(_ref4, 'is--circle', circle), _defineProperty(_ref4, 'is--disabled', disabled || loading), _defineProperty(_ref4, 'is--loading', loading), _ref4)],
        name: name,
        type: isFormBtn ? type : 'button',
        disabled: disabled || loading,
        onClick: clickEvent
      }, renderContent());
    };

    $xebutton.renderVN = renderVN;
    return $xebutton;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/button/index.ts


var Button = {
  install: function install(app) {
    app.component(button_src_button.name, button_src_button);
  }
};
/* harmony default export */ var packages_button = (Button);
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js






function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
// CONCATENATED MODULE: ./packages/modal/src/modal.ts




















var allActivedModals = [];
var msgQueue = [];
/* harmony default export */ var modal = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeModal',
  props: {
    modelValue: Boolean,
    id: String,
    type: {
      type: String,
      default: 'modal'
    },
    loading: {
      type: Boolean,
      default: null
    },
    status: String,
    iconStatus: String,
    className: String,
    top: {
      type: [Number, String],
      default: 15
    },
    position: [String, Object],
    title: String,
    duration: {
      type: [Number, String],
      default: function _default() {
        return conf.modal.duration;
      }
    },
    message: String,
    cancelButtonText: String,
    confirmButtonText: String,
    lockView: {
      type: Boolean,
      default: function _default() {
        return conf.modal.lockView;
      }
    },
    lockScroll: Boolean,
    mask: {
      type: Boolean,
      default: function _default() {
        return conf.modal.mask;
      }
    },
    maskClosable: Boolean,
    escClosable: Boolean,
    resize: Boolean,
    showHeader: {
      type: Boolean,
      default: true
    },
    showFooter: Boolean,
    dblclickZoom: {
      type: Boolean,
      default: function _default() {
        return conf.modal.dblclickZoom;
      }
    },
    width: [Number, String],
    height: [Number, String],
    minWidth: {
      type: [Number, String],
      default: function _default() {
        return conf.modal.minWidth;
      }
    },
    minHeight: {
      type: [Number, String],
      default: function _default() {
        return conf.modal.minHeight;
      }
    },
    zIndex: Number,
    marginSize: {
      type: [Number, String],
      default: conf.modal.marginSize
    },
    fullscreen: Boolean,
    remember: {
      type: Boolean,
      default: function _default() {
        return conf.modal.remember;
      }
    },
    destroyOnClose: Boolean,
    showTitleOverflow: {
      type: Boolean,
      default: function _default() {
        return conf.modal.showTitleOverflow;
      }
    },
    transfer: {
      type: Boolean,
      default: function _default() {
        return conf.modal.transfer;
      }
    },
    storage: {
      type: Boolean,
      default: function _default() {
        return conf.modal.storage;
      }
    },
    storageKey: {
      type: String,
      default: function _default() {
        return conf.modal.storageKey;
      }
    },
    animat: {
      type: Boolean,
      default: function _default() {
        return conf.modal.animat;
      }
    },
    size: {
      type: String,
      default: function _default() {
        return conf.modal.size || conf.size;
      }
    },
    beforeHideMethod: Function,
    slots: Object
  },
  emits: ['update:modelValue', 'show', 'hide', 'close', 'confirm', 'cancel', 'zoom'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      inited: false,
      visible: false,
      contentVisible: false,
      modalTop: 0,
      modalZindex: 0,
      zoomLocat: null,
      firstOpen: false
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refModalBox = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refConfirmBtn = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refCancelBtn = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xemodal = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData,
      refMaps: refMaps
    };
    var modalMethods = {};
    var computeIsMsg = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.type === 'message';
    });

    var getBox = function getBox() {
      var boxElem = refModalBox.value;
      return boxElem;
    };

    var recalculate = function recalculate() {
      var width = props.width,
          height = props.height;
      var boxElem = getBox();
      boxElem.style.width = width ? UtilTools.isNumVal(width) ? "".concat(width, "px") : width : '';
      boxElem.style.height = height ? UtilTools.isNumVal(height) ? "".concat(height, "px") : height : '';
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var updateZindex = function updateZindex() {
      var zIndex = props.zIndex;
      var modalZindex = reactData.modalZindex;

      if (zIndex) {
        reactData.modalZindex = zIndex;
      } else if (modalZindex < UtilTools.getLastZIndex()) {
        reactData.modalZindex = UtilTools.nextZIndex();
      }
    };

    var updatePosition = function updatePosition() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var position = props.position;
        var marginSize = ctor_amd_xe_utils_default.a.toNumber(props.marginSize);
        var boxElem = getBox();
        var clientVisibleWidth = document.documentElement.clientWidth || document.body.clientWidth;
        var clientVisibleHeight = document.documentElement.clientHeight || document.body.clientHeight;
        var isPosCenter = position === 'center';

        var _ref = isPosCenter ? {
          top: position,
          left: position
        } : Object.assign({}, position),
            top = _ref.top,
            left = _ref.left;

        var topCenter = isPosCenter || top === 'center';
        var leftCenter = isPosCenter || left === 'center';
        var posTop = '';
        var posLeft = '';

        if (left && !leftCenter) {
          posLeft = isNaN(left) ? left : "".concat(left, "px");
        } else {
          posLeft = "".concat(Math.max(marginSize, clientVisibleWidth / 2 - boxElem.offsetWidth / 2), "px");
        }

        if (top && !topCenter) {
          posTop = isNaN(top) ? top : "".concat(top, "px");
        } else {
          posTop = "".concat(Math.max(marginSize, clientVisibleHeight / 2 - boxElem.offsetHeight / 2), "px");
        }

        boxElem.style.top = posTop;
        boxElem.style.left = posLeft;
      });
    };

    var updateStyle = function updateStyle() {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        var offsetTop = 0;
        msgQueue.forEach(function (comp) {
          var boxElem = comp.getBox();
          offsetTop += ctor_amd_xe_utils_default.a.toNumber(comp.props.top);
          comp.reactData.modalTop = offsetTop;
          offsetTop += boxElem.clientHeight;
        });
      });
    };

    var removeMsgQueue = function removeMsgQueue() {
      if (msgQueue.indexOf($xemodal) > -1) {
        ctor_amd_xe_utils_default.a.remove(msgQueue, function (comp) {
          return comp === $xemodal;
        });
      }

      updateStyle();
    };

    var closeModal = function closeModal(type) {
      var remember = props.remember,
          beforeHideMethod = props.beforeHideMethod;
      var visible = reactData.visible;
      var isMsg = computeIsMsg.value;
      var params = {
        type: type
      };

      if (visible) {
        Promise.resolve(beforeHideMethod ? beforeHideMethod(params) : null).then(function (rest) {
          if (!ctor_amd_xe_utils_default.a.isError(rest)) {
            if (isMsg) {
              removeMsgQueue();
            }

            reactData.contentVisible = false;

            if (!remember) {
              reactData.zoomLocat = null;
            }

            ctor_amd_xe_utils_default.a.remove(allActivedModals, function (item) {
              return item === $xemodal;
            });
            setTimeout(function () {
              reactData.visible = false;
              emit('update:modelValue', false);
              modalMethods.dispatchEvent('hide', params);
            }, 200);
          }
        }).catch(function (e) {
          return e;
        });
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var closeEvent = function closeEvent(evnt) {
      var type = 'close';
      modalMethods.dispatchEvent(type, {
        type: type
      }, evnt);
      closeModal(type);
    };

    var confirmEvent = function confirmEvent(evnt) {
      var type = 'confirm';
      modalMethods.dispatchEvent(type, {
        type: type
      }, evnt);
      closeModal(type);
    };

    var cancelEvent = function cancelEvent(evnt) {
      var type = 'cancel';
      modalMethods.dispatchEvent(type, {
        type: type
      }, evnt);
      closeModal(type);
    };

    var getStorageMap = function getStorageMap(key) {
      var version = conf.version;
      var rest = ctor_amd_xe_utils_default.a.toStringJSON(localStorage.getItem(key) || '');
      return rest && rest._v === version ? rest : {
        _v: version
      };
    };

    var hasPosStorage = function hasPosStorage() {
      var id = props.id,
          remember = props.remember,
          storage = props.storage,
          storageKey = props.storageKey;
      return !!(id && remember && storage && getStorageMap(storageKey)[id]);
    };

    var restorePosStorage = function restorePosStorage() {
      var id = props.id,
          remember = props.remember,
          storage = props.storage,
          storageKey = props.storageKey;

      if (id && remember && storage) {
        var posStorage = getStorageMap(storageKey)[id];

        if (posStorage) {
          var boxElem = getBox();

          var _posStorage$split = posStorage.split(','),
              _posStorage$split2 = _slicedToArray(_posStorage$split, 8),
              left = _posStorage$split2[0],
              top = _posStorage$split2[1],
              width = _posStorage$split2[2],
              height = _posStorage$split2[3],
              zoomLeft = _posStorage$split2[4],
              zoomTop = _posStorage$split2[5],
              zoomWidth = _posStorage$split2[6],
              zoomHeight = _posStorage$split2[7];

          if (left) {
            boxElem.style.left = "".concat(left, "px");
          }

          if (top) {
            boxElem.style.top = "".concat(top, "px");
          }

          if (width) {
            boxElem.style.width = "".concat(width, "px");
          }

          if (height) {
            boxElem.style.height = "".concat(height, "px");
          }

          if (zoomLeft && zoomTop) {
            reactData.zoomLocat = {
              left: zoomLeft,
              top: zoomTop,
              width: zoomWidth,
              height: zoomHeight
            };
          }
        }
      }
    };

    var addMsgQueue = function addMsgQueue() {
      if (msgQueue.indexOf($xemodal) === -1) {
        msgQueue.push($xemodal);
      }

      updateStyle();
    };

    var savePosStorage = function savePosStorage() {
      var id = props.id,
          remember = props.remember,
          storage = props.storage,
          storageKey = props.storageKey;
      var zoomLocat = reactData.zoomLocat;

      if (id && remember && storage) {
        var boxElem = getBox();
        var posStorageMap = getStorageMap(storageKey);
        posStorageMap[id] = [boxElem.style.left, boxElem.style.top, boxElem.style.width, boxElem.style.height].concat(zoomLocat ? [zoomLocat.left, zoomLocat.top, zoomLocat.width, zoomLocat.height] : []).map(function (val) {
          return val ? ctor_amd_xe_utils_default.a.toNumber(val) : '';
        }).join(',');
        localStorage.setItem(storageKey, ctor_amd_xe_utils_default.a.toJSONString(posStorageMap));
      }
    };

    var maximize = function maximize() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        if (props.resize && !reactData.zoomLocat) {
          var marginSize = ctor_amd_xe_utils_default.a.toNumber(props.marginSize);
          var boxElem = getBox();

          var _DomTools$getDomNode = DomTools.getDomNode(),
              visibleHeight = _DomTools$getDomNode.visibleHeight,
              visibleWidth = _DomTools$getDomNode.visibleWidth;

          reactData.zoomLocat = {
            top: boxElem.offsetTop,
            left: boxElem.offsetLeft,
            width: boxElem.offsetWidth + (boxElem.style.width ? 0 : 1),
            height: boxElem.offsetHeight + (boxElem.style.height ? 0 : 1)
          };
          Object.assign(boxElem.style, {
            top: "".concat(marginSize, "px"),
            left: "".concat(marginSize, "px"),
            width: "".concat(visibleWidth - marginSize * 2, "px"),
            height: "".concat(visibleHeight - marginSize * 2, "px")
          });
          savePosStorage();
        }
      });
    };

    var openModal = function openModal() {
      var duration = props.duration,
          remember = props.remember,
          showFooter = props.showFooter;
      var inited = reactData.inited,
          visible = reactData.visible;
      var isMsg = computeIsMsg.value;

      if (!inited) {
        reactData.inited = true;
      }

      if (!visible) {
        if (!remember) {
          recalculate();
        }

        reactData.visible = true;
        reactData.contentVisible = false;
        updateZindex();
        allActivedModals.push($xemodal);
        setTimeout(function () {
          reactData.contentVisible = true;
          Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
            if (showFooter) {
              var confirmBtn = refConfirmBtn.value;
              var cancelBtn = refCancelBtn.value;
              var operBtn = confirmBtn || cancelBtn;

              if (operBtn) {
                operBtn.focus();
              }
            }

            var type = '';
            var params = {
              type: type
            };
            emit('update:modelValue', true);
            modalMethods.dispatchEvent('show', params);
          });
        }, 10);

        if (isMsg) {
          addMsgQueue();

          if (duration !== -1) {
            setTimeout(function () {
              return closeModal('close');
            }, ctor_amd_xe_utils_default.a.toNumber(duration));
          }
        } else {
          Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
            var fullscreen = props.fullscreen;
            var firstOpen = reactData.firstOpen;

            if (!remember || !firstOpen) {
              updatePosition().then(function () {
                setTimeout(function () {
                  return updatePosition();
                }, 20);
              });
            }

            if (!firstOpen) {
              reactData.firstOpen = true;

              if (hasPosStorage()) {
                restorePosStorage();
              } else if (fullscreen) {
                Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
                  return maximize();
                });
              }
            }
          });
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var selfClickEvent = function selfClickEvent(evnt) {
      var el = refElem.value;

      if (props.maskClosable && evnt.target === el) {
        var type = 'mask';
        closeModal(type);
      }
    };

    var handleGlobalKeydownEvent = function handleGlobalKeydownEvent(evnt) {
      if (evnt.keyCode === 27) {
        var lastModal = ctor_amd_xe_utils_default.a.max(allActivedModals, function (item) {
          return item.reactData.modalZindex;
        }); // 多个时，只关掉最上层的窗口

        if (lastModal) {
          setTimeout(function () {
            if (lastModal === $xemodal && lastModal.props.escClosable) {
              closeModal('keydown');
            }
          }, 10);
        }
      }
    };

    var isMaximized = function isMaximized() {
      return !!reactData.zoomLocat;
    };

    var revert = function revert() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var zoomLocat = reactData.zoomLocat;

        if (zoomLocat) {
          var boxElem = getBox();
          reactData.zoomLocat = null;
          Object.assign(boxElem.style, {
            top: "".concat(zoomLocat.top, "px"),
            left: "".concat(zoomLocat.left, "px"),
            width: "".concat(zoomLocat.width, "px"),
            height: "".concat(zoomLocat.height, "px")
          });
          savePosStorage();
        }
      });
    };

    var zoom = function zoom() {
      if (reactData.zoomLocat) {
        return revert().then(function () {
          return isMaximized();
        });
      }

      return maximize().then(function () {
        return isMaximized();
      });
    };

    var toggleZoomEvent = function toggleZoomEvent(evnt) {
      var zoomLocat = reactData.zoomLocat;
      var params = {
        type: zoomLocat ? 'revert' : 'max'
      };
      return zoom().then(function () {
        modalMethods.dispatchEvent('zoom', params, evnt);
      });
    };

    var getPosition = function getPosition() {
      var isMsg = computeIsMsg.value;

      if (!isMsg) {
        var boxElem = getBox();

        if (boxElem) {
          return {
            top: boxElem.offsetTop,
            left: boxElem.offsetLeft
          };
        }
      }

      return null;
    };

    var setPosition = function setPosition(top, left) {
      var isMsg = computeIsMsg.value;

      if (!isMsg) {
        var boxElem = getBox();

        if (ctor_amd_xe_utils_default.a.isNumber(top)) {
          boxElem.style.top = "".concat(top, "px");
        }

        if (ctor_amd_xe_utils_default.a.isNumber(left)) {
          boxElem.style.left = "".concat(left, "px");
        }
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var boxMousedownEvent = function boxMousedownEvent() {
      var modalZindex = reactData.modalZindex;

      if (allActivedModals.some(function (comp) {
        return comp.reactData.visible && comp.reactData.modalZindex > modalZindex;
      })) {
        updateZindex();
      }
    };

    var mousedownEvent = function mousedownEvent(evnt) {
      var remember = props.remember,
          storage = props.storage;
      var zoomLocat = reactData.zoomLocat;
      var marginSize = ctor_amd_xe_utils_default.a.toNumber(props.marginSize);
      var boxElem = getBox();

      if (!zoomLocat && evnt.button === 0 && !DomTools.getEventTargetNode(evnt, boxElem, 'trigger--btn').flag) {
        evnt.preventDefault();
        var domMousemove = document.onmousemove;
        var domMouseup = document.onmouseup;
        var disX = evnt.clientX - boxElem.offsetLeft;
        var disY = evnt.clientY - boxElem.offsetTop;

        var _DomTools$getDomNode2 = DomTools.getDomNode(),
            visibleHeight = _DomTools$getDomNode2.visibleHeight,
            visibleWidth = _DomTools$getDomNode2.visibleWidth;

        document.onmousemove = function (evnt) {
          evnt.preventDefault();
          var offsetWidth = boxElem.offsetWidth;
          var offsetHeight = boxElem.offsetHeight;
          var minX = marginSize;
          var maxX = visibleWidth - offsetWidth - marginSize - 1;
          var minY = marginSize;
          var maxY = visibleHeight - offsetHeight - marginSize - 1;
          var left = evnt.clientX - disX;
          var top = evnt.clientY - disY;

          if (left > maxX) {
            left = maxX;
          }

          if (left < minX) {
            left = minX;
          }

          if (top > maxY) {
            top = maxY;
          }

          if (top < minY) {
            top = minY;
          }

          boxElem.style.left = "".concat(left, "px");
          boxElem.style.top = "".concat(top, "px");
        };

        document.onmouseup = function () {
          document.onmousemove = domMousemove;
          document.onmouseup = domMouseup;

          if (remember && storage) {
            Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
              savePosStorage();
            });
          }
        };
      }
    };

    var dragEvent = function dragEvent(evnt) {
      evnt.preventDefault();
      var remember = props.remember,
          storage = props.storage;

      var _DomTools$getDomNode3 = DomTools.getDomNode(),
          visibleHeight = _DomTools$getDomNode3.visibleHeight,
          visibleWidth = _DomTools$getDomNode3.visibleWidth;

      var marginSize = ctor_amd_xe_utils_default.a.toNumber(props.marginSize);
      var targetElem = evnt.target;
      var type = targetElem.dataset.type;
      var minWidth = ctor_amd_xe_utils_default.a.toNumber(props.minWidth);
      var minHeight = ctor_amd_xe_utils_default.a.toNumber(props.minHeight);
      var maxWidth = visibleWidth;
      var maxHeight = visibleHeight;
      var boxElem = getBox();
      var domMousemove = document.onmousemove;
      var domMouseup = document.onmouseup;
      var clientWidth = boxElem.clientWidth;
      var clientHeight = boxElem.clientHeight;
      var disX = evnt.clientX;
      var disY = evnt.clientY;
      var offsetTop = boxElem.offsetTop;
      var offsetLeft = boxElem.offsetLeft;
      var params = {
        type: 'resize'
      };

      document.onmousemove = function (evnt) {
        evnt.preventDefault();
        var dragLeft;
        var dragTop;
        var width;
        var height;

        switch (type) {
          case 'wl':
            dragLeft = disX - evnt.clientX;
            width = dragLeft + clientWidth;

            if (offsetLeft - dragLeft > marginSize) {
              if (width > minWidth) {
                boxElem.style.width = "".concat(width < maxWidth ? width : maxWidth, "px");
                boxElem.style.left = "".concat(offsetLeft - dragLeft, "px");
              }
            }

            break;

          case 'swst':
            dragLeft = disX - evnt.clientX;
            dragTop = disY - evnt.clientY;
            width = dragLeft + clientWidth;
            height = dragTop + clientHeight;

            if (offsetLeft - dragLeft > marginSize) {
              if (width > minWidth) {
                boxElem.style.width = "".concat(width < maxWidth ? width : maxWidth, "px");
                boxElem.style.left = "".concat(offsetLeft - dragLeft, "px");
              }
            }

            if (offsetTop - dragTop > marginSize) {
              if (height > minHeight) {
                boxElem.style.height = "".concat(height < maxHeight ? height : maxHeight, "px");
                boxElem.style.top = "".concat(offsetTop - dragTop, "px");
              }
            }

            break;

          case 'swlb':
            dragLeft = disX - evnt.clientX;
            dragTop = evnt.clientY - disY;
            width = dragLeft + clientWidth;
            height = dragTop + clientHeight;

            if (offsetLeft - dragLeft > marginSize) {
              if (width > minWidth) {
                boxElem.style.width = "".concat(width < maxWidth ? width : maxWidth, "px");
                boxElem.style.left = "".concat(offsetLeft - dragLeft, "px");
              }
            }

            if (offsetTop + height + marginSize < visibleHeight) {
              if (height > minHeight) {
                boxElem.style.height = "".concat(height < maxHeight ? height : maxHeight, "px");
              }
            }

            break;

          case 'st':
            dragTop = disY - evnt.clientY;
            height = clientHeight + dragTop;

            if (offsetTop - dragTop > marginSize) {
              if (height > minHeight) {
                boxElem.style.height = "".concat(height < maxHeight ? height : maxHeight, "px");
                boxElem.style.top = "".concat(offsetTop - dragTop, "px");
              }
            }

            break;

          case 'wr':
            dragLeft = evnt.clientX - disX;
            width = dragLeft + clientWidth;

            if (offsetLeft + width + marginSize < visibleWidth) {
              if (width > minWidth) {
                boxElem.style.width = "".concat(width < maxWidth ? width : maxWidth, "px");
              }
            }

            break;

          case 'sest':
            dragLeft = evnt.clientX - disX;
            dragTop = disY - evnt.clientY;
            width = dragLeft + clientWidth;
            height = dragTop + clientHeight;

            if (offsetLeft + width + marginSize < visibleWidth) {
              if (width > minWidth) {
                boxElem.style.width = "".concat(width < maxWidth ? width : maxWidth, "px");
              }
            }

            if (offsetTop - dragTop > marginSize) {
              if (height > minHeight) {
                boxElem.style.height = "".concat(height < maxHeight ? height : maxHeight, "px");
                boxElem.style.top = "".concat(offsetTop - dragTop, "px");
              }
            }

            break;

          case 'selb':
            dragLeft = evnt.clientX - disX;
            dragTop = evnt.clientY - disY;
            width = dragLeft + clientWidth;
            height = dragTop + clientHeight;

            if (offsetLeft + width + marginSize < visibleWidth) {
              if (width > minWidth) {
                boxElem.style.width = "".concat(width < maxWidth ? width : maxWidth, "px");
              }
            }

            if (offsetTop + height + marginSize < visibleHeight) {
              if (height > minHeight) {
                boxElem.style.height = "".concat(height < maxHeight ? height : maxHeight, "px");
              }
            }

            break;

          case 'sb':
            dragTop = evnt.clientY - disY;
            height = dragTop + clientHeight;

            if (offsetTop + height + marginSize < visibleHeight) {
              if (height > minHeight) {
                boxElem.style.height = "".concat(height < maxHeight ? height : maxHeight, "px");
              }
            }

            break;
        }

        boxElem.className = boxElem.className.replace(/\s?is--drag/, '') + ' is--drag';

        if (remember && storage) {
          savePosStorage();
        }

        modalMethods.dispatchEvent('zoom', params, evnt);
      };

      document.onmouseup = function () {
        reactData.zoomLocat = null;
        document.onmousemove = domMousemove;
        document.onmouseup = domMouseup;
        setTimeout(function () {
          boxElem.className = boxElem.className.replace(/\s?is--drag/, '');
        }, 50);
      };
    };

    var renderTitles = function renderTitles() {
      var _props$slots = props.slots,
          propSlots = _props$slots === void 0 ? {} : _props$slots,
          resize = props.resize,
          title = props.title;
      var zoomLocat = reactData.zoomLocat;
      var titleSlot = slots.title || propSlots.title;
      var titVNs = titleSlot ? titleSlot({
        $modal: $xemodal
      }) : [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-modal--title'
      }, title ? UtilTools.getFuncText(title) : conf.i18n('vxe.alert.title'))];

      if (resize) {
        titVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-modal--zoom-btn', 'trigger--btn', zoomLocat ? conf.icon.MODAL_ZOOM_OUT : conf.icon.MODAL_ZOOM_IN],
          title: conf.i18n("vxe.modal.zoom".concat(zoomLocat ? 'Out' : 'In')),
          onClick: toggleZoomEvent
        }));
      }

      titVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-modal--close-btn', 'trigger--btn', conf.icon.MODAL_CLOSE],
        title: conf.i18n('vxe.modal.close'),
        onClick: closeEvent
      }));
      return titVNs;
    };

    var renderHeaders = function renderHeaders() {
      var _props$slots2 = props.slots,
          propSlots = _props$slots2 === void 0 ? {} : _props$slots2,
          resize = props.resize;
      var isMsg = computeIsMsg.value;
      var headerSlot = slots.header || propSlots.header;
      var headVNs = [];

      if (props.showHeader) {
        var headerOns = {};

        if (resize && props.dblclickZoom && props.type === 'modal') {
          headerOns.onDblclick = toggleZoomEvent;
        }

        headVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', _objectSpread2({
          class: ['vxe-modal--header', !isMsg && props.showTitleOverflow ? 'is--ellipsis' : ''],
          onMousedown: mousedownEvent
        }, headerOns), headerSlot ? !reactData.inited || props.destroyOnClose && !reactData.visible ? [] : headerSlot({
          $modal: $xemodal
        }) : renderTitles()));
      }

      return headVNs;
    };

    var renderBodys = function renderBodys() {
      var _props$slots3 = props.slots,
          propSlots = _props$slots3 === void 0 ? {} : _props$slots3,
          status = props.status;
      var isMsg = computeIsMsg.value;
      var defaultSlot = slots.default || propSlots.default;
      var contVNs = [];

      if (status) {
        contVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-modal--status-wrapper'
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-modal--status-icon', props.iconStatus || conf.icon["MODAL_".concat(status).toLocaleUpperCase()]]
        })]));
      }

      contVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-modal--content'
      }, defaultSlot ? !reactData.inited || props.destroyOnClose && !reactData.visible ? [] : defaultSlot({
        $modal: $xemodal
      }) : UtilTools.getFuncText(props.message)));

      if (!isMsg) {
        contVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: ['vxe-loading', {
            'is--visible': props.loading
          }]
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-loading--spinner'
        })]));
      }

      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-modal--body'
      }, contVNs)];
    };

    var renderBtns = function renderBtns() {
      var type = props.type;
      var btnVNs = [];

      if (type === 'confirm') {
        btnVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(button_src_button, {
          ref: refCancelBtn,
          content: props.cancelButtonText || conf.i18n('vxe.button.cancel'),
          onClick: cancelEvent
        }));
      }

      btnVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(button_src_button, {
        ref: refConfirmBtn,
        status: 'primary',
        content: props.cancelButtonText || conf.i18n('vxe.button.confirm'),
        onClick: confirmEvent
      }));
      return btnVNs;
    };

    var renderFooters = function renderFooters() {
      var _props$slots4 = props.slots,
          propSlots = _props$slots4 === void 0 ? {} : _props$slots4;
      var isMsg = computeIsMsg.value;
      var footerSlot = slots.footer || propSlots.footer;
      var footVNs = [];

      if (props.showFooter) {
        footVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-modal--footer'
        }, footerSlot ? !reactData.inited || props.destroyOnClose && !reactData.visible ? [] : footerSlot({
          $modal: $xemodal
        }) : renderBtns()));
      }

      if (!isMsg && props.resize) {
        footVNs.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-modal--resize'
        }, ['wl', 'wr', 'swst', 'sest', 'st', 'swlb', 'selb', 'sb'].map(function (type) {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: "".concat(type, "-resize"),
            'data-type': type,
            onMousedown: dragEvent
          });
        })));
      }

      return footVNs;
    };

    modalMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $modal: $xemodal,
          $event: evnt
        }, params));
      },
      open: openModal,
      close: function close() {
        return closeModal('close');
      },
      getBox: getBox,
      getPosition: getPosition,
      setPosition: setPosition,
      isMaximized: isMaximized,
      zoom: zoom,
      maximize: maximize,
      revert: revert
    };
    Object.assign($xemodal, modalMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.width;
    }, recalculate);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.height;
    }, recalculate);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.modelValue;
    }, function (value) {
      if (value) {
        openModal();
      } else {
        closeModal('default');
      }
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      if (props.storage && !props.id) {
        UtilTools.error('vxe.error.reqProp', ['modal.id']);
      }

      if (props.modelValue) {
        openModal();
      }

      recalculate();

      if (props.escClosable) {
        GlobalEvent.on($xemodal, 'keydown', handleGlobalKeydownEvent);
      }
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onBeforeMount"])(function () {
      GlobalEvent.off($xemodal, 'keydown');
      removeMsgQueue();
    });

    var renderVN = function renderVN() {
      var _ref2;

      var className = props.className,
          type = props.type,
          animat = props.animat,
          loading = props.loading,
          status = props.status,
          lockScroll = props.lockScroll,
          lockView = props.lockView,
          mask = props.mask;
      var inited = reactData.inited,
          zoomLocat = reactData.zoomLocat,
          modalTop = reactData.modalTop,
          contentVisible = reactData.contentVisible,
          visible = reactData.visible;
      var vSize = computeSize.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(external_commonjs_vue_commonjs2_vue_root_Vue_["Teleport"], {
        to: 'body',
        disabled: props.transfer ? !inited : true
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-modal--wrapper', "type--".concat(type), className || '', (_ref2 = {}, _defineProperty(_ref2, "size--".concat(vSize), vSize), _defineProperty(_ref2, "status--".concat(status), status), _defineProperty(_ref2, 'is--animat', animat), _defineProperty(_ref2, 'lock--scroll', lockScroll), _defineProperty(_ref2, 'lock--view', lockView), _defineProperty(_ref2, 'is--mask', mask), _defineProperty(_ref2, 'is--maximize', zoomLocat), _defineProperty(_ref2, 'is--visible', contentVisible), _defineProperty(_ref2, 'is--active', visible), _defineProperty(_ref2, 'is--loading', loading), _ref2)],
        style: {
          zIndex: reactData.modalZindex,
          top: modalTop ? "".concat(modalTop, "px") : null
        },
        onClick: selfClickEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refModalBox,
        class: 'vxe-modal--box',
        onMousedown: boxMousedownEvent
      }, renderHeaders().concat(renderBodys(), renderFooters()))])]);
    };

    $xemodal.renderVN = renderVN;
    return $xemodal;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/dynamics/index.ts


var dynamicContainerElem;
var dynamicStore = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
  modals: []
});
/**
 * 动态组件
 */

var VxeDynamics = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  setup: function setup() {
    return function () {
      var ModalComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-modal');
      var modals = dynamicStore.modals;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-dynamics--modal'
      }, modals.map(function (item) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(ModalComponent, item);
      }));
    };
  }
});
var dynamicApp = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createApp"])(VxeDynamics);
function checkDynamic() {
  if (!dynamicContainerElem) {
    dynamicContainerElem = document.createElement('div');
    dynamicContainerElem.className = 'vxe-dynamics';
    document.body.appendChild(dynamicContainerElem);
    dynamicApp.mount(dynamicContainerElem);
  }
}
// CONCATENATED MODULE: ./packages/modal/index.ts















function modal_openModal(options) {
  // 使用动态组件渲染动态弹框
  checkDynamic();
  return new Promise(function (resolve) {
    if (options && options.id && allActivedModals.some(function (comp) {
      return comp.props.id === options.id;
    })) {
      resolve('exist');
    } else {
      var _onHide = options.onHide;
      var modalOpts = Object.assign(options, {
        key: ctor_amd_xe_utils_default.a.uniqueId(),
        modelValue: true,
        onHide: function onHide(params) {
          var modalList = dynamicStore.modals;

          if (_onHide) {
            _onHide(params);
          }

          dynamicStore.modals = modalList.filter(function (item) {
            return item.key !== modalOpts.key;
          });
          resolve(params.type);
        }
      });
      dynamicStore.modals.push(modalOpts);
    }
  });
}

function getModal(id) {
  return ctor_amd_xe_utils_default.a.find(allActivedModals, function ($modal) {
    return $modal.props.id === id;
  });
}
/**
 * 全局关闭动态的活动窗口（只能用于关闭动态的创建的活动窗口）
 * 如果传 id 则关闭指定的窗口
 * 如果不传则关闭所有窗口
 */


function modal_closeModal(id) {
  var modals = id ? [getModal(id)] : allActivedModals;
  var restPromises = [];
  modals.forEach(function ($modal) {
    if ($modal) {
      restPromises.push($modal.close());
    }
  });
  return Promise.all(restPromises);
}

function handleOpen(defOpts, message, title, options) {
  var opts;

  if (ctor_amd_xe_utils_default.a.isString(message)) {
    opts = {
      message: message,
      title: title
    };
  } else {
    opts = message;
  }

  return modal_openModal(_objectSpread2(_objectSpread2(_objectSpread2({}, defOpts), options), opts));
}

function openAlert(message, title, options) {
  return handleOpen({
    type: 'alert',
    showFooter: true
  }, message, title, options);
}

function openConfirm(message, title, options) {
  return handleOpen({
    type: 'confirm',
    status: 'question',
    showFooter: true
  }, message, title, options);
}

function openMessage(message, options) {
  return handleOpen({
    type: 'message',
    mask: false,
    lockView: false,
    showHeader: false
  }, message, '', options);
}

var ModalController = {
  get: getModal,
  close: modal_closeModal,
  open: modal_openModal,
  alert: openAlert,
  confirm: openConfirm,
  message: openMessage
};
var Modal = {
  install: function install(app) {
    var globalProperties = app.config.globalProperties;
    dynamicApp.component(modal.name, modal);
    app.component(modal.name, modal);
    v_x_e_table.modal = ModalController;

    if (!globalProperties.$vxe) {
      globalProperties.$vxe = {
        modal: ModalController
      };
    } else {
      globalProperties.$vxe.modal = ModalController;
    }
  }
};
/* harmony default export */ var packages_modal = (Modal);
// CONCATENATED MODULE: ./packages/tooltip/src/tooltip.ts









/* harmony default export */ var tooltip = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTooltip',
  props: {
    modelValue: Boolean,
    size: {
      type: String,
      default: function _default() {
        return conf.tooltip.size || conf.size;
      }
    },
    trigger: {
      type: String,
      default: function _default() {
        return conf.tooltip.trigger;
      }
    },
    theme: {
      type: String,
      default: function _default() {
        return conf.tooltip.theme;
      }
    },
    content: [String, Number],
    zIndex: [String, Number],
    isArrow: {
      type: Boolean,
      default: true
    },
    enterable: Boolean,
    leaveDelay: {
      type: Number,
      default: conf.tooltip.leaveDelay
    },
    leaveMethod: Function
  },
  emits: ['update:modelValue'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      target: null,
      isUpdate: false,
      isHover: false,
      visible: false,
      message: '',
      tipTarget: null,
      tipZindex: 0,
      tipStore: {
        style: {},
        placement: '',
        arrowStyle: {}
      }
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xetooltip = {
      xID: xID,
      props: props,
      context: context,
      refMaps: refMaps
    };
    var tooltipMethods = {};
    var targetActive;

    var updateTipStyle = function updateTipStyle() {
      var tipTarget = reactData.tipTarget,
          tipStore = reactData.tipStore;

      if (tipTarget) {
        var _DomTools$getDomNode = DomTools.getDomNode(),
            scrollTop = _DomTools$getDomNode.scrollTop,
            scrollLeft = _DomTools$getDomNode.scrollLeft,
            visibleWidth = _DomTools$getDomNode.visibleWidth;

        var _DomTools$getAbsolute = DomTools.getAbsolutePos(tipTarget),
            top = _DomTools$getAbsolute.top,
            left = _DomTools$getAbsolute.left;

        var el = refElem.value;
        var marginSize = 6;
        var offsetHeight = el.offsetHeight;
        var offsetWidth = el.offsetWidth;
        var tipLeft = left;
        var tipTop = top - offsetHeight - marginSize;
        tipLeft = Math.max(marginSize, left + Math.floor((tipTarget.offsetWidth - offsetWidth) / 2));

        if (tipLeft + offsetWidth + marginSize > scrollLeft + visibleWidth) {
          tipLeft = scrollLeft + visibleWidth - offsetWidth - marginSize;
        }

        if (top - offsetHeight < scrollTop + marginSize) {
          tipStore.placement = 'bottom';
          tipTop = top + tipTarget.offsetHeight + marginSize;
        }

        tipStore.style.top = "".concat(tipTop, "px");
        tipStore.style.left = "".concat(tipLeft, "px");
        tipStore.arrowStyle.left = "".concat(left - tipLeft + tipTarget.offsetWidth / 2, "px");
      }
    };

    var updateValue = function updateValue(value) {
      if (value !== reactData.visible) {
        reactData.visible = value;
        reactData.isUpdate = true;
        emit('update:modelValue', value);
      }
    };

    var updateZindex = function updateZindex() {
      if (reactData.tipZindex < UtilTools.getLastZIndex()) {
        reactData.tipZindex = UtilTools.nextZIndex();
      }
    };

    var clickEvent = function clickEvent() {
      if (reactData.visible) {
        tooltipMethods.close();
      } else {
        tooltipMethods.open();
      }
    };

    var targetMouseenterEvent = function targetMouseenterEvent() {
      tooltipMethods.open();
    };

    var targetMouseleaveEvent = function targetMouseleaveEvent() {
      var trigger = props.trigger,
          enterable = props.enterable,
          leaveDelay = props.leaveDelay;
      targetActive = false;

      if (enterable && trigger === 'hover') {
        setTimeout(function () {
          if (!reactData.isHover) {
            tooltipMethods.close();
          }
        }, leaveDelay);
      } else {
        tooltipMethods.close();
      }
    };

    var wrapperMouseenterEvent = function wrapperMouseenterEvent() {
      reactData.isHover = true;
    };

    var wrapperMouseleaveEvent = function wrapperMouseleaveEvent(evnt) {
      var leaveMethod = props.leaveMethod,
          trigger = props.trigger,
          enterable = props.enterable,
          leaveDelay = props.leaveDelay;
      reactData.isHover = false;

      if (!leaveMethod || leaveMethod({
        $event: evnt
      }) !== false) {
        if (enterable && trigger === 'hover') {
          setTimeout(function () {
            if (!targetActive) {
              tooltipMethods.close();
            }
          }, leaveDelay);
        }
      }
    };

    tooltipMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $tooltip: $xetooltip,
          $event: evnt
        }, params));
      },
      open: function open(target, message) {
        return tooltipMethods.toVisible(target || reactData.target, message);
      },
      close: function close() {
        reactData.tipTarget = null;
        Object.assign(reactData.tipStore, {
          style: {},
          placement: '',
          arrowStyle: null
        });
        updateValue(false);
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      toVisible: function toVisible(target, message) {
        targetActive = true;

        if (target) {
          var tipStore = reactData.tipStore;
          var el = refElem.value;
          var parentNode = el.parentNode;

          if (!parentNode) {
            document.body.appendChild(el);
          }

          if (message) {
            reactData.message = message;
          }

          reactData.tipTarget = target;
          updateValue(true);
          updateZindex();
          tipStore.placement = 'top';
          tipStore.style = {
            width: 'auto',
            left: 0,
            top: 0,
            zIndex: props.zIndex || reactData.tipZindex
          };
          tipStore.arrowStyle = {
            left: '50%'
          };
          return tooltipMethods.updatePlacement();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      updatePlacement: function updatePlacement() {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          var tipTarget = reactData.tipTarget;
          var el = refElem.value;

          if (tipTarget && el) {
            updateTipStyle();
            return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(updateTipStyle);
          }
        });
      }
    };
    Object.assign($xetooltip, tooltipMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.content;
    }, function () {
      reactData.message = props.content;
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.modelValue;
    }, function () {
      if (!reactData.isUpdate) {
        if (props.modelValue) {
          tooltipMethods.open();
        } else {
          tooltipMethods.close();
        }
      }

      reactData.isUpdate = false;
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var trigger = props.trigger,
          content = props.content,
          modelValue = props.modelValue;
      var wrapperElem = refElem.value;
      var parentNode = wrapperElem.parentNode;

      if (parentNode) {
        reactData.message = content;
        reactData.tipZindex = UtilTools.nextZIndex();
        ctor_amd_xe_utils_default.a.arrayEach(wrapperElem.children, function (elem, index) {
          if (index > 1) {
            parentNode.insertBefore(elem, wrapperElem);

            if (!reactData.target) {
              reactData.target = elem;
            }
          }
        });
        parentNode.removeChild(wrapperElem);
        var target = reactData.target;

        if (target) {
          if (trigger === 'hover') {
            target.onmouseleave = targetMouseleaveEvent;
            target.onmouseenter = targetMouseenterEvent;
          } else if (trigger === 'click') {
            target.onclick = clickEvent;
          }
        }

        if (modelValue) {
          tooltipMethods.open();
        }
      }
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onBeforeUnmount"])(function () {
      var trigger = props.trigger;
      var target = reactData.target;
      var wrapperElem = refElem.value;
      var parentNode = wrapperElem.parentNode;

      if (parentNode) {
        parentNode.removeChild(wrapperElem);
      }

      if (target) {
        if (trigger === 'hover') {
          target.onmouseenter = null;
          target.onmouseleave = null;
        } else if (trigger === 'click') {
          target.onclick = null;
        }
      }
    });

    var renderVN = function renderVN() {
      var _ref;

      var theme = props.theme,
          isArrow = props.isArrow,
          enterable = props.enterable;
      var isHover = reactData.isHover,
          visible = reactData.visible,
          tipStore = reactData.tipStore,
          message = reactData.message;
      var vSize = computeSize.value;
      var ons;

      if (enterable) {
        ons = {
          onMouseenter: wrapperMouseenterEvent,
          onMouseleave: wrapperMouseleaveEvent
        };
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', _objectSpread2({
        ref: refElem,
        class: ['vxe-table--tooltip-wrapper', "theme--".concat(theme), "placement--".concat(tipStore.placement), (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--enterable', enterable), _defineProperty(_ref, 'is--visible', visible), _defineProperty(_ref, 'is--arrow', isArrow), _defineProperty(_ref, 'is--hover', isHover), _ref)],
        style: tipStore.style
      }, ons), [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--tooltip-content'
      }, slots.content ? slots.content({}) : UtilTools.formatText(message)), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--tooltip-arrow',
        style: tipStore.arrowStyle
      })].concat(slots.default ? slots.default({}) : []));
    };

    $xetooltip.renderVN = renderVN;
    return $xetooltip;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/tooltip/index.ts


var Tooltip = {
  install: function install(app) {
    app.component(tooltip.name, tooltip);
  }
};
/* harmony default export */ var packages_tooltip = (Tooltip);
// CONCATENATED MODULE: ./packages/form/src/itemInfo.ts



var itemInfo_ItemInfo = /*#__PURE__*/function () {
  function ItemInfo($xeform, _vm) {
    _classCallCheck(this, ItemInfo);

    Object.assign(this, {
      id: ctor_amd_xe_utils_default.a.uniqueId('item_'),
      title: _vm.title,
      field: _vm.field,
      span: _vm.span,
      align: _vm.align,
      titleAlign: _vm.titleAlign,
      titleWidth: _vm.titleWidth,
      titlePrefix: _vm.titlePrefix,
      titleSuffix: _vm.titleSuffix,
      resetValue: _vm.resetValue,
      visibleMethod: _vm.visibleMethod,
      visible: _vm.visible,
      folding: _vm.folding,
      collapseNode: _vm.collapseNode,
      itemRender: _vm.itemRender,
      // 渲染属性
      showError: false,
      errRule: null,
      slots: _vm.slots
    });
  }

  _createClass(ItemInfo, [{
    key: "update",
    value: function update(name, value) {
      this[name] = value;
    }
  }]);

  return ItemInfo;
}();
// CONCATENATED MODULE: ./packages/form/src/util.ts








function isFormItem(item) {
  return item instanceof itemInfo_ItemInfo;
}
function createItem($xeform, _vm) {
  return isFormItem(_vm) ? _vm : new itemInfo_ItemInfo($xeform, _vm);
}
function watchItem(props, formItem) {
  Object.keys(props).forEach(function (name) {
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props[name];
    }, function (value) {
      formItem.update(name, value);
    });
  });
}
function assemItem($xeform, el, formItem) {
  var reactData = $xeform.reactData;
  var staticItems = reactData.staticItems;
  var parentElem = el.parentNode;

  if (parentElem) {
    staticItems.splice(ctor_amd_xe_utils_default.a.arrayIndexOf(parentElem.children, el), 0, formItem);
    reactData.staticItems = staticItems.slice(0);
  }
}
function destroyItem($xeform, formItem) {
  var reactData = $xeform.reactData;
  var staticItems = reactData.staticItems;
  var index = ctor_amd_xe_utils_default.a.findIndexOf(staticItems, function (item) {
    return item.id === formItem.id;
  });

  if (index > -1) {
    staticItems.splice(index, 1);
  }

  reactData.staticItems = staticItems.slice(0);
}
// CONCATENATED MODULE: ./packages/form/src/form.ts


























var form_Rule = /*#__PURE__*/function () {
  function Rule(rule) {
    _classCallCheck(this, Rule);

    Object.assign(this, {
      $options: rule,
      required: rule.required,
      min: rule.min,
      max: rule.min,
      type: rule.type,
      pattern: rule.pattern,
      validator: rule.validator,
      trigger: rule.trigger,
      maxWidth: rule.maxWidth
    });
  }

  _createClass(Rule, [{
    key: "message",
    get: function get() {
      return UtilTools.getFuncText(this.$options.message);
    }
  }]);

  return Rule;
}();

function getResetValue(value, resetValue) {
  if (ctor_amd_xe_utils_default.a.isArray(value)) {
    resetValue = [];
  }

  return resetValue;
}

/* harmony default export */ var src_form = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeForm',
  props: {
    loading: Boolean,
    data: Object,
    size: {
      type: String,
      default: function _default() {
        return conf.form.size || conf.size;
      }
    },
    span: [String, Number],
    align: String,
    titleAlign: String,
    titleWidth: [String, Number],
    titleColon: {
      type: Boolean,
      default: function _default() {
        return conf.form.titleColon;
      }
    },
    titleAsterisk: {
      type: Boolean,
      default: function _default() {
        return conf.form.titleAsterisk;
      }
    },
    items: Array,
    rules: Object,
    preventSubmit: {
      type: Boolean,
      default: function _default() {
        return conf.form.preventSubmit;
      }
    },
    validConfig: Object
  },
  emits: ['toggle-collapse', 'submit', 'submit-invalid', 'reset'],
  setup: function setup(props, context) {
    var TooltipComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-tooltip');
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      collapseAll: true,
      staticItems: [],
      formItems: []
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xeform = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData,
      refMaps: refMaps
    };
    var formMethods = {};
    var computeValidOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.form.validConfig, props.validConfig);
    });

    var loadItem = function loadItem(list) {
      if (list.length) {
        list.forEach(function (item) {
          if (item.slots) {
            ctor_amd_xe_utils_default.a.each(item.slots, function (func, name, slots) {
              if (!ctor_amd_xe_utils_default.a.isFunction(func)) {
                if (slots[func]) {
                  slots[name] = slots[func];
                } else {
                  slots[name] = null;
                  UtilTools.error('vxe.error.notSlot', [func]);
                }
              }
            });
          }
        });
        reactData.staticItems = list.map(function (item) {
          return createItem($xeform, item);
        });
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var getItems = function getItems() {
      return reactData.formItems.slice(0);
    };

    var toggleCollapse = function toggleCollapse() {
      reactData.collapseAll = !reactData.collapseAll;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var toggleCollapseEvent = function toggleCollapseEvent(evnt) {
      toggleCollapse();
      formMethods.dispatchEvent('toggle-collapse', {
        collapse: !reactData.collapseAll,
        data: props.data
      }, evnt);
    };

    var clearValidate = function clearValidate(field) {
      var formItems = reactData.formItems;

      if (field) {
        var item = formItems.find(function (item) {
          return item.field === field;
        });

        if (item) {
          item.showError = false;
        }
      } else {
        formItems.forEach(function (item) {
          item.showError = false;
        });
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var reset = function reset() {
      var data = props.data;
      var formItems = reactData.formItems;

      if (data) {
        formItems.forEach(function (item) {
          var field = item.field,
              resetValue = item.resetValue,
              itemRender = item.itemRender;

          if (field) {
            ctor_amd_xe_utils_default.a.set(data, field, resetValue === null ? getResetValue(ctor_amd_xe_utils_default.a.get(data, field), undefined) : resetValue);
            var compConf = itemRender ? v_x_e_table.renderer.get(itemRender.name) : null;

            if (compConf && compConf.itemResetMethod) {
              compConf.itemResetMethod({
                data: data,
                property: field,
                item: item,
                $form: $xeform
              });
            }
          }
        });
      }

      return clearValidate();
    };

    var resetEvent = function resetEvent(evnt) {
      evnt.preventDefault();
      reset();
      formMethods.dispatchEvent('reset', {
        data: props.data
      }, evnt);
    };

    var handleFocus = function handleFocus(fields) {
      var formItems = reactData.formItems;
      var el = refElem.value;
      fields.some(function (property) {
        var item = formItems.find(function (item) {
          return item.field === property;
        });

        if (item && item.itemRender) {
          var itemRender = item.itemRender;
          var compConf = v_x_e_table.renderer.get(itemRender.name);
          var inputElem = null; // 如果指定了聚焦 class

          if (itemRender.autofocus) {
            inputElem = el.querySelector(".".concat(item.id, " ").concat(itemRender.autofocus));
          } // 渲染器的聚焦处理


          if (!inputElem && compConf && compConf.autofocus) {
            inputElem = el.querySelector(".".concat(item.id, " ").concat(compConf.autofocus));
          }

          if (inputElem) {
            inputElem.focus();
            return true;
          }
        }
      });
    };
    /**
     * 校验数据
     * 按表格行、列顺序依次校验（同步或异步）
     * 校验规则根据索引顺序依次校验，如果是异步则会等待校验完成才会继续校验下一列
     * 如果校验失败则，触发回调或者 Promise<(ErrMap 校验不通过列的信息)>
     * 如果是传回调方式这返回一个 (ErrMap 校验不通过列的信息)
     *
     * rule 配置：
     *  required=Boolean 是否必填
     *  min=Number 最小长度
     *  max=Number 最大长度
     *  validator=Function({ itemValue, rule, rules, data, property }) 自定义校验，接收一个 Promise
     *  trigger=change 触发方式
     */


    var validItemRules = function validItemRules(type, property, val) {
      var data = props.data,
          formRules = props.rules;
      var errorRules = [];
      var syncVailds = [];

      if (property && formRules) {
        var rules = ctor_amd_xe_utils_default.a.get(formRules, property);

        if (rules) {
          var itemValue = ctor_amd_xe_utils_default.a.isUndefined(val) ? ctor_amd_xe_utils_default.a.get(data, property) : val;
          rules.forEach(function (rule) {
            if (type === 'all' || !rule.trigger || type === rule.trigger) {
              if (ctor_amd_xe_utils_default.a.isFunction(rule.validator)) {
                var customValid = rule.validator({
                  itemValue: itemValue,
                  rule: rule,
                  rules: rules,
                  data: data,
                  property: property,
                  $form: $xeform
                });

                if (customValid) {
                  if (ctor_amd_xe_utils_default.a.isError(customValid)) {
                    errorRules.push(new form_Rule({
                      type: 'custom',
                      trigger: rule.trigger,
                      message: customValid.message,
                      rule: new form_Rule(rule)
                    }));
                  } else if (customValid.catch) {
                    // 如果为异步校验（注：异步校验是并发无序的）
                    syncVailds.push(customValid.catch(function (e) {
                      errorRules.push(new form_Rule({
                        type: 'custom',
                        trigger: rule.trigger,
                        message: e ? e.message : rule.message,
                        rule: new form_Rule(rule)
                      }));
                    }));
                  }
                }
              } else {
                var isNumber = rule.type === 'number';
                var numVal = isNumber ? ctor_amd_xe_utils_default.a.toNumber(itemValue) : ctor_amd_xe_utils_default.a.getSize(itemValue);

                if (itemValue === null || itemValue === undefined || itemValue === '') {
                  if (rule.required) {
                    errorRules.push(new form_Rule(rule));
                  }
                } else if (isNumber && isNaN(itemValue) || !isNaN(rule.min) && numVal < parseFloat(rule.min) || !isNaN(rule.max) && numVal > parseFloat(rule.max) || rule.pattern && !(rule.pattern.test ? rule.pattern : new RegExp(rule.pattern)).test(itemValue)) {
                  errorRules.push(new form_Rule(rule));
                }
              }
            }
          });
        }
      }

      return Promise.all(syncVailds).then(function () {
        if (errorRules.length) {
          var rest = {
            rules: errorRules,
            rule: errorRules[0]
          };
          return Promise.reject(rest);
        }
      });
    };

    var showErrTime;

    var beginValidate = function beginValidate(type, callback) {
      var data = props.data,
          formRules = props.rules;
      var formItems = reactData.formItems;
      var validOpts = computeValidOpts.value;
      var validRest = {};
      var validFields = [];
      var itemValids = [];
      clearValidate();
      clearTimeout(showErrTime);

      if (data && formRules) {
        formItems.forEach(function (item) {
          var field = item.field;

          if (field) {
            itemValids.push(validItemRules(type || 'all', field).then(function () {
              item.errRule = null;
            }).catch(function (_ref) {
              var rule = _ref.rule,
                  rules = _ref.rules;
              var rest = {
                rule: rule,
                rules: rules,
                data: data,
                property: field,
                $form: $xeform
              };

              if (!validRest[field]) {
                validRest[field] = [];
              }

              validRest[field].push(rest);
              validFields.push(field);
              item.errRule = rule;
              return Promise.reject(rest);
            }));
          }
        });
        return Promise.all(itemValids).then(function () {
          if (callback) {
            callback();
          }
        }).catch(function () {
          showErrTime = window.setTimeout(function () {
            formItems.forEach(function (item) {
              if (item.errRule) {
                item.showError = true;
              }
            });
          }, 20);

          if (callback) {
            callback(validRest);
          }

          if (validOpts.autoPos !== false) {
            Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
              handleFocus(validFields);
            });
          }

          return Promise.reject(validRest);
        });
      }

      if (callback) {
        callback();
      }

      return Promise.resolve();
    };

    var validate = function validate(callback) {
      return beginValidate(callback);
    };

    var submitEvent = function submitEvent(evnt) {
      evnt.preventDefault();

      if (!props.preventSubmit) {
        beginValidate().then(function () {
          formMethods.dispatchEvent('submit', {
            data: props.data
          }, evnt);
        }).catch(function (errMap) {
          formMethods.dispatchEvent('submit-invalid', {
            data: props.data,
            errMap: errMap
          }, evnt);
        });
      }
    };
    /**
     * 更新项状态
     * 如果组件值 v-model 发生 change 时，调用改函数用于更新某一项编辑状态
     * 如果单元格配置了校验规则，则会进行校验
     */


    var updateStatus = function updateStatus(scope, itemValue) {
      var property = scope.property;
      var formItems = reactData.formItems;

      if (property) {
        validItemRules('change', property, itemValue).then(function () {
          clearValidate(property);
        }).catch(function (_ref2) {
          var rule = _ref2.rule;
          var item = formItems.find(function (item) {
            return item.field === property;
          });

          if (item) {
            item.showError = true;
            item.errRule = rule;
          }
        });
      }
    };

    var renderPrefixIcon = function renderPrefixIcon(titlePrefix) {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-form--item-title-prefix'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: titlePrefix.icon || conf.icon.FORM_PREFIX
      })]);
    };

    var renderSuffixIcon = function renderSuffixIcon(titleSuffix) {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-form--item-title-suffix'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: titleSuffix.icon || conf.icon.FORM_SUFFIX
      })]);
    };

    var renderTitle = function renderTitle(item) {
      var data = props.data;
      var slots = item.slots,
          field = item.field,
          itemRender = item.itemRender,
          titlePrefix = item.titlePrefix,
          titleSuffix = item.titleSuffix;
      var compConf = itemRender ? v_x_e_table.renderer.get(itemRender.name) : null;
      var params = {
        data: data,
        property: field,
        item: item,
        $form: $xeform
      };
      var tss = [];

      if (titlePrefix) {
        tss.push(titlePrefix.message ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TooltipComponent, {
          content: UtilTools.getFuncText(titlePrefix.message),
          enterable: titlePrefix.enterable,
          theme: titlePrefix.theme
        }, {
          default: function _default() {
            return renderPrefixIcon(titlePrefix);
          }
        }) : renderPrefixIcon(titlePrefix));
      }

      tss.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-form--item-title-label'
      }, compConf && compConf.renderItemTitle ? compConf.renderItemTitle(itemRender, params) : slots && slots.title ? slots.title(params) : UtilTools.getFuncText(item.title)));

      if (titleSuffix) {
        tss.push(titleSuffix.message ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(TooltipComponent, {
          content: UtilTools.getFuncText(titleSuffix.message),
          enterable: titleSuffix.enterable,
          theme: titleSuffix.theme
        }, {
          default: function _default() {
            return renderSuffixIcon(titleSuffix);
          }
        }) : renderSuffixIcon(titleSuffix));
      }

      return tss;
    };

    var renderItems = function renderItems() {
      var rules = props.rules,
          data = props.data;
      var formItems = reactData.formItems,
          collapseAll = reactData.collapseAll;
      return formItems.map(function (item, index) {
        var slots = item.slots,
            title = item.title,
            visible = item.visible,
            folding = item.folding,
            visibleMethod = item.visibleMethod,
            field = item.field,
            collapseNode = item.collapseNode,
            itemRender = item.itemRender,
            showError = item.showError,
            errRule = item.errRule;
        var compConf = itemRender ? v_x_e_table.renderer.get(itemRender.name) : null;
        var span = item.span || props.span;
        var align = item.align || props.align;
        var titleAlign = item.titleAlign || props.titleAlign;
        var titleWidth = item.titleWidth || props.titleWidth;
        var itemVisibleMethod = visibleMethod;
        var params = {
          data: data,
          property: field,
          item: item,
          $form: $xeform
        };
        var isRequired;

        if (visible === false) {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])();
        }

        if (!itemVisibleMethod && compConf && compConf.itemVisibleMethod) {
          itemVisibleMethod = compConf.itemVisibleMethod;
        }

        if (rules) {
          var itemRules = rules[field];

          if (itemRules) {
            isRequired = itemRules.some(function (rule) {
              return rule.required;
            });
          }
        }

        var contentVNs = [];

        if (compConf && compConf.renderItemContent) {
          contentVNs = compConf.renderItemContent(itemRender, params);
        } else if (slots && slots.default) {
          contentVNs = slots.default(params);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: ['vxe-form--item', item.id, span ? "vxe-col--".concat(span, " is--span") : null, {
            'is--title': title,
            'is--required': isRequired,
            'is--hidden': folding && collapseAll,
            'is--active': !itemVisibleMethod || itemVisibleMethod(params),
            'is--error': showError
          }],
          key: index
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-form--item-inner'
        }, [title ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: ['vxe-form--item-title', titleAlign ? "align--".concat(titleAlign) : null],
          style: titleWidth ? {
            width: isNaN(titleWidth) ? titleWidth : "".concat(titleWidth, "px")
          } : null
        }, renderTitle(item)) : null, Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: ['vxe-form--item-content', align ? "align--".concat(align) : null]
        }, contentVNs.concat([collapseNode ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-form--item-trigger-node',
          onClick: toggleCollapseEvent
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-form--item-trigger-text'
        }, collapseAll ? conf.i18n('vxe.form.unfolding') : conf.i18n('vxe.form.folding')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
          class: ['vxe-form--item-trigger-icon', collapseAll ? conf.icon.FORM_FOLDING : conf.icon.FORM_UNFOLDING]
        })]) : null, errRule ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-form--item-valid',
          style: errRule.maxWidth ? {
            width: "".concat(errRule.maxWidth, "px")
          } : null
        }, errRule.message) : null]))])]);
      });
    };

    formMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $form: $xeform,
          $event: evnt
        }, params));
      },
      reset: reset,
      validate: validate,
      clearValidate: clearValidate,
      updateStatus: updateStatus,
      toggleCollapse: toggleCollapse,
      getItems: getItems
    };
    Object.assign($xeform, formMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return reactData.staticItems;
    }, function (value) {
      reactData.formItems = value;
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.items;
    }, function (value) {
      loadItem(value || []);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      loadItem(props.items || []);
    });

    var renderVN = function renderVN() {
      var _ref3;

      var loading = props.loading;
      var vSize = computeSize.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('form', {
        ref: refElem,
        class: ['vxe-form', 'vxe-row', (_ref3 = {}, _defineProperty(_ref3, "size--".concat(vSize), vSize), _defineProperty(_ref3, 'is--colon', props.titleColon), _defineProperty(_ref3, 'is--asterisk', props.titleAsterisk), _defineProperty(_ref3, 'is--loading', loading), _ref3)],
        onSubmit: submitEvent,
        onReset: resetEvent
      }, renderItems().concat([Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-form-slots',
        ref: 'hideItem'
      }, slots.default ? slots.default({}) : []), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: ['vxe-loading', {
          'is--visible': loading
        }]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-loading--spinner'
      })])]));
    };

    $xeform.renderVN = renderVN;
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('$xeform', $xeform);
    return $xeform;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/form/src/form-item.ts



var itemProps = {
  title: String,
  field: String,
  size: String,
  span: [String, Number],
  align: String,
  titleAlign: String,
  titleWidth: [String, Number],
  titlePrefix: Object,
  titleSuffix: Object,
  resetValue: {
    default: null
  },
  visibleMethod: Function,
  visible: {
    type: Boolean,
    default: null
  },
  folding: Boolean,
  collapseNode: Boolean,
  itemRender: Object
};
/* harmony default export */ var form_item = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeFormItem',
  props: itemProps,
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var $xeform = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xeform', {});
    var formItem = createItem($xeform, props);
    formItem.slots = slots;
    watchItem(props, formItem);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      assemItem($xeform, refElem.value, formItem);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      destroyItem($xeform, formItem);
    });

    var renderVN = function renderVN() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem
      });
    };

    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/form/index.ts



var Form = {
  install: function install(app) {
    app.component(src_form.name, src_form);
    app.component(form_item.name, form_item);
  }
};
/* harmony default export */ var packages_form = (Form);
// CONCATENATED MODULE: ./packages/select/src/select.ts



















function isOptionVisible(option) {
  return option.visible !== false;
}

function getOptUniqueId() {
  return ctor_amd_xe_utils_default.a.uniqueId('opt_');
}

/* harmony default export */ var src_select = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeSelect',
  props: {
    modelValue: null,
    clearable: Boolean,
    placeholder: String,
    disabled: Boolean,
    multiple: Boolean,
    multiCharOverflow: {
      type: [Number, String],
      default: function _default() {
        return conf.select.multiCharOverflow;
      }
    },
    prefixIcon: String,
    placement: String,
    options: Array,
    optionProps: Object,
    optionGroups: Array,
    optionGroupProps: Object,
    size: {
      type: String,
      default: function _default() {
        return conf.select.size || conf.size;
      }
    },
    emptyText: String,
    optionId: {
      type: String,
      default: function _default() {
        return conf.select.optionId;
      }
    },
    optionKey: Boolean,
    transfer: {
      type: Boolean,
      default: function _default() {
        return conf.select.transfer;
      }
    }
  },
  emits: ['update:modelValue', 'change', 'clear'],
  setup: function setup(props, context) {
    var InputComponent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["resolveComponent"])('vxe-input');
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      inited: false,
      staticOptions: [],
      fullGroupList: [],
      fullOptionList: [],
      visibleGroupList: [],
      visibleOptionList: [],
      panelIndex: 0,
      panelStyle: {},
      panelPlacement: null,
      currentValue: null,
      visiblePanel: false,
      animatVisible: false,
      isActivated: false
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refInput = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refOptionWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refOptionPanel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xeselect = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData,
      refMaps: refMaps
    };
    var selectMethods = {};
    var computePropsOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.optionProps || {};
    });
    var computeGroupPropsOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.optionGroupProps || {};
    });
    var computeLabelField = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var propsOpts = computePropsOpts.value;
      return propsOpts.label || 'label';
    });
    var computeValueField = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var propsOpts = computePropsOpts.value;
      return propsOpts.value || 'value';
    });
    var computeGroupLabelField = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var groupPropsOpts = computeGroupPropsOpts.value;
      return groupPropsOpts.label || 'label';
    });
    var computeGroupOptionsField = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var groupPropsOpts = computeGroupPropsOpts.value;
      return groupPropsOpts.options || 'options';
    });
    var computeIsGroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return reactData.fullGroupList.some(function (item) {
        return item.options && item.options.length;
      });
    });
    var computeMultiMaxCharNum = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return ctor_amd_xe_utils_default.a.toNumber(props.multiCharOverflow);
    });

    var findOption = function findOption(optionValue) {
      var fullOptionList = reactData.fullOptionList,
          fullGroupList = reactData.fullGroupList;
      var isGroup = computeIsGroup.value;
      var valueField = computeValueField.value;

      if (isGroup) {
        for (var gIndex = 0; gIndex < fullGroupList.length; gIndex++) {
          var group = fullGroupList[gIndex];

          if (group.options) {
            for (var index = 0; index < group.options.length; index++) {
              var option = group.options[index];

              if (optionValue === option[valueField]) {
                return option;
              }
            }
          }
        }
      }

      return fullOptionList.find(function (item) {
        return optionValue === item[valueField];
      });
    };

    var getSelectLabel = function getSelectLabel(value) {
      var labelField = computeLabelField.value;
      var item = findOption(value);
      return ctor_amd_xe_utils_default.a.toString(item ? item[labelField] : value);
    };

    var computeSelectLabel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var modelValue = props.modelValue,
          multiple = props.multiple;
      var multiMaxCharNum = computeMultiMaxCharNum.value;

      if (modelValue && multiple) {
        return modelValue.map(function (val) {
          var label = getSelectLabel(val);

          if (multiMaxCharNum > 0 && label.length > multiMaxCharNum) {
            return "".concat(label.substring(0, multiMaxCharNum), "...");
          }

          return label;
        }).join(', ');
      }

      return getSelectLabel(modelValue);
    });

    var getOptkey = function getOptkey() {
      return props.optionId || '_XID';
    };

    var getOptid = function getOptid(option) {
      var optid = option[getOptkey()];
      return optid ? encodeURIComponent(optid) : '';
    };
    /**
     * 刷新选项，当选项被动态显示/隐藏时可能会用到
     */


    var refreshOption = function refreshOption() {
      var fullOptionList = reactData.fullOptionList,
          fullGroupList = reactData.fullGroupList;
      var isGroup = computeIsGroup.value;

      if (isGroup) {
        reactData.visibleGroupList = fullGroupList.filter(isOptionVisible);
      } else {
        reactData.visibleOptionList = fullOptionList.filter(isOptionVisible);
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var updateCache = function updateCache() {
      var fullOptionList = reactData.fullOptionList,
          fullGroupList = reactData.fullGroupList;
      var groupOptionsField = computeGroupOptionsField.value;
      var key = getOptkey();

      var handleOptis = function handleOptis(item) {
        if (!getOptid(item)) {
          item[key] = getOptUniqueId();
        }
      };

      if (fullGroupList.length) {
        fullGroupList.forEach(function (group) {
          handleOptis(group);

          if (group[groupOptionsField]) {
            group[groupOptionsField].forEach(handleOptis);
          }
        });
      } else if (fullOptionList.length) {
        fullOptionList.forEach(handleOptis);
      }

      refreshOption();
    };

    var setCurrentOption = function setCurrentOption(option) {
      var valueField = computeValueField.value;

      if (option) {
        reactData.currentValue = option[valueField];
      }
    };

    var scrollToOption = function scrollToOption(option, isAlignBottom) {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        if (option) {
          var optWrapperElem = refOptionWrapper.value;
          var panelElem = refOptionPanel.value;
          var optElem = panelElem.querySelector("[data-optid='".concat(getOptid(option), "']"));

          if (optWrapperElem && optElem) {
            var wrapperHeight = optWrapperElem.offsetHeight;
            var offsetPadding = 5;

            if (isAlignBottom) {
              if (optElem.offsetTop + optElem.offsetHeight - optWrapperElem.scrollTop > wrapperHeight) {
                optWrapperElem.scrollTop = optElem.offsetTop + optElem.offsetHeight - wrapperHeight;
              }
            } else {
              if (optElem.offsetTop + offsetPadding < optWrapperElem.scrollTop || optElem.offsetTop + offsetPadding > optWrapperElem.scrollTop + optWrapperElem.clientHeight) {
                optWrapperElem.scrollTop = optElem.offsetTop - offsetPadding;
              }
            }
          }
        }
      });
    };

    var updateZindex = function updateZindex() {
      if (reactData.panelIndex < UtilTools.getLastZIndex()) {
        reactData.panelIndex = UtilTools.nextZIndex();
      }
    };

    var updatePlacement = function updatePlacement() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var transfer = props.transfer,
            placement = props.placement;
        var panelIndex = reactData.panelIndex;
        var el = refElem.value;
        var panelElem = refOptionPanel.value;

        if (panelElem && el) {
          var targetHeight = el.offsetHeight;
          var targetWidth = el.offsetWidth;
          var panelHeight = panelElem.offsetHeight;
          var panelWidth = panelElem.offsetWidth;
          var marginSize = 5;
          var panelStyle = {
            zIndex: panelIndex
          };

          var _DomTools$getAbsolute = DomTools.getAbsolutePos(el),
              boundingTop = _DomTools$getAbsolute.boundingTop,
              boundingLeft = _DomTools$getAbsolute.boundingLeft,
              visibleHeight = _DomTools$getAbsolute.visibleHeight,
              visibleWidth = _DomTools$getAbsolute.visibleWidth;

          var panelPlacement = 'bottom';

          if (transfer) {
            var left = boundingLeft;
            var top = boundingTop + targetHeight;

            if (placement === 'top') {
              panelPlacement = 'top';
              top = boundingTop - panelHeight;
            } else if (!placement) {
              // 如果下面不够放，则向上
              if (top + panelHeight + marginSize > visibleHeight) {
                panelPlacement = 'top';
                top = boundingTop - panelHeight;
              } // 如果上面不够放，则向下（优先）


              if (top < marginSize) {
                panelPlacement = 'bottom';
                top = boundingTop + targetHeight;
              }
            } // 如果溢出右边


            if (left + panelWidth + marginSize > visibleWidth) {
              left -= left + panelWidth + marginSize - visibleWidth;
            } // 如果溢出左边


            if (left < marginSize) {
              left = marginSize;
            }

            Object.assign(panelStyle, {
              left: "".concat(left, "px"),
              top: "".concat(top, "px"),
              minWidth: "".concat(targetWidth, "px")
            });
          } else {
            if (placement === 'top') {
              panelPlacement = 'top';
              panelStyle.bottom = "".concat(targetHeight, "px");
            } else if (!placement) {
              // 如果下面不够放，则向上
              if (boundingTop + targetHeight + panelHeight > visibleHeight) {
                // 如果上面不够放，则向下（优先）
                if (boundingTop - targetHeight - panelHeight > marginSize) {
                  panelPlacement = 'top';
                  panelStyle.bottom = "".concat(targetHeight, "px");
                }
              }
            }
          }

          reactData.panelStyle = panelStyle;
          reactData.panelPlacement = panelPlacement;
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
        }
      });
    };

    var hidePanelTimeout;

    var showOptionPanel = function showOptionPanel() {
      if (!props.disabled) {
        clearTimeout(hidePanelTimeout);

        if (!reactData.inited) {
          reactData.inited = true;
        }

        reactData.isActivated = true;
        reactData.animatVisible = true;
        setTimeout(function () {
          var modelValue = props.modelValue,
              multiple = props.multiple;
          var currOption = findOption(multiple && modelValue ? modelValue[0] : modelValue);
          reactData.visiblePanel = true;

          if (currOption) {
            setCurrentOption(currOption);
            scrollToOption(currOption);
          }
        }, 10);
        updateZindex();
        updatePlacement();
      }
    };

    var hideOptionPanel = function hideOptionPanel() {
      reactData.visiblePanel = false;
      hidePanelTimeout = window.setTimeout(function () {
        reactData.animatVisible = false;
      }, 350);
    };

    var changeEvent = function changeEvent(evnt, selectValue) {
      if (selectValue !== props.modelValue) {
        emit('update:modelValue', selectValue);
        selectMethods.dispatchEvent('change', {
          value: selectValue
        }, evnt);
      }
    };

    var clearValueEvent = function clearValueEvent(evnt, selectValue) {
      changeEvent(evnt, selectValue);
      selectMethods.dispatchEvent('clear', {
        value: selectValue
      }, evnt);
    };

    var clearEvent = function clearEvent(params, evnt) {
      clearValueEvent(evnt, null);
      hideOptionPanel();
    };

    var changeOptionEvent = function changeOptionEvent(evnt, selectValue) {
      var modelValue = props.modelValue,
          multiple = props.multiple;

      if (multiple) {
        var multipleValue;

        if (modelValue) {
          if (modelValue.indexOf(selectValue) === -1) {
            multipleValue = modelValue.concat([selectValue]);
          } else {
            multipleValue = modelValue.filter(function (val) {
              return val !== selectValue;
            });
          }
        } else {
          multipleValue = [selectValue];
        }

        changeEvent(evnt, multipleValue);
      } else {
        changeEvent(evnt, selectValue);
        hideOptionPanel();
      }
    };

    var handleGlobalMousewheelEvent = function handleGlobalMousewheelEvent(evnt) {
      var disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel;

      if (!disabled) {
        if (visiblePanel) {
          var panelElem = refOptionPanel.value;

          if (DomTools.getEventTargetNode(evnt, panelElem).flag) {
            updatePlacement();
          } else {
            hideOptionPanel();
          }
        }
      }
    };

    var handleGlobalMousedownEvent = function handleGlobalMousedownEvent(evnt) {
      var disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel;

      if (!disabled) {
        var el = refElem.value;
        var panelElem = refOptionPanel.value;
        reactData.isActivated = DomTools.getEventTargetNode(evnt, el).flag || DomTools.getEventTargetNode(evnt, panelElem).flag;

        if (visiblePanel && !reactData.isActivated) {
          hideOptionPanel();
        }
      }
    };

    var findOffsetOption = function findOffsetOption(optionValue, isUpArrow) {
      var visibleOptionList = reactData.visibleOptionList,
          visibleGroupList = reactData.visibleGroupList;
      var isGroup = computeIsGroup.value;
      var valueField = computeValueField.value;
      var groupOptionsField = computeGroupOptionsField.value;
      var firstOption;
      var prevOption;
      var nextOption;
      var currOption;

      if (isGroup) {
        for (var gIndex = 0; gIndex < visibleGroupList.length; gIndex++) {
          var group = visibleGroupList[gIndex];
          var groupOptionList = group[groupOptionsField];
          var isGroupDisabled = group.disabled;

          if (groupOptionList) {
            for (var index = 0; index < groupOptionList.length; index++) {
              var option = groupOptionList[index];
              var isVisible = isOptionVisible(option);
              var isDisabled = isGroupDisabled || option.disabled;

              if (!firstOption && !isDisabled) {
                firstOption = option;
              }

              if (currOption) {
                if (isVisible && !isDisabled) {
                  nextOption = option;

                  if (!isUpArrow) {
                    return {
                      offsetOption: nextOption
                    };
                  }
                }
              }

              if (optionValue === option[valueField]) {
                currOption = option;

                if (isUpArrow) {
                  return {
                    offsetOption: prevOption
                  };
                }
              } else {
                if (isVisible && !isDisabled) {
                  prevOption = option;
                }
              }
            }
          }
        }
      } else {
        for (var _index = 0; _index < visibleOptionList.length; _index++) {
          var _option = visibleOptionList[_index];
          var _isDisabled = _option.disabled;

          if (!firstOption && !_isDisabled) {
            firstOption = _option;
          }

          if (currOption) {
            if (!_isDisabled) {
              nextOption = _option;

              if (!isUpArrow) {
                return {
                  offsetOption: nextOption
                };
              }
            }
          }

          if (optionValue === _option[valueField]) {
            currOption = _option;

            if (isUpArrow) {
              return {
                offsetOption: prevOption
              };
            }
          } else {
            if (!_isDisabled) {
              prevOption = _option;
            }
          }
        }
      }

      return {
        firstOption: firstOption
      };
    };

    var handleGlobalKeydownEvent = function handleGlobalKeydownEvent(evnt) {
      var clearable = props.clearable,
          disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel,
          currentValue = reactData.currentValue;

      if (!disabled) {
        var keyCode = evnt.keyCode;
        var isTab = keyCode === 9;
        var isEnter = keyCode === 13;
        var isEsc = keyCode === 27;
        var isUpArrow = keyCode === 38;
        var isDwArrow = keyCode === 40;
        var isDel = keyCode === 46;
        var isSpacebar = keyCode === 32;

        if (isTab) {
          reactData.isActivated = false;
        }

        if (visiblePanel) {
          if (isEsc || isTab) {
            hideOptionPanel();
          } else if (isEnter) {
            evnt.preventDefault();
            evnt.stopPropagation();
            changeOptionEvent(evnt, currentValue);
          } else if (isUpArrow || isDwArrow) {
            evnt.preventDefault();

            var _findOffsetOption = findOffsetOption(currentValue, isUpArrow),
                firstOption = _findOffsetOption.firstOption,
                offsetOption = _findOffsetOption.offsetOption;

            if (!offsetOption && !findOption(currentValue)) {
              offsetOption = firstOption;
            }

            setCurrentOption(offsetOption);
            scrollToOption(offsetOption, isDwArrow);
          } else if (isSpacebar) {
            evnt.preventDefault();
          }
        } else if ((isUpArrow || isDwArrow || isEnter || isSpacebar) && reactData.isActivated) {
          evnt.preventDefault();
          showOptionPanel();
        }

        if (reactData.isActivated) {
          if (isDel && clearable) {
            clearValueEvent(evnt, null);
          }
        }
      }
    };

    var handleGlobalBlurEvent = function handleGlobalBlurEvent() {
      hideOptionPanel();
    };

    var focusEvent = function focusEvent() {
      if (!props.disabled) {
        reactData.isActivated = true;
      }
    };

    var blurEvent = function blurEvent() {
      reactData.isActivated = false;
    };

    var togglePanelEvent = function togglePanelEvent(params) {
      var $event = params.$event;
      $event.preventDefault();

      if (reactData.visiblePanel) {
        hideOptionPanel();
      } else {
        showOptionPanel();
      }
    };

    var renderOption = function renderOption(list, group) {
      var optionKey = props.optionKey,
          modelValue = props.modelValue,
          multiple = props.multiple;
      var currentValue = reactData.currentValue;
      var labelField = computeLabelField.value;
      var valueField = computeValueField.value;
      var isGroup = computeIsGroup.value;
      return list.map(function (option, cIndex) {
        var isVisible = !isGroup || isOptionVisible(option);
        var isDisabled = group && group.disabled || option.disabled;
        var optionValue = option[valueField];
        var optid = getOptid(option);
        return isVisible ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          key: optionKey ? optid : cIndex,
          class: ['vxe-select-option', {
            'is--disabled': isDisabled,
            'is--selected': multiple ? modelValue && modelValue.indexOf(optionValue) > -1 : modelValue === optionValue,
            'is--hover': currentValue === optionValue
          }],
          // attrs
          'data-optid': optid,
          // event
          onClick: function onClick(evnt) {
            if (!isDisabled) {
              changeOptionEvent(evnt, optionValue);
            }
          },
          onMouseenter: function onMouseenter() {
            if (!isDisabled) {
              setCurrentOption(option);
            }
          }
        }, UtilTools.formatText(UtilTools.getFuncText(option[labelField]))) : null;
      });
    };

    var renderOptgroup = function renderOptgroup() {
      var optionKey = props.optionKey;
      var visibleGroupList = reactData.visibleGroupList;
      var groupLabelField = computeGroupLabelField.value;
      var groupOptionsField = computeGroupOptionsField.value;
      return visibleGroupList.map(function (group, gIndex) {
        var optid = getOptid(group);
        var isGroupDisabled = group.disabled;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          key: optionKey ? optid : gIndex,
          class: ['vxe-optgroup', {
            'is--disabled': isGroupDisabled
          }],
          // attrs
          'data-optid': optid
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-optgroup--title'
        }, UtilTools.getFuncText(group[groupLabelField])), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-optgroup--wrapper'
        }, renderOption(group[groupOptionsField], group))]);
      });
    };

    var renderOpts = function renderOpts() {
      var visibleGroupList = reactData.visibleGroupList,
          visibleOptionList = reactData.visibleOptionList;
      var isGroup = computeIsGroup.value;

      if (isGroup) {
        if (visibleGroupList.length) {
          return renderOptgroup();
        }
      } else {
        if (visibleOptionList.length) {
          return renderOption(visibleOptionList);
        }
      }

      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-select--empty-placeholder'
      }, props.emptyText || conf.i18n('vxe.select.emptyText'))];
    };

    selectMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $select: $xeselect,
          $event: evnt
        }, params));
      },
      isPanelVisible: function isPanelVisible() {
        return reactData.visiblePanel;
      },
      togglePanel: function togglePanel() {
        if (reactData.visiblePanel) {
          hideOptionPanel();
        } else {
          showOptionPanel();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      hidePanel: function hidePanel() {
        if (reactData.visiblePanel) {
          hideOptionPanel();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      showPanel: function showPanel() {
        if (!reactData.visiblePanel) {
          showOptionPanel();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      refreshOption: refreshOption,
      focus: function focus() {
        var $input = refInput.value;
        reactData.isActivated = true;
        $input.blur();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      blur: function blur() {
        var $input = refInput.value;
        $input.blur();
        reactData.isActivated = false;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    Object.assign($xeselect, selectMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return reactData.staticOptions;
    }, function (value) {
      if (value.some(function (item) {
        return item.options && item.options.length;
      })) {
        reactData.fullOptionList = [];
        reactData.fullGroupList = value;
      } else {
        reactData.fullGroupList = [];
        reactData.fullOptionList = value || [];
      }

      updateCache();
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.options;
    }, function (value) {
      reactData.fullGroupList = [];
      reactData.fullOptionList = value || [];
      updateCache();
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.optionGroups;
    }, function (value) {
      reactData.fullOptionList = [];
      reactData.fullGroupList = value || [];
      updateCache();
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      var options = props.options,
          optionGroups = props.optionGroups;

      if (optionGroups) {
        reactData.fullGroupList = optionGroups;
      } else if (options) {
        reactData.fullOptionList = options;
      }

      updateCache();
      GlobalEvent.on($xeselect, 'mousewheel', handleGlobalMousewheelEvent);
      GlobalEvent.on($xeselect, 'mousedown', handleGlobalMousedownEvent);
      GlobalEvent.on($xeselect, 'keydown', handleGlobalKeydownEvent);
      GlobalEvent.on($xeselect, 'blur', handleGlobalBlurEvent);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      GlobalEvent.off($xeselect, 'mousewheel');
      GlobalEvent.off($xeselect, 'mousedown');
      GlobalEvent.off($xeselect, 'keydown');
      GlobalEvent.off($xeselect, 'blur');
    });

    var renderVN = function renderVN() {
      var _ref, _ref2;

      var transfer = props.transfer,
          disabled = props.disabled;
      var inited = reactData.inited,
          isActivated = reactData.isActivated,
          visiblePanel = reactData.visiblePanel;
      var vSize = computeSize.value;
      var selectLabel = computeSelectLabel.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-select', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--visivle', visiblePanel), _defineProperty(_ref, 'is--disabled', disabled), _defineProperty(_ref, 'is--active', isActivated), _ref)]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-select-slots',
        ref: 'hideOption'
      }, slots.default ? slots.default({}) : []), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(InputComponent, {
        ref: refInput,
        clearable: props.clearable,
        placeholder: props.placeholder,
        readonly: true,
        disabled: disabled,
        type: 'text',
        prefixIcon: props.prefixIcon,
        suffixIcon: visiblePanel ? conf.icon.SELECT_OPEN : conf.icon.SELECT_CLOSE,
        modelValue: selectLabel,
        onClear: clearEvent,
        onClick: togglePanelEvent,
        onFocus: focusEvent,
        onBlur: blurEvent,
        onSuffixClick: togglePanelEvent
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(external_commonjs_vue_commonjs2_vue_root_Vue_["Teleport"], {
        to: 'body',
        disabled: transfer ? !inited : true
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refOptionPanel,
        class: ['vxe-table--ignore-clear vxe-select--panel', (_ref2 = {}, _defineProperty(_ref2, "size--".concat(vSize), vSize), _defineProperty(_ref2, 'is--transfer', transfer), _defineProperty(_ref2, 'animat--leave', reactData.animatVisible), _defineProperty(_ref2, 'animat--enter', visiblePanel), _ref2)],
        'data-placement': reactData.panelPlacement,
        style: reactData.panelStyle
      }, inited ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refOptionWrapper,
        class: 'vxe-select-option--wrapper'
      }, renderOpts())] : [])])]);
    };

    $xeselect.renderVN = renderVN;
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('$xeselect', $xeselect);
    return $xeselect;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/select/src/optionInfo.ts


var optionInfo_OptionInfo = /*#__PURE__*/function () {
  function OptionInfo($xeselect, _vm) {
    _classCallCheck(this, OptionInfo);

    Object.assign(this, {
      value: _vm.value,
      label: _vm.label,
      visible: _vm.visible,
      disabled: _vm.disabled
    });
  }

  _createClass(OptionInfo, [{
    key: "update",
    value: function update(name, value) {
      this[name] = value;
    }
  }]);

  return OptionInfo;
}();
// CONCATENATED MODULE: ./packages/select/src/util.ts








function isOption(option) {
  return option instanceof optionInfo_OptionInfo;
}
function createOption($xeselect, _vm) {
  return isOption(_vm) ? _vm : new optionInfo_OptionInfo($xeselect, _vm);
}
function watchOption(props, option) {
  Object.keys(props).forEach(function (name) {
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props[name];
    }, function (value) {
      option.update(name, value);
    });
  });
}
function assemOption($xeselect, el, option, optgroup) {
  var reactData = $xeselect.reactData;
  var staticOptions = reactData.staticOptions;
  var parentElem = el.parentNode;
  var parentOption = optgroup ? optgroup.option : null;
  var parentCols = parentOption ? parentOption.options : staticOptions;

  if (parentElem && parentCols) {
    parentCols.splice(ctor_amd_xe_utils_default.a.arrayIndexOf(parentElem.children, el), 0, option);
    reactData.staticOptions = staticOptions.slice(0);
  }
}
function destroyOption($xeselect, option) {
  var reactData = $xeselect.reactData;
  var staticOptions = reactData.staticOptions;
  var matchObj = ctor_amd_xe_utils_default.a.findTree(staticOptions, function (item) {
    return item.id === option.id;
  }, {
    children: 'options'
  });

  if (matchObj) {
    matchObj.items.splice(matchObj.index, 1);
  }

  reactData.staticOptions = staticOptions.slice(0);
}
// CONCATENATED MODULE: ./packages/select/src/option.ts



var option_optionProps = {
  value: null,
  label: {
    type: [String, Number, Boolean],
    default: ''
  },
  visible: {
    type: Boolean,
    default: null
  },
  disabled: Boolean
};
/* harmony default export */ var src_option = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeOption',
  props: option_optionProps,
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var elem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var $xeselect = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xeselect', null);
    var optgroup = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('xeoptgroup', null);
    var option = createOption($xeselect, props);
    option.slots = slots;
    watchOption(props, option);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      assemOption($xeselect, elem.value, option, optgroup);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      destroyOption($xeselect, option);
    });
    return function () {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: elem
      });
    };
  }
}));
// CONCATENATED MODULE: ./packages/select/src/optgroup.ts



var optgroupProps = {
  label: {
    type: [String, Number, Boolean],
    default: ''
  },
  visible: {
    type: Boolean,
    default: null
  },
  disabled: Boolean
};
/* harmony default export */ var src_optgroup = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeOptgroup',
  props: optgroupProps,
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var elem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var $xeselect = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xeselect', null);
    var option = createOption($xeselect, props);
    var xeoption = {
      option: option
    };
    option.options = [];
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["provide"])('xeoptgroup', xeoption);
    watchOption(props, option);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      assemOption($xeselect, elem.value, option);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      destroyOption($xeselect, option);
    });
    return function () {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: elem
      }, slots.default ? slots.default() : []);
    };
  }
}));
// CONCATENATED MODULE: ./packages/select/index.ts




var Select = {
  install: function install(app) {
    app.component(src_select.name, src_select);
    app.component(src_option.name, src_option);
    app.component(src_optgroup.name, src_optgroup);
  }
};
/* harmony default export */ var packages_select = (Select);
// CONCATENATED MODULE: ./packages/switch/src/switch.ts







/* harmony default export */ var src_switch = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeSwitch',
  props: {
    modelValue: [String, Number, Boolean],
    disabled: Boolean,
    size: {
      type: String,
      default: function _default() {
        return conf.switch.size || conf.size;
      }
    },
    openLabel: String,
    closeLabel: String,
    openValue: {
      type: [String, Number, Boolean],
      default: true
    },
    closeValue: {
      type: [String, Number, Boolean],
      default: false
    },
    openIcon: String,
    closeIcon: String
  },
  emits: ['update:modelValue', 'change', 'focus', 'blur'],
  setup: function setup(props, context) {
    var emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      isActivated: false,
      hasAnimat: false,
      offsetLeft: 0
    });
    var $xeswitch = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData
    };
    var refButton = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var switchMethods = {};
    var computeOnShowLabel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return UtilTools.getFuncText(props.openLabel);
    });
    var computeOffShowLabel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return UtilTools.getFuncText(props.closeLabel);
    });
    var computeIsChecked = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return props.modelValue === props.openValue;
    });

    var _atimeout;

    var clickEvent = function clickEvent(evnt) {
      if (!props.disabled) {
        var isChecked = computeIsChecked.value;
        clearTimeout(_atimeout);
        var value = isChecked ? props.closeValue : props.openValue;
        reactData.hasAnimat = true;
        emit('update:modelValue', value);
        switchMethods.dispatchEvent('change', {
          value: value
        }, evnt);
        _atimeout = setTimeout(function () {
          reactData.hasAnimat = false;
        }, 400);
      }
    };

    var focusEvent = function focusEvent(evnt) {
      reactData.isActivated = true;
      switchMethods.dispatchEvent('focus', {
        value: props.modelValue
      }, evnt);
    };

    var blurEvent = function blurEvent(evnt) {
      reactData.isActivated = false;
      switchMethods.dispatchEvent('blur', {
        value: props.modelValue
      }, evnt);
    };

    switchMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $switch: $xeswitch,
          $event: evnt
        }, params));
      },
      focus: function focus() {
        var btnElem = refButton.value;
        reactData.isActivated = true;
        btnElem.focus();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      blur: function blur() {
        var btnElem = refButton.value;
        btnElem.blur();
        reactData.isActivated = false;
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    Object.assign($xeswitch, switchMethods);

    var renderVN = function renderVN() {
      var _ref;

      var disabled = props.disabled,
          openIcon = props.openIcon,
          closeIcon = props.closeIcon;
      var isChecked = computeIsChecked.value;
      var vSize = computeSize.value;
      var onShowLabel = computeOnShowLabel.value;
      var offShowLabel = computeOffShowLabel.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: ['vxe-switch', isChecked ? 'is--on' : 'is--off', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--disabled', disabled), _defineProperty(_ref, 'is--animat', reactData.hasAnimat), _ref)]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
        ref: refButton,
        class: 'vxe-switch--button',
        type: 'button',
        disabled: disabled,
        onClick: clickEvent,
        onFocus: focusEvent,
        onBlur: blurEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-switch--label vxe-switch--label-on'
      }, [openIcon ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-switch--label-icon', openIcon]
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), onShowLabel]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-switch--label vxe-switch--label-off'
      }, [closeIcon ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
        class: ['vxe-switch--label-icon', closeIcon]
      }) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), offShowLabel]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-switch--icon'
      })])]);
    };

    $xeswitch.renderVN = renderVN;
    return $xeswitch;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/switch/index.ts


var Switch = {
  install: function install(app) {
    app.component(src_switch.name, src_switch);
  }
};
/* harmony default export */ var packages_switch = (Switch);
// CONCATENATED MODULE: ./packages/list/src/list.ts









var list_browse = DomTools.browse;
/* harmony default export */ var src_list = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeList',
  props: {
    data: Array,
    height: [Number, String],
    maxHeight: [Number, String],
    loading: Boolean,
    size: {
      type: String,
      default: function _default() {
        return conf.list.size || conf.size;
      }
    },
    autoResize: Boolean,
    syncResize: [Boolean, String, Number],
    scrollY: Object
  },
  emits: ['scroll'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      scrollYLoad: false,
      bodyHeight: 0,
      rowHeight: 0,
      topSpaceHeight: 0,
      items: []
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refVirtualWrapper = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refVirtualBody = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var internalData = {
      fullData: [],
      lastScrollLeft: 0,
      lastScrollTop: 0,
      scrollYStore: {
        startIndex: 0,
        endIndex: 0,
        visibleIndex: 0,
        visibleSize: 0,
        offsetSize: 0,
        rowHeight: 0
      }
    };
    var refMaps = {
      refElem: refElem
    };
    var $xelist = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData,
      internalData: internalData,
      refMaps: refMaps
    };
    var listMethods = {};
    var computeSYOpts = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      return Object.assign({}, conf.list.scrollY, props.scrollY);
    });
    var computeStyles = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var height = props.height,
          maxHeight = props.maxHeight;
      var style = {};

      if (height) {
        style.height = UtilTools.isNumVal(height) ? "".concat(height, "px") : height;
      } else if (maxHeight) {
        style.height = 'auto';
        style.maxHeight = UtilTools.isNumVal(maxHeight) ? "".concat(maxHeight, "px") : maxHeight;
      }

      return style;
    });

    var updateYSpace = function updateYSpace() {
      var scrollYLoad = reactData.scrollYLoad;
      var scrollYStore = internalData.scrollYStore,
          fullData = internalData.fullData;
      reactData.bodyHeight = scrollYLoad ? fullData.length * scrollYStore.rowHeight : 0;
      reactData.topSpaceHeight = scrollYLoad ? Math.max(scrollYStore.startIndex * scrollYStore.rowHeight, 0) : 0;
    };

    var handleData = function handleData() {
      var scrollYLoad = reactData.scrollYLoad;
      var fullData = internalData.fullData,
          scrollYStore = internalData.scrollYStore;
      reactData.items = scrollYLoad ? fullData.slice(scrollYStore.startIndex, scrollYStore.endIndex) : fullData.slice(0);
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var updateYData = function updateYData() {
      handleData();
      updateYSpace();
    };

    var computeScrollLoad = function computeScrollLoad() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var scrollYLoad = reactData.scrollYLoad;
        var scrollYStore = internalData.scrollYStore;
        var virtualBodyElem = refVirtualBody.value;
        var sYOpts = computeSYOpts.value;
        var rowHeight = 0;
        var firstItemElem;

        if (sYOpts.sItem) {
          firstItemElem = virtualBodyElem.querySelector(sYOpts.sItem);
        }

        if (!firstItemElem) {
          firstItemElem = virtualBodyElem.children[0];
        }

        if (firstItemElem) {
          rowHeight = firstItemElem.offsetHeight;
        }

        rowHeight = Math.max(20, rowHeight);
        scrollYStore.rowHeight = rowHeight; // 计算 Y 逻辑

        if (scrollYLoad) {
          var scrollBodyElem = refVirtualWrapper.value;
          var visibleYSize = Math.max(8, Math.ceil(scrollBodyElem.clientHeight / rowHeight));
          var offsetYSize = sYOpts.oSize ? ctor_amd_xe_utils_default.a.toNumber(sYOpts.oSize) : list_browse.edge ? 10 : 0;
          scrollYStore.offsetSize = offsetYSize;
          scrollYStore.visibleSize = visibleYSize;
          scrollYStore.endIndex = Math.max(scrollYStore.startIndex, visibleYSize + offsetYSize, scrollYStore.endIndex);
          updateYData();
        } else {
          updateYSpace();
        }

        reactData.rowHeight = rowHeight;
      });
    };
    /**
     * 清除滚动条
     */


    var clearScroll = function clearScroll() {
      var scrollBodyElem = refVirtualWrapper.value;

      if (scrollBodyElem) {
        scrollBodyElem.scrollTop = 0;
      }

      return new Promise(function (resolve) {
        requestAnimationFrame(function () {
          resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])());
        });
      });
    };
    /**
     * 如果有滚动条，则滚动到对应的位置
     * @param {Number} scrollLeft 左距离
     * @param {Number} scrollTop 上距离
     */


    var scrollTo = function scrollTo(scrollLeft, scrollTop) {
      var scrollBodyElem = refVirtualWrapper.value;

      if (ctor_amd_xe_utils_default.a.isNumber(scrollLeft)) {
        scrollBodyElem.scrollLeft = scrollLeft;
      }

      if (ctor_amd_xe_utils_default.a.isNumber(scrollTop)) {
        scrollBodyElem.scrollTop = scrollTop;
      }

      if (reactData.scrollYLoad) {
        return new Promise(function (resolve) {
          return setTimeout(function () {
            return resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])());
          }, 50);
        });
      }

      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };
    /**
     * 刷新滚动条
     */


    var refreshScroll = function refreshScroll() {
      var lastScrollLeft = internalData.lastScrollLeft,
          lastScrollTop = internalData.lastScrollTop;
      return clearScroll().then(function () {
        if (lastScrollLeft || lastScrollTop) {
          internalData.lastScrollLeft = 0;
          internalData.lastScrollTop = 0;
          return scrollTo(lastScrollLeft, lastScrollTop);
        }
      });
    };
    /**
     * 重新计算列表
     */


    var recalculate = function recalculate() {
      var el = refElem.value;

      if (el.clientWidth && el.clientHeight) {
        return computeScrollLoad();
      }

      return Promise.resolve();
    };

    var loadYData = function loadYData(evnt) {
      var scrollYStore = internalData.scrollYStore;
      var startIndex = scrollYStore.startIndex,
          endIndex = scrollYStore.endIndex,
          visibleSize = scrollYStore.visibleSize,
          offsetSize = scrollYStore.offsetSize,
          rowHeight = scrollYStore.rowHeight;
      var scrollBodyElem = evnt.target;
      var scrollTop = scrollBodyElem.scrollTop;
      var toVisibleIndex = Math.floor(scrollTop / rowHeight);
      var offsetStartIndex = Math.max(0, toVisibleIndex - 1 - offsetSize);
      var offsetEndIndex = toVisibleIndex + visibleSize + offsetSize;

      if (toVisibleIndex <= startIndex || toVisibleIndex >= endIndex - visibleSize - 1) {
        if (startIndex !== offsetStartIndex || endIndex !== offsetEndIndex) {
          scrollYStore.startIndex = offsetStartIndex;
          scrollYStore.endIndex = offsetEndIndex;
          updateYData();
        }
      }
    };

    var scrollEvent = function scrollEvent(evnt) {
      var scrollBodyElem = evnt.target;
      var scrollTop = scrollBodyElem.scrollTop;
      var scrollLeft = scrollBodyElem.scrollLeft;
      var isX = scrollLeft !== internalData.lastScrollLeft;
      var isY = scrollTop !== internalData.lastScrollTop;
      internalData.lastScrollTop = scrollTop;
      internalData.lastScrollLeft = scrollLeft;

      if (reactData.scrollYLoad) {
        loadYData(evnt);
      }

      listMethods.dispatchEvent('scroll', {
        scrollLeft: scrollLeft,
        scrollTop: scrollTop,
        isX: isX,
        isY: isY
      }, evnt);
    };

    listMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $list: $xelist,
          $event: evnt
        }, params));
      },

      /**
       * 加载数据
       * @param {Array} datas 数据
       */
      loadData: function loadData(datas) {
        var scrollYStore = internalData.scrollYStore;
        var sYOpts = computeSYOpts.value;
        var fullData = datas || [];
        scrollYStore.startIndex = 0;
        scrollYStore.visibleIndex = 0;
        internalData.fullData = fullData;
        reactData.scrollYLoad = sYOpts.gt > -1 && sYOpts.gt <= fullData.length;
        handleData();
        return computeScrollLoad().then(function () {
          refreshScroll();
        });
      },

      /**
       * 重新加载数据
       * @param {Array} datas 数据
       */
      reloadData: function reloadData(datas) {
        clearScroll();
        return listMethods.loadData(datas);
      },
      recalculate: recalculate,
      scrollTo: scrollTo,
      refreshScroll: refreshScroll,
      clearScroll: clearScroll
    };
    Object.assign($xelist, listMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.data;
    }, function (value) {
      listMethods.loadData(value || []);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["watch"])(function () {
      return props.syncResize;
    }, function (value) {
      if (value) {
        recalculate();
        Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
          return setTimeout(function () {
            return recalculate();
          });
        });
      }
    });
    var resizeObserver;
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      GlobalEvent.on($xelist, 'resize', function () {
        recalculate();
      });

      if (props.autoResize) {
        var el = refElem.value;
        resizeObserver = createResizeEvent(function () {
          return recalculate();
        });
        resizeObserver.observe(el);
      }

      listMethods.loadData(props.data || []);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      if (resizeObserver) {
        resizeObserver.disconnect();
      }

      GlobalEvent.off($xelist, 'resize');
    });

    var renderVN = function renderVN() {
      var _ref;

      var loading = props.loading;
      var bodyHeight = reactData.bodyHeight,
          topSpaceHeight = reactData.topSpaceHeight,
          items = reactData.items;
      var vSize = computeSize.value;
      var styles = computeStyles.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-list', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--loading', loading), _ref)]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refVirtualWrapper,
        class: 'vxe-list--virtual-wrapper',
        style: styles,
        onScroll: scrollEvent
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-list--y-space',
        style: {
          height: bodyHeight ? "".concat(bodyHeight, "px") : ''
        }
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refVirtualBody,
        class: 'vxe-list--body',
        style: {
          marginTop: topSpaceHeight ? "".concat(topSpaceHeight, "px") : ''
        }
      }, slots.default ? slots.default({
        items: items,
        $list: $xelist
      }) : [])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: ['vxe-list--loading vxe-loading', {
          'is--visible': loading
        }]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-loading--spinner'
      })])]);
    };

    $xelist.renderVN = renderVN;
    return $xelist;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/list/index.ts


var List = {
  install: function install(app) {
    app.component(src_list.name, src_list);
  }
};
/* harmony default export */ var packages_list = (List);
// CONCATENATED MODULE: ./packages/pulldown/src/pulldown.ts







/* harmony default export */ var pulldown = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxePulldown',
  props: {
    disabled: Boolean,
    placement: String,
    size: {
      type: String,
      default: function _default() {
        return conf.size;
      }
    },
    destroyOnClose: Boolean,
    transfer: Boolean
  },
  emits: ['hide-panel'],
  setup: function setup(props, context) {
    var slots = context.slots,
        emit = context.emit;
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var computeSize = useSize(props);
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      inited: false,
      panelIndex: 0,
      panelStyle: null,
      panelPlacement: null,
      visiblePanel: false,
      animatVisible: false,
      isActivated: false
    });
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refPulldowContent = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refPulldowPnanel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xepulldown = {
      xID: xID,
      props: props,
      context: context,
      reactData: reactData,
      refMaps: refMaps
    };
    var pulldownMethods = {};

    var updateZindex = function updateZindex() {
      if (reactData.panelIndex < UtilTools.getLastZIndex()) {
        reactData.panelIndex = UtilTools.nextZIndex();
      }
    };

    var isPanelVisible = function isPanelVisible() {
      return reactData.visiblePanel;
    };
    /**
     * 手动更新位置
     */


    var updatePlacement = function updatePlacement() {
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
        var transfer = props.transfer,
            placement = props.placement;
        var panelIndex = reactData.panelIndex,
            visiblePanel = reactData.visiblePanel;

        if (visiblePanel) {
          var targetElem = refPulldowContent.value;
          var panelElem = refPulldowPnanel.value;

          if (panelElem && targetElem) {
            var targetHeight = targetElem.offsetHeight;
            var targetWidth = targetElem.offsetWidth;
            var panelHeight = panelElem.offsetHeight;
            var panelWidth = panelElem.offsetWidth;
            var marginSize = 5;
            var panelStyle = {
              zIndex: panelIndex
            };

            var _DomTools$getAbsolute = DomTools.getAbsolutePos(targetElem),
                boundingTop = _DomTools$getAbsolute.boundingTop,
                boundingLeft = _DomTools$getAbsolute.boundingLeft,
                visibleHeight = _DomTools$getAbsolute.visibleHeight,
                visibleWidth = _DomTools$getAbsolute.visibleWidth;

            var panelPlacement = 'bottom';

            if (transfer) {
              var left = boundingLeft;
              var top = boundingTop + targetHeight;

              if (placement === 'top') {
                panelPlacement = 'top';
                top = boundingTop - panelHeight;
              } else if (!placement) {
                // 如果下面不够放，则向上
                if (top + panelHeight + marginSize > visibleHeight) {
                  panelPlacement = 'top';
                  top = boundingTop - panelHeight;
                } // 如果上面不够放，则向下（优先）


                if (top < marginSize) {
                  panelPlacement = 'bottom';
                  top = boundingTop + targetHeight;
                }
              } // 如果溢出右边


              if (left + panelWidth + marginSize > visibleWidth) {
                left -= left + panelWidth + marginSize - visibleWidth;
              } // 如果溢出左边


              if (left < marginSize) {
                left = marginSize;
              }

              Object.assign(panelStyle, {
                left: "".concat(left, "px"),
                top: "".concat(top, "px"),
                minWidth: "".concat(targetWidth, "px")
              });
            } else {
              if (placement === 'top') {
                panelPlacement = 'top';
                panelStyle.bottom = "".concat(targetHeight, "px");
              } else if (!placement) {
                // 如果下面不够放，则向上
                if (boundingTop + targetHeight + panelHeight > visibleHeight) {
                  // 如果上面不够放，则向下（优先）
                  if (boundingTop - targetHeight - panelHeight > marginSize) {
                    panelPlacement = 'top';
                    panelStyle.bottom = "".concat(targetHeight, "px");
                  }
                }
              }
            }

            reactData.panelStyle = panelStyle;
            reactData.panelPlacement = panelPlacement;
          }
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      });
    };

    var hidePanelTimeout;
    /**
     * 显示下拉面板
     */

    var showPanel = function showPanel() {
      if (!reactData.inited) {
        reactData.inited = true;
      }

      return new Promise(function (resolve) {
        if (!props.disabled) {
          clearTimeout(hidePanelTimeout);
          reactData.isActivated = true;
          reactData.animatVisible = true;
          setTimeout(function () {
            reactData.visiblePanel = true;
            updatePlacement();
            setTimeout(function () {
              resolve(updatePlacement());
            }, 40);
          }, 10);
          updateZindex();
        } else {
          resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])());
        }
      });
    };
    /**
     * 隐藏下拉面板
     */


    var hidePanel = function hidePanel() {
      reactData.visiblePanel = false;
      return new Promise(function (resolve) {
        if (reactData.animatVisible) {
          hidePanelTimeout = window.setTimeout(function () {
            reactData.animatVisible = false;
            resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])());
          }, 350);
        } else {
          resolve(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])());
        }
      });
    };
    /**
     * 切换下拉面板
     */


    var togglePanel = function togglePanel() {
      if (reactData.visiblePanel) {
        return hidePanel();
      }

      return showPanel();
    };

    var handleGlobalMousewheelEvent = function handleGlobalMousewheelEvent(evnt) {
      var disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel;
      var panelElem = refPulldowPnanel.value;

      if (!disabled) {
        if (visiblePanel) {
          if (DomTools.getEventTargetNode(evnt, panelElem).flag) {
            updatePlacement();
          } else {
            hidePanel();
            pulldownMethods.dispatchEvent('hide-panel', {}, evnt);
          }
        }
      }
    };

    var handleGlobalMousedownEvent = function handleGlobalMousedownEvent(evnt) {
      var disabled = props.disabled;
      var visiblePanel = reactData.visiblePanel;
      var el = refElem.value;
      var panelElem = refPulldowPnanel.value;

      if (!disabled) {
        reactData.isActivated = DomTools.getEventTargetNode(evnt, el).flag || DomTools.getEventTargetNode(evnt, panelElem).flag;

        if (visiblePanel && !reactData.isActivated) {
          hidePanel();
          pulldownMethods.dispatchEvent('hide-panel', {}, evnt);
        }
      }
    };

    var handleGlobalBlurEvent = function handleGlobalBlurEvent(evnt) {
      if (reactData.visiblePanel) {
        hidePanel();
        pulldownMethods.dispatchEvent('hide-panel', {}, evnt);
      }
    };

    pulldownMethods = {
      dispatchEvent: function dispatchEvent(type, params, evnt) {
        emit(type, Object.assign({
          $pulldown: $xepulldown,
          $event: evnt
        }, params));
      },
      isPanelVisible: isPanelVisible,
      togglePanel: togglePanel,
      showPanel: showPanel,
      hidePanel: hidePanel
    };
    Object.assign($xepulldown, pulldownMethods);
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
      GlobalEvent.on($xepulldown, 'mousewheel', handleGlobalMousewheelEvent);
      GlobalEvent.on($xepulldown, 'mousedown', handleGlobalMousedownEvent);
      GlobalEvent.on($xepulldown, 'blur', handleGlobalBlurEvent);
    });
    Object(external_commonjs_vue_commonjs2_vue_root_Vue_["onUnmounted"])(function () {
      GlobalEvent.off($xepulldown, 'mousewheel');
      GlobalEvent.off($xepulldown, 'mousedown');
      GlobalEvent.off($xepulldown, 'blur');
    });

    var renderVN = function renderVN() {
      var _ref, _ref2;

      var destroyOnClose = props.destroyOnClose,
          transfer = props.transfer,
          disabled = props.disabled;
      var inited = reactData.inited,
          isActivated = reactData.isActivated,
          animatVisible = reactData.animatVisible,
          visiblePanel = reactData.visiblePanel,
          panelStyle = reactData.panelStyle,
          panelPlacement = reactData.panelPlacement;
      var vSize = computeSize.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-pulldown', (_ref = {}, _defineProperty(_ref, "size--".concat(vSize), vSize), _defineProperty(_ref, 'is--visivle', visiblePanel), _defineProperty(_ref, 'is--disabled', disabled), _defineProperty(_ref, 'is--active', isActivated), _ref)]
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refPulldowContent,
        class: 'vxe-pulldown--content'
      }, slots.default ? slots.default({
        $pulldown: $xepulldown
      }) : []), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(external_commonjs_vue_commonjs2_vue_root_Vue_["Teleport"], {
        to: 'body',
        disabled: transfer ? !inited : true
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refPulldowPnanel,
        class: ['vxe-table--ignore-clear vxe-pulldown--panel', (_ref2 = {}, _defineProperty(_ref2, "size--".concat(vSize), vSize), _defineProperty(_ref2, 'is--transfer', transfer), _defineProperty(_ref2, 'animat--leave', animatVisible), _defineProperty(_ref2, 'animat--enter', visiblePanel), _ref2)],
        attrs: {
          'data-placement': panelPlacement
        },
        style: panelStyle
      }, slots.dropdown ? !inited || destroyOnClose && !visiblePanel && !animatVisible ? [] : slots.dropdown({
        $pulldown: $xepulldown
      }) : [])])]);
    };

    $xepulldown.renderVN = renderVN;
    return $xepulldown;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/pulldown/index.ts


var Pulldown = {
  install: function install(app) {
    app.component(pulldown.name, pulldown);
  }
};
/* harmony default export */ var packages_pulldown = (Pulldown);
// CONCATENATED MODULE: ./packages/filter/src/panel.ts











/* harmony default export */ var panel = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTableFilter',
  props: {
    filterStore: Object
  },
  setup: function setup(props) {
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var tableReactData = $xetable.reactData,
        tableInternalData = $xetable.internalData,
        tableComputeMaps = $xetable.computeMaps;
    var computeFilterOpts = tableComputeMaps.computeFilterOpts;
    var computeHasCheckOption = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var filterStore = props.filterStore;
      return filterStore && filterStore.options.some(function (option) {
        return option.checked;
      });
    }); // 全部筛选事件

    var filterCheckAllEvent = function filterCheckAllEvent(evnt, value) {
      var filterStore = props.filterStore;
      filterStore.options.forEach(function (option) {
        option._checked = value;
        option.checked = value;
      });
      filterStore.isAllSelected = value;
      filterStore.isIndeterminate = false;
    };
    /**
     * 确认筛选
     * 当筛选面板中的确定按钮被按下时触发
     * @param {Event} evnt 事件
     */


    var confirmFilterEvent = function confirmFilterEvent(evnt) {
      var filterStore = tableReactData.filterStore,
          scrollXLoad = tableReactData.scrollXLoad,
          scrollYLoad = tableReactData.scrollYLoad;
      var filterOpts = computeFilterOpts.value;
      var column = filterStore.column;
      var property = column.property;
      var values = [];
      var datas = [];
      column.filters.forEach(function (item) {
        if (item.checked) {
          values.push(item.value);
          datas.push(item.data);
        }
      });
      filterStore.visible = false; // 如果是服务端筛选，则跳过本地筛选处理

      if (!filterOpts.remote) {
        $xetable.handleTableData(true);
        $xetable.checkSelectionStatus();
      }

      var filterList = $xetable.getCheckedFilters();
      $xetable.dispatchEvent('filter-change', {
        column: column,
        property: property,
        values: values,
        datas: datas,
        filters: filterList,
        filterList: filterList
      }, evnt);
      $xetable.updateFooter();

      if (scrollXLoad || scrollYLoad) {
        $xetable.clearScroll();

        if (scrollYLoad) {
          $xetable.updateScrollYSpace();
        }
      }

      $xetable.closeFilter();
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        $xetable.recalculate();
        $xetable.updateCellAreas();
      });
    };
    /*************************
     * Publish methods
     *************************/
    // 确认筛选


    var confirmFilter = function confirmFilter(evnt) {
      var filterStore = props.filterStore;
      filterStore.options.forEach(function (option) {
        option.checked = option._checked;
      });
      confirmFilterEvent(evnt);
    }; // （单选）筛选发生改变


    var changeRadioOption = function changeRadioOption(evnt, checked, item) {
      var filterStore = props.filterStore;
      filterStore.options.forEach(function (option) {
        option._checked = false;
      });
      item._checked = checked;
      $xetable.checkFilterOptions();
      confirmFilter(evnt);
    };
    /**
     * 重置筛选
     * 当筛选面板中的重置按钮被按下时触发
     * @param {Event} evnt 事件
     */


    var resetFilter = function resetFilter(evnt) {
      var filterStore = props.filterStore;
      $xetable.handleClearFilter(filterStore.column);
      confirmFilterEvent(evnt);
    }; // （多选）筛选发生改变


    var changeMultipleOption = function changeMultipleOption(evnt, checked, item) {
      item._checked = checked;
      $xetable.checkFilterOptions();
    }; // 筛选发生改变


    var changeOption = function changeOption(evnt, checked, item) {
      var filterStore = props.filterStore;

      if (filterStore.multiple) {
        changeMultipleOption(evnt, checked, item);
      } else {
        changeRadioOption(evnt, checked, item);
      }
    };

    var changeAllOption = function changeAllOption(evnt, checked) {
      var filterStore = props.filterStore;

      if (filterStore.multiple) {
        filterCheckAllEvent(evnt, checked);
      } else {
        resetFilter(evnt);
      }
    };
    /*************************
     * Publish methods
     *************************/


    var $panel = {
      changeRadioOption: changeRadioOption,
      changeMultipleOption: changeMultipleOption,
      changeAllOption: changeAllOption,
      changeOption: changeOption,
      confirmFilter: confirmFilter,
      resetFilter: resetFilter
    };

    var renderOptions = function renderOptions(filterRender, compConf) {
      var filterStore = props.filterStore;
      var column = filterStore.column,
          multiple = filterStore.multiple;
      var slots = column.slots;
      var params = Object.assign({}, tableInternalData._currFilterParams, {
        $panel: $panel,
        $table: $xetable
      });

      if (slots && slots.filter) {
        return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-table--filter-template'
        }, slots.filter(params))];
      } else if (compConf && compConf.renderFilter) {
        return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
          class: 'vxe-table--filter-template'
        }, compConf.renderFilter(filterRender, params))];
      }

      return [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
        class: 'vxe-table--filter-header'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
        class: ['vxe-table--filter-option', {
          'is--checked': multiple ? filterStore.isAllSelected : !filterStore.options.some(function (item) {
            return item._checked;
          }),
          'is--indeterminate': multiple && filterStore.isIndeterminate
        }],
        title: conf.i18n(multiple ? 'vxe.table.allTitle' : 'vxe.table.allFilter'),
        onClick: function onClick(evnt) {
          changeAllOption(evnt, !filterStore.isAllSelected);
        }
      }, (multiple ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
      }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
      })] : []).concat([Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
        class: 'vxe-checkbox--label'
      }, conf.i18n('vxe.table.allFilter'))]))]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
        class: 'vxe-table--filter-body'
      }, filterStore.options.map(function (item) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
          class: ['vxe-table--filter-option', {
            'is--checked': item._checked
          }],
          title: item.label,
          onClick: function onClick(evnt) {
            changeOption(evnt, !item._checked, item);
          }
        }, (multiple ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
        }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
        }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
        })] : []).concat([Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--label'
        }, UtilTools.formatText(item.label, 1))]));
      }))];
    };

    var renderFooters = function renderFooters() {
      var filterStore = props.filterStore;
      var column = filterStore.column,
          multiple = filterStore.multiple;
      var hasCheckOption = computeHasCheckOption.value;
      var filterRender = column.filterRender;
      var compConf = filterRender ? v_x_e_table.renderer.get(filterRender.name) : null;
      var isDisabled = !hasCheckOption && !filterStore.isAllSelected && !filterStore.isIndeterminate;
      return multiple && (!compConf || compConf.isFooter !== false) ? [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: 'vxe-table--filter-footer'
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
        class: {
          'is--disabled': isDisabled
        },
        disabled: isDisabled,
        onClick: confirmFilter
      }, conf.i18n('vxe.table.confirmFilter')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
        onClick: resetFilter
      }, conf.i18n('vxe.table.resetFilter'))])] : [];
    };

    var renderVN = function renderVN() {
      var filterStore = props.filterStore;
      var column = filterStore.column;
      var filterRender = column ? column.filterRender : null;
      var compConf = filterRender ? v_x_e_table.renderer.get(filterRender.name) : null;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        class: ['vxe-table--filter-wrapper', 'filter--prevent-default', compConf && compConf.className ? compConf.className : '', {
          't--animat': $xetable.props.animat,
          'is--multiple': filterStore.multiple,
          'filter--active': filterStore.visible
        }],
        style: filterStore.style
      }, filterStore.visible ? renderOptions(filterRender, compConf).concat(renderFooters()) : []);
    };

    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/filter/src/hook.ts












var hook_toFilters = UtilTools.toFilters;
var tableFilterMethodKeys = ['setFilter', 'clearFilter', 'getCheckedFilters'];
var tableFilterHook = {
  setupTable: function setupTable($xetable) {
    var reactData = $xetable.reactData,
        internalData = $xetable.internalData,
        refMaps = $xetable.refMaps,
        computeMaps = $xetable.computeMaps;
    var refTableBody = refMaps.refTableBody,
        refTableFilter = refMaps.refTableFilter;
    var computeFilterOpts = computeMaps.computeFilterOpts;
    var filterPrivateMethods = {
      checkFilterOptions: function checkFilterOptions() {
        var filterStore = reactData.filterStore;
        filterStore.isAllSelected = filterStore.options.every(function (item) {
          return item._checked;
        });
        filterStore.isIndeterminate = !filterStore.isAllSelected && filterStore.options.some(function (item) {
          return item._checked;
        });
      },

      /**
       * 点击筛选事件
       * 当筛选图标被点击时触发
       * 更新选项是否全部状态
       * 打开筛选面板
       * @param {Event} evnt 事件
       * @param {ColumnInfo} column 列配置
       * @param {Object} params 参数
       */
      triggerFilterEvent: function triggerFilterEvent(evnt, column, params) {
        var initStore = reactData.initStore,
            filterStore = reactData.filterStore;

        if (filterStore.column === column && filterStore.visible) {
          filterStore.visible = false;
        } else {
          var targetElem = evnt.target,
              pageX = evnt.pageX;

          var _DomTools$getDomNode = DomTools.getDomNode(),
              visibleWidth = _DomTools$getDomNode.visibleWidth;

          internalData._currFilterParams = params;
          Object.assign(filterStore, {
            multiple: column.filterMultiple,
            options: column.filters,
            column: column,
            style: null
          }); // 复原状态

          filterStore.options.forEach(function (option) {
            option._checked = option.checked;
          });
          this.checkFilterOptions();
          filterStore.visible = true;
          initStore.filter = true;
          Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
            var tableBody = refTableBody.value;
            var bodyElem = tableBody.$el;
            var tableFilter = refTableFilter.value;
            var filterWrapperElem = tableFilter ? tableFilter.$el : null;
            var filterWidth = filterWrapperElem ? filterWrapperElem.offsetWidth : 0;
            var centerWidth = filterWidth / 2;
            var minMargin = 32;
            var left, right;
            var style = {
              top: "".concat(targetElem.offsetTop + targetElem.offsetParent.offsetTop + targetElem.offsetHeight + 8, "px")
            };

            if (column.fixed === 'left') {
              left = targetElem.offsetLeft + targetElem.offsetParent.offsetLeft - centerWidth;
            } else if (column.fixed === 'right') {
              right = targetElem.offsetParent.offsetWidth - targetElem.offsetLeft + (targetElem.offsetParent.offsetParent.offsetWidth - targetElem.offsetParent.offsetLeft) - column.renderWidth - centerWidth;
            } else {
              left = targetElem.offsetLeft + targetElem.offsetParent.offsetLeft - centerWidth - bodyElem.scrollLeft;
            }

            if (left) {
              var overflowWidth = pageX + filterWidth - centerWidth + minMargin - visibleWidth;

              if (overflowWidth > 0) {
                left -= overflowWidth;
              }

              style.left = "".concat(Math.max(minMargin, left), "px");
            } else if (right) {
              var _overflowWidth = pageX + filterWidth - centerWidth + minMargin - visibleWidth;

              if (_overflowWidth > 0) {
                right += _overflowWidth;
              }

              style.right = "".concat(right, "px");
            }

            filterStore.style = style;
          });
        }
      },
      handleClearFilter: function handleClearFilter(column) {
        if (column) {
          var filters = column.filters,
              filterRender = column.filterRender;

          if (filters) {
            filters.forEach(function (item) {
              item._checked = false;
              item.checked = false;
              item.data = ctor_amd_xe_utils_default.a.clone(item.resetValue, true);
            });
            var compConf = filterRender ? v_x_e_table.renderer.get(filterRender.name) : null;

            if (compConf && compConf.filterResetMethod) {
              compConf.filterResetMethod({
                options: filters,
                column: column,
                $table: $xetable
              });
            }
          }
        }
      }
    };
    var filterMethods = {
      /**
       * 修改筛选条件列表
       * @param {ColumnInfo} column 列
       * @param {Array} options 选项
       */
      setFilter: function setFilter(column, options) {
        if (column.filters && options) {
          column.filters = hook_toFilters(options);
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 清空指定列的筛选条件
       * 如果为空则清空所有列的筛选条件
       * @param {String} column 列或字段名
       */
      clearFilter: function clearFilter(column) {
        var filterStore = reactData.filterStore;
        var tableFullColumn = internalData.tableFullColumn;
        var filterOpts = computeFilterOpts.value;

        if (column && ctor_amd_xe_utils_default.a.isString(column)) {
          column = $xetable.getColumnByField(column);
        }

        if (column) {
          filterPrivateMethods.handleClearFilter(column);
        } else {
          tableFullColumn.forEach(filterPrivateMethods.handleClearFilter);
        }

        if (!column || column !== filterStore.column) {
          Object.assign(filterStore, {
            isAllSelected: false,
            isIndeterminate: false,
            style: null,
            options: [],
            column: null,
            multiple: false,
            visible: false
          });
        }

        if (!filterOpts.remote) {
          return $xetable.updateData();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },
      getCheckedFilters: function getCheckedFilters() {
        var visibleColumn = internalData.visibleColumn;
        var filterList = [];
        visibleColumn.filter(function (column) {
          var property = column.property,
              filters = column.filters;
          var valueList = [];
          var dataList = [];

          if (filters && filters.length) {
            filters.forEach(function (item) {
              if (item.checked) {
                valueList.push(item.value);
                dataList.push(item.data);
              }
            });

            if (valueList.length) {
              filterList.push({
                column: column,
                property: property,
                values: valueList,
                datas: dataList
              });
            }
          }
        });
        return filterList;
      }
    };
    return _objectSpread2(_objectSpread2({}, filterMethods), filterPrivateMethods);
  },
  setupGrid: function setupGrid($xegrid) {
    return $xegrid.extendTableMethods(tableFilterMethodKeys);
  }
};
/* harmony default export */ var hook = (tableFilterHook);
// CONCATENATED MODULE: ./packages/filter/index.ts




var Filter = {
  install: function install(app) {
    v_x_e_table.hooks.add('$tableFilter', hook);
    app.component(panel.name, panel);
  }
};
/* harmony default export */ var filter = (Filter);
// CONCATENATED MODULE: ./packages/menu/src/panel.ts






/* harmony default export */ var src_panel = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeTableContextMenu',
  setup: function setup(props, context) {
    var xID = ctor_amd_xe_utils_default.a.uniqueId();
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var tableReactData = $xetable.reactData,
        tableComputeMaps = $xetable.computeMaps;
    var refElem = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var refMaps = {
      refElem: refElem
    };
    var $xemenupanel = {
      xID: xID,
      props: props,
      context: context,
      refMaps: refMaps
    };

    var renderVN = function renderVN() {
      var ctxMenuStore = tableReactData.ctxMenuStore;
      var computeMenuOpts = tableComputeMaps.computeMenuOpts;
      var menuOpts = computeMenuOpts.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(external_commonjs_vue_commonjs2_vue_root_Vue_["Teleport"], {
        to: 'body',
        disabled: false
      }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
        ref: refElem,
        class: ['vxe-table--context-menu-wrapper', menuOpts.className],
        style: ctxMenuStore.style
      }, ctxMenuStore.list.map(function (options, gIndex) {
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
          class: 'vxe-context-menu--option-wrapper',
          key: gIndex
        }, options.map(function (item, index) {
          var hasChildMenus = item.children && item.children.length;
          return item.visible === false ? null : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
            class: [item.className, {
              'link--disabled': item.disabled,
              'link--active': item === ctxMenuStore.selected
            }],
            key: "".concat(gIndex, "_").concat(index)
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('a', {
            class: 'vxe-context-menu--link',
            onClick: function onClick(evnt) {
              $xetable.ctxMenuLinkEvent(evnt, item);
            },
            onMouseover: function onMouseover(evnt) {
              $xetable.ctxMenuMouseoverEvent(evnt, item);
            },
            onMouseout: function onMouseout(evnt) {
              $xetable.ctxMenuMouseoutEvent(evnt, item);
            }
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
            class: ['vxe-context-menu--link-prefix', item.prefixIcon]
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-context-menu--link-content'
          }, UtilTools.getFuncText(item.name)), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
            class: ['vxe-context-menu--link-suffix', hasChildMenus ? item.suffixIcon || 'suffix--haschild' : item.suffixIcon]
          })]), hasChildMenus ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
            class: ['vxe-table--context-menu-clild-wrapper', {
              'is--show': item === ctxMenuStore.selected && ctxMenuStore.showChild
            }]
          }, item.children.map(function (child, cIndex) {
            return child.visible === false ? null : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
              class: [child.className, {
                'link--disabled': child.disabled,
                'link--active': child === ctxMenuStore.selectChild
              }],
              key: "".concat(gIndex, "_").concat(index, "_").concat(cIndex)
            }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('a', {
              class: 'vxe-context-menu--link',
              onClick: function onClick(evnt) {
                $xetable.ctxMenuLinkEvent(evnt, child);
              },
              onMouseover: function onMouseover(evnt) {
                $xetable.ctxMenuMouseoverEvent(evnt, item, child);
              },
              onMouseout: function onMouseout(evnt) {
                $xetable.ctxMenuMouseoutEvent(evnt, item);
              }
            }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
              class: ['vxe-context-menu--link-prefix', child.prefixIcon]
            }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
              class: 'vxe-context-menu--link-content'
            }, UtilTools.getFuncText(child.name))])]);
          })) : null]);
        }));
      }))]);
    };

    $xemenupanel.renderVN = renderVN;
    return $xemenupanel;
  },
  render: function render() {
    return this.renderVN();
  }
}));
// CONCATENATED MODULE: ./packages/menu/src/hooks.ts






var tableMenuMethodKeys = ['closeMenu'];
var tableMenuHook = {
  setupTable: function setupTable($xetable) {
    var xID = $xetable.xID,
        props = $xetable.props,
        reactData = $xetable.reactData,
        internalData = $xetable.internalData,
        refMaps = $xetable.refMaps,
        computeMaps = $xetable.computeMaps;
    var refElem = refMaps.refElem,
        refTableFilter = refMaps.refTableFilter,
        refTableMenu = refMaps.refTableMenu;
    var computeMouseOpts = computeMaps.computeMouseOpts,
        computeMenuOpts = computeMaps.computeMenuOpts;
    var menuMethods = {};
    var menuPrivateMethods = {};
    /**
     * 显示快捷菜单
     */

    var openContextMenu = function openContextMenu(evnt, type, params) {
      var ctxMenuStore = reactData.ctxMenuStore;
      var menuOpts = computeMenuOpts.value;
      var config = menuOpts[type];
      var visibleMethod = menuOpts.visibleMethod;

      if (config) {
        var options = config.options,
            disabled = config.disabled;

        if (disabled) {
          evnt.preventDefault();
        } else if (options && options.length) {
          params.options = options;
          $xetable.preventEvent(evnt, 'event.showMenu', params, null, function () {
            if (!visibleMethod || visibleMethod(params)) {
              evnt.preventDefault();
              $xetable.updateZindex();

              var _DomTools$getDomNode = DomTools.getDomNode(),
                  scrollTop = _DomTools$getDomNode.scrollTop,
                  scrollLeft = _DomTools$getDomNode.scrollLeft,
                  visibleHeight = _DomTools$getDomNode.visibleHeight,
                  visibleWidth = _DomTools$getDomNode.visibleWidth;

              var top = evnt.clientY + scrollTop;
              var left = evnt.clientX + scrollLeft;

              var handleVisible = function handleVisible() {
                internalData._currMenuParams = params;
                Object.assign(ctxMenuStore, {
                  visible: true,
                  list: options,
                  selected: null,
                  selectChild: null,
                  showChild: false,
                  style: {
                    zIndex: internalData.tZindex,
                    top: "".concat(top, "px"),
                    left: "".concat(left, "px")
                  }
                });
                Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
                  var tableMenu = refTableMenu.value;
                  var ctxElem = tableMenu.refMaps.refElem.value;
                  var clientHeight = ctxElem.clientHeight;
                  var clientWidth = ctxElem.clientWidth;

                  var _DomTools$getAbsolute = DomTools.getAbsolutePos(ctxElem),
                      boundingTop = _DomTools$getAbsolute.boundingTop,
                      boundingLeft = _DomTools$getAbsolute.boundingLeft;

                  var offsetTop = boundingTop + clientHeight - visibleHeight;
                  var offsetLeft = boundingLeft + clientWidth - visibleWidth;

                  if (offsetTop > -10) {
                    ctxMenuStore.style.top = "".concat(Math.max(scrollTop + 2, top - clientHeight - 2), "px");
                  }

                  if (offsetLeft > -10) {
                    ctxMenuStore.style.left = "".concat(Math.max(scrollLeft + 2, left - clientWidth - 2), "px");
                  }
                });
              };

              var keyboard = params.keyboard,
                  row = params.row,
                  column = params.column;

              if (keyboard && row && column) {
                $xetable.scrollToRow(row, column).then(function () {
                  var cell = $xetable.getCell(row, column);

                  if (cell) {
                    var _DomTools$getAbsolute2 = DomTools.getAbsolutePos(cell),
                        boundingTop = _DomTools$getAbsolute2.boundingTop,
                        boundingLeft = _DomTools$getAbsolute2.boundingLeft;

                    top = boundingTop + scrollTop + Math.floor(cell.offsetHeight / 2);
                    left = boundingLeft + scrollLeft + Math.floor(cell.offsetWidth / 2);
                  }

                  handleVisible();
                });
              } else {
                handleVisible();
              }
            } else {
              menuMethods.closeMenu();
            }
          });
        }
      }

      $xetable.closeFilter();
    };

    menuMethods = {
      /**
       * 关闭快捷菜单
       */
      closeMenu: function closeMenu() {
        Object.assign(reactData.ctxMenuStore, {
          visible: false,
          selected: null,
          selectChild: null,
          showChild: false
        });
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    menuPrivateMethods = {
      /**
       * 处理菜单的移动
       * @param evnt
       * @param keyCode
       * @param ctxMenuStore
       * @param property
       * @param operKey
       * @param operRest
       * @param menuList
       */
      moveCtxMenu: function moveCtxMenu(evnt, keyCode, ctxMenuStore, property, operKey, operRest, menuList) {
        var selectItem;
        var selectIndex = ctor_amd_xe_utils_default.a.findIndexOf(menuList, function (item) {
          return ctxMenuStore[property] === item;
        });

        if (keyCode === operKey) {
          if (operRest && UtilTools.hasChildrenList(ctxMenuStore.selected)) {
            ctxMenuStore.showChild = true;
          } else {
            ctxMenuStore.showChild = false;
            ctxMenuStore.selectChild = null;
          }
        } else if (keyCode === 38) {
          for (var len = selectIndex - 1; len >= 0; len--) {
            if (menuList[len].visible !== false) {
              selectItem = menuList[len];
              break;
            }
          }

          ctxMenuStore[property] = selectItem || menuList[menuList.length - 1];
        } else if (keyCode === 40) {
          for (var index = selectIndex + 1; index < menuList.length; index++) {
            if (menuList[index].visible !== false) {
              selectItem = menuList[index];
              break;
            }
          }

          ctxMenuStore[property] = selectItem || menuList[0];
        } else if (ctxMenuStore[property] && (keyCode === 13 || keyCode === 32)) {
          menuPrivateMethods.ctxMenuLinkEvent(evnt, ctxMenuStore[property]);
        }
      },

      /**
       * 快捷菜单事件处理
       */
      handleGlobalContextmenuEvent: function handleGlobalContextmenuEvent(evnt) {
        var mouseConfig = props.mouseConfig,
            menuConfig = props.menuConfig;
        var editStore = reactData.editStore,
            ctxMenuStore = reactData.ctxMenuStore;
        var visibleColumn = internalData.visibleColumn;
        var tableFilter = refTableFilter.value;
        var tableMenu = refTableMenu.value;
        var mouseOpts = computeMouseOpts.value;
        var menuOpts = computeMenuOpts.value;
        var el = refElem.value;
        var selected = editStore.selected;
        var layoutList = ['header', 'body', 'footer'];

        if (menuConfig) {
          if (ctxMenuStore.visible && tableMenu && DomTools.getEventTargetNode(evnt, tableMenu.refMaps.refElem.value).flag) {
            evnt.preventDefault();
            return;
          }

          if (internalData._keyCtx) {
            var type = 'body';
            var params = {
              type: type,
              $table: $xetable,
              keyboard: true,
              columns: visibleColumn.slice(0),
              $event: evnt
            }; // 如果开启单元格区域

            if (mouseConfig && mouseOpts.area) {
              var activeArea = $xetable.getActiveCellArea();

              if (activeArea && activeArea.row && activeArea.column) {
                params.row = activeArea.row;
                params.column = activeArea.column;
                openContextMenu(evnt, type, params);
                return;
              }
            } else if (mouseConfig && mouseOpts.selected) {
              // 如果启用键盘导航且已选中单元格
              if (selected.row && selected.column) {
                params.row = selected.row;
                params.column = selected.column;
                openContextMenu(evnt, type, params);
                return;
              }
            }
          } // 分别匹配表尾、内容、表尾的快捷菜单


          for (var index = 0; index < layoutList.length; index++) {
            var layout = layoutList[index];
            var columnTargetNode = DomTools.getEventTargetNode(evnt, el, "vxe-".concat(layout, "--column"), function (target) {
              // target=td|th，直接向上找 table 去匹配即可
              return target.parentNode.parentNode.parentNode.getAttribute('data-tid') === xID;
            });
            var _params = {
              type: layout,
              $table: $xetable,
              columns: visibleColumn.slice(0),
              $event: evnt
            };

            if (columnTargetNode.flag) {
              var cell = columnTargetNode.targetElem;
              var columnNodeRest = $xetable.getColumnNode(cell);
              var column = columnNodeRest ? columnNodeRest.item : null;
              var typePrefix = "".concat(layout, "-");

              if (column) {
                Object.assign(_params, {
                  column: column,
                  columnIndex: $xetable.getColumnIndex(column),
                  cell: cell
                });
              }

              if (layout === 'body') {
                var rowNodeRest = $xetable.getRowNode(cell.parentNode);
                var row = rowNodeRest ? rowNodeRest.item : null;
                typePrefix = '';

                if (row) {
                  _params.row = row;
                  _params.rowIndex = $xetable.getRowIndex(row);
                }
              }

              var eventType = "".concat(typePrefix, "cell-menu");
              openContextMenu(evnt, layout, _params);
              $xetable.dispatchEvent(eventType, _params, evnt);
              return;
            } else if (DomTools.getEventTargetNode(evnt, el, "vxe-table--".concat(layout, "-wrapper"), function (target) {
              return target.getAttribute('data-tid') === xID;
            }).flag) {
              if (menuOpts.trigger === 'cell') {
                evnt.preventDefault();
              } else {
                openContextMenu(evnt, layout, _params);
              }

              return;
            }
          }
        }

        if (tableFilter && !DomTools.getEventTargetNode(evnt, tableFilter.$el).flag) {
          $xetable.closeFilter();
        }

        menuMethods.closeMenu();
      },
      ctxMenuMouseoverEvent: function ctxMenuMouseoverEvent(evnt, item, child) {
        var menuElem = evnt.currentTarget;
        var ctxMenuStore = reactData.ctxMenuStore;
        evnt.preventDefault();
        evnt.stopPropagation();
        ctxMenuStore.selected = item;
        ctxMenuStore.selectChild = child;

        if (!child) {
          ctxMenuStore.showChild = UtilTools.hasChildrenList(item);

          if (ctxMenuStore.showChild) {
            Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
              var childWrapperElem = menuElem.nextElementSibling;

              if (childWrapperElem) {
                var _DomTools$getAbsolute3 = DomTools.getAbsolutePos(menuElem),
                    boundingTop = _DomTools$getAbsolute3.boundingTop,
                    boundingLeft = _DomTools$getAbsolute3.boundingLeft,
                    visibleHeight = _DomTools$getAbsolute3.visibleHeight,
                    visibleWidth = _DomTools$getAbsolute3.visibleWidth;

                var posTop = boundingTop + menuElem.offsetHeight;
                var posLeft = boundingLeft + menuElem.offsetWidth;
                var left = '';
                var right = ''; // 是否超出右侧

                if (posLeft + childWrapperElem.offsetWidth > visibleWidth - 10) {
                  left = 'auto';
                  right = "".concat(menuElem.offsetWidth, "px");
                } // 是否超出底部


                var top = '';
                var bottom = '';

                if (posTop + childWrapperElem.offsetHeight > visibleHeight - 10) {
                  top = 'auto';
                  bottom = '0';
                }

                childWrapperElem.style.left = left;
                childWrapperElem.style.right = right;
                childWrapperElem.style.top = top;
                childWrapperElem.style.bottom = bottom;
              }
            });
          }
        }
      },
      ctxMenuMouseoutEvent: function ctxMenuMouseoutEvent(evnt, item) {
        var ctxMenuStore = reactData.ctxMenuStore;

        if (!item.children) {
          ctxMenuStore.selected = null;
        }

        ctxMenuStore.selectChild = null;
      },

      /**
       * 快捷菜单点击事件
       */
      ctxMenuLinkEvent: function ctxMenuLinkEvent(evnt, menu) {
        if (!menu.disabled && (!menu.children || !menu.children.length)) {
          var ctxMenuMethod = v_x_e_table.menus.get(menu.code);
          var params = Object.assign({}, internalData._currMenuParams, {
            menu: menu,
            $table: $xetable,
            $event: evnt
          });

          if (ctxMenuMethod) {
            ctxMenuMethod(params, evnt);
          }

          $xetable.dispatchEvent('menu-click', params, evnt);
          menuMethods.closeMenu();
        }
      }
    };
    return _objectSpread2(_objectSpread2({}, menuMethods), menuPrivateMethods);
  },
  setupGrid: function setupGrid($xegrid) {
    return $xegrid.extendTableMethods(tableMenuMethodKeys);
  }
};
/* harmony default export */ var menu_src_hooks = (tableMenuHook);
// CONCATENATED MODULE: ./packages/menu/index.ts




var Menu = {
  install: function install(app) {
    v_x_e_table.hooks.add('$tableMenu', menu_src_hooks);
    app.component(src_panel.name, src_panel);
  }
};
/* harmony default export */ var packages_menu = (Menu);
// CONCATENATED MODULE: ./packages/edit/src/hook.ts
















var tableEditMethodKeys = ['insert', 'insertAt', 'remove', 'removeCheckboxRow', 'removeRadioRow', 'removeCurrentRow', 'getRecordset', 'getInsertRecords', 'getRemoveRecords', 'getUpdateRecords', 'getActiveRecord', 'getSelectedCell', 'clearActived', 'clearSelected', 'isActiveByRow', 'setActiveRow', 'setActiveCell', 'setSelectCell'];
var editHook = {
  setupTable: function setupTable($xetable) {
    var props = $xetable.props,
        reactData = $xetable.reactData,
        internalData = $xetable.internalData,
        refMaps = $xetable.refMaps,
        computeMaps = $xetable.computeMaps;
    var refElem = refMaps.refElem;
    var computeMouseOpts = computeMaps.computeMouseOpts,
        computeEditOpts = computeMaps.computeEditOpts,
        computeCheckboxOpts = computeMaps.computeCheckboxOpts,
        computeSYOpts = computeMaps.computeSYOpts,
        computeTreeOpts = computeMaps.computeTreeOpts;
    var editMethods = {};
    var editPrivateMethods = {};

    var getEditColumnModel = function getEditColumnModel(row, column) {
      var model = column.model,
          editRender = column.editRender;

      if (editRender) {
        model.value = UtilTools.getCellValue(row, column);
        model.update = false;
      }
    };

    var setEditColumnModel = function setEditColumnModel(row, column) {
      var model = column.model,
          editRender = column.editRender;

      if (editRender && model.update) {
        UtilTools.setCellValue(row, column, model.value);
        model.update = false;
        model.value = null;
      }
    };

    var removeCellSelectedClass = function removeCellSelectedClass() {
      var el = refElem.value;
      var cell = el.querySelector('.col--selected');

      if (cell) {
        DomTools.removeClass(cell, 'col--selected');
      }
    };

    editMethods = {
      /**
       * 往表格中插入临时数据
       *
       * @param {*} records
       */
      insert: function insert(records) {
        return editMethods.insertAt(records, null);
      },

      /**
       * 往表格指定行中插入临时数据
       * 如果 row 为空则从插入到顶部
       * 如果 row 为 -1 则从插入到底部
       * 如果 row 为有效行则插入到该行的位置
       * @param {Object/Array} records 新的数据
       * @param {Row} row 指定行
       */
      insertAt: function insertAt(records, row) {
        var _editStore$insertList;

        var treeConfig = props.treeConfig;
        var mergeList = reactData.mergeList,
            editStore = reactData.editStore,
            scrollYLoad = reactData.scrollYLoad;
        var afterFullData = internalData.afterFullData,
            tableFullData = internalData.tableFullData;
        var sYOpts = computeSYOpts.value;

        if (!ctor_amd_xe_utils_default.a.isArray(records)) {
          records = [records];
        }

        var newRecords = records.map(function (record) {
          return $xetable.defineField(Object.assign({}, record));
        });

        if (!row) {
          afterFullData.unshift.apply(afterFullData, _toConsumableArray(newRecords));
          tableFullData.unshift.apply(tableFullData, _toConsumableArray(newRecords)); // 刷新单元格合并

          mergeList.forEach(function (mergeItem) {
            var mergeRowIndex = mergeItem.row;

            if (mergeRowIndex > 0) {
              mergeItem.row = mergeRowIndex + newRecords.length;
            }
          });
        } else {
          if (row === -1) {
            afterFullData.push.apply(afterFullData, _toConsumableArray(newRecords));
            tableFullData.push.apply(tableFullData, _toConsumableArray(newRecords)); // 刷新单元格合并

            mergeList.forEach(function (mergeItem) {
              var mergeRowIndex = mergeItem.row,
                  mergeRowspan = mergeItem.rowspan;

              if (mergeRowIndex + mergeRowspan > afterFullData.length) {
                mergeItem.rowspan = mergeRowspan + newRecords.length;
              }
            });
          } else {
            if (treeConfig) {
              throw new Error(UtilTools.getLog('vxe.error.noTree', ['insert']));
            }

            var afIndex = afterFullData.indexOf(row);

            if (afIndex === -1) {
              throw new Error(UtilTools.error('vxe.error.unableInsert'));
            }

            afterFullData.splice.apply(afterFullData, [afIndex, 0].concat(_toConsumableArray(newRecords)));
            tableFullData.splice.apply(tableFullData, [tableFullData.indexOf(row), 0].concat(_toConsumableArray(newRecords))); // 刷新单元格合并

            mergeList.forEach(function (mergeItem) {
              var mergeRowIndex = mergeItem.row,
                  mergeRowspan = mergeItem.rowspan;

              if (mergeRowIndex > afIndex) {
                mergeItem.row = mergeRowIndex + newRecords.length;
              } else if (mergeRowIndex + mergeRowspan > afIndex) {
                mergeItem.rowspan = mergeRowspan + newRecords.length;
              }
            });
          }
        }

        (_editStore$insertList = editStore.insertList).unshift.apply(_editStore$insertList, _toConsumableArray(newRecords));

        reactData.scrollYLoad = !treeConfig && sYOpts.gt > -1 && sYOpts.gt < tableFullData.length;
        $xetable.handleTableData();
        $xetable.updateFooter();
        $xetable.updateCache();
        $xetable.checkSelectionStatus();

        if (scrollYLoad) {
          $xetable.updateScrollYSpace();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          $xetable.recalculate();
          return {
            row: newRecords.length ? newRecords[newRecords.length - 1] : null,
            rows: newRecords
          };
        });
      },

      /**
       * 删除指定行数据
       * 如果传 row 则删除一行
       * 如果传 rows 则删除多行
       * 如果为空则删除所有
       */
      remove: function remove(rows) {
        var treeConfig = props.treeConfig;
        var mergeList = reactData.mergeList,
            editStore = reactData.editStore,
            selection = reactData.selection,
            scrollYLoad = reactData.scrollYLoad;
        var afterFullData = internalData.afterFullData,
            tableFullData = internalData.tableFullData;
        var checkboxOpts = computeCheckboxOpts.value;
        var sYOpts = computeSYOpts.value;
        var actived = editStore.actived,
            removeList = editStore.removeList,
            insertList = editStore.insertList;
        var property = checkboxOpts.checkField;
        var rest = [];

        if (!rows) {
          rows = tableFullData;
        } else if (!ctor_amd_xe_utils_default.a.isArray(rows)) {
          rows = [rows];
        } // 如果是新增，则保存记录


        rows.forEach(function (row) {
          if (!$xetable.isInsertByRow(row)) {
            removeList.push(row);
          }
        }); // 如果绑定了多选属性，则更新状态

        if (!property) {
          rows.forEach(function (row) {
            var sIndex = selection.indexOf(row);

            if (sIndex > -1) {
              selection.splice(sIndex, 1);
            }
          });
        } // 从数据源中移除


        if (tableFullData === rows) {
          rows = rest = tableFullData.slice(0);
          internalData.tableFullData = [];
          internalData.afterFullData = [];
          $xetable.clearMergeCells();
        } else {
          rows.forEach(function (row) {
            var tfIndex = tableFullData.indexOf(row);

            if (tfIndex > -1) {
              var rItems = tableFullData.splice(tfIndex, 1);
              rest.push(rItems[0]);
            }

            var afIndex = afterFullData.indexOf(row);

            if (afIndex > -1) {
              // 刷新单元格合并
              mergeList.forEach(function (mergeItem) {
                var mergeRowIndex = mergeItem.row,
                    mergeRowspan = mergeItem.rowspan;

                if (mergeRowIndex > afIndex) {
                  mergeItem.row = mergeRowIndex - 1;
                } else if (mergeRowIndex + mergeRowspan > afIndex) {
                  mergeItem.rowspan = mergeRowspan - 1;
                }
              });
              afterFullData.splice(afIndex, 1);
            }
          });
        } // 如果当前行被激活编辑，则清除激活状态


        if (actived.row && rows.indexOf(actived.row) > -1) {
          editMethods.clearActived();
        } // 从新增中移除已删除的数据


        rows.forEach(function (row) {
          var iIndex = insertList.indexOf(row);

          if (iIndex > -1) {
            insertList.splice(iIndex, 1);
          }
        });
        reactData.scrollYLoad = !treeConfig && sYOpts.gt > -1 && sYOpts.gt < tableFullData.length;
        $xetable.handleTableData();
        $xetable.updateFooter();
        $xetable.updateCache();
        $xetable.checkSelectionStatus();

        if (scrollYLoad) {
          $xetable.updateScrollYSpace();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])().then(function () {
          $xetable.recalculate();
          return {
            row: rest.length ? rest[rest.length - 1] : null,
            rows: rest
          };
        });
      },

      /**
       * 删除复选框选中的数据
       */
      removeCheckboxRow: function removeCheckboxRow() {
        return editMethods.remove($xetable.getCheckboxRecords()).then(function (params) {
          $xetable.clearCheckboxRow();
          return params;
        });
      },

      /**
       * 删除单选框选中的数据
       */
      removeRadioRow: function removeRadioRow() {
        var radioRecord = $xetable.getRadioRecord();
        return editMethods.remove(radioRecord || []).then(function (params) {
          $xetable.clearRadioRow();
          return params;
        });
      },

      /**
       * 删除当前行选中的数据
       */
      removeCurrentRow: function removeCurrentRow() {
        var currentRecord = $xetable.getCurrentRecord();
        return editMethods.remove(currentRecord || []).then(function (params) {
          $xetable.clearCurrentRow();
          return params;
        });
      },

      /**
       * 获取表格数据集，包含新增、删除、修改
       */
      getRecordset: function getRecordset() {
        return {
          insertRecords: editMethods.getInsertRecords(),
          removeRecords: editMethods.getRemoveRecords(),
          updateRecords: editMethods.getUpdateRecords()
        };
      },

      /**
       * 获取新增的临时数据
       */
      getInsertRecords: function getInsertRecords() {
        var editStore = reactData.editStore;
        var tableFullData = internalData.tableFullData;
        var insertList = editStore.insertList;
        var insertRecords = [];

        if (insertList.length) {
          tableFullData.forEach(function (row) {
            if (insertList.indexOf(row) > -1) {
              insertRecords.push(row);
            }
          });
        }

        return insertRecords;
      },

      /**
       * 获取已删除的数据
       */
      getRemoveRecords: function getRemoveRecords() {
        var editStore = reactData.editStore;
        return editStore.removeList;
      },

      /**
       * 获取更新数据
       * 只精准匹配 row 的更改
       * 如果是树表格，子节点更改状态不会影响父节点的更新状态
       */
      getUpdateRecords: function getUpdateRecords() {
        var keepSource = props.keepSource,
            treeConfig = props.treeConfig;
        var tableFullData = internalData.tableFullData;
        var treeOpts = computeTreeOpts.value;

        if (keepSource) {
          if (treeConfig) {
            return ctor_amd_xe_utils_default.a.filterTree(tableFullData, function (row) {
              return $xetable.isUpdateByRow(row);
            }, treeOpts);
          }

          return tableFullData.filter(function (row) {
            return $xetable.isUpdateByRow(row);
          });
        }

        return [];
      },
      getActiveRecord: function getActiveRecord() {
        var editStore = reactData.editStore;
        var afterFullData = internalData.afterFullData;
        var el = refElem.value;
        var _editStore$actived = editStore.actived,
            args = _editStore$actived.args,
            row = _editStore$actived.row;

        if (args && afterFullData.indexOf(row) > -1 && el.querySelectorAll('.vxe-body--column.col--actived').length) {
          return Object.assign({}, args);
        }

        return null;
      },

      /**
       * 获取选中的单元格
       */
      getSelectedCell: function getSelectedCell() {
        var editStore = reactData.editStore;
        var _editStore$selected = editStore.selected,
            args = _editStore$selected.args,
            column = _editStore$selected.column;

        if (args && column) {
          return Object.assign({}, args);
        }

        return null;
      },

      /**
       * 清除激活的编辑
       */
      clearActived: function clearActived(evnt) {
        var editStore = reactData.editStore,
            tableColumn = reactData.tableColumn;
        var editOpts = computeEditOpts.value;
        var actived = editStore.actived;
        var args = actived.args,
            row = actived.row,
            column = actived.column;

        if (row || column) {
          if (editOpts.mode === 'row') {
            tableColumn.forEach(function (column) {
              return setEditColumnModel(row, column);
            });
          } else {
            setEditColumnModel(row, column);
          }

          $xetable.updateFooter();
          $xetable.dispatchEvent('edit-closed', args, evnt || null);
        }

        actived.args = null;
        actived.row = null;
        actived.column = null;
        return ($xetable.clearValidate ? $xetable.clearValidate() : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])()).then(function () {
          return $xetable.recalculate();
        });
      },

      /**
       * 清除所选中源状态
       */
      clearSelected: function clearSelected() {
        var editStore = reactData.editStore;
        var selected = editStore.selected;
        selected.row = null;
        selected.column = null;
        removeCellSelectedClass();
        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 判断行是否为激活编辑状态
       * @param {Row} row 行对象
       */
      isActiveByRow: function isActiveByRow(row) {
        var editStore = reactData.editStore;
        return editStore.actived.row === row;
      },

      /**
       * 激活行编辑
       */
      setActiveRow: function setActiveRow(row) {
        var visibleColumn = internalData.visibleColumn;
        return $xetable.setActiveCell(row, ctor_amd_xe_utils_default.a.find(visibleColumn, function (column) {
          return column.editRender;
        }).property);
      },

      /**
       * 激活单元格编辑
       */
      setActiveCell: function setActiveCell(row, field) {
        var visibleColumn = internalData.visibleColumn;

        if (row && field) {
          var column = ctor_amd_xe_utils_default.a.find(visibleColumn, function (column) {
            return column.property === field;
          });
          return $xetable.scrollToRow(row, column).then(function () {
            if (column && column.editRender) {
              var cell = $xetable.getCell(row, column);

              if (cell) {
                editPrivateMethods.handleActived({
                  row: row,
                  rowIndex: $xetable.getRowIndex(row),
                  column: column,
                  columnIndex: $xetable.getColumnIndex(column),
                  cell: cell,
                  $table: $xetable
                });
                internalData._lastCallTime = Date.now();
              }
            }

            return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
          });
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 只对 trigger=dblclick 有效，选中单元格
       */
      setSelectCell: function setSelectCell(row, field) {
        var tableData = reactData.tableData;
        var visibleColumn = internalData.visibleColumn;
        var editOpts = computeEditOpts.value;

        if (row && field && editOpts.trigger !== 'manual') {
          var column = ctor_amd_xe_utils_default.a.find(visibleColumn, function (column) {
            return column.property === field;
          });
          var rowIndex = tableData.indexOf(row);

          if (rowIndex > -1 && column) {
            var cell = $xetable.getCell(row, column);
            var params = {
              row: row,
              rowIndex: rowIndex,
              column: column,
              columnIndex: visibleColumn.indexOf(column),
              cell: cell
            };
            $xetable.handleSelected(params, {});
          }
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    editPrivateMethods = {
      /**
       * 处理激活编辑
       */
      handleActived: function handleActived(params, evnt) {
        var mouseConfig = props.mouseConfig;
        var editStore = reactData.editStore,
            tableColumn = reactData.tableColumn;
        var editOpts = computeEditOpts.value;
        var mode = editOpts.mode,
            activeMethod = editOpts.activeMethod;
        var actived = editStore.actived;
        var row = params.row,
            column = params.column,
            cell = params.cell;
        var editRender = column.editRender;

        if (editRender && cell) {
          if (actived.row !== row || (mode === 'cell' ? actived.column !== column : false)) {
            // 判断是否禁用编辑
            var type = 'edit-disabled';

            if (!activeMethod || activeMethod(params)) {
              if (mouseConfig) {
                editMethods.clearSelected();

                if ($xetable.clearCellAreas) {
                  $xetable.clearCellAreas();
                  $xetable.clearCopyCellArea();
                }
              }

              $xetable.clostTooltip();
              editMethods.clearActived(evnt);
              type = 'edit-actived';
              column.renderHeight = cell.offsetHeight;
              actived.args = params;
              actived.row = row;
              actived.column = column;

              if (mode === 'row') {
                tableColumn.forEach(function (column) {
                  return getEditColumnModel(row, column);
                });
              } else {
                getEditColumnModel(row, column);
              }

              Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
                editPrivateMethods.handleFocus(params, evnt);
              });
            }

            $xetable.dispatchEvent(type, params, evnt);
          } else {
            var oldColumn = actived.column;

            if (mouseConfig) {
              editMethods.clearSelected();

              if ($xetable.clearCellAreas) {
                $xetable.clearCellAreas();
                $xetable.clearCopyCellArea();
              }
            }

            if (oldColumn !== column) {
              var oldModel = oldColumn.model;

              if (oldModel.update) {
                UtilTools.setCellValue(row, oldColumn, oldModel.value);
              }

              if ($xetable.clearValidate) {
                $xetable.clearValidate();
              }
            }

            column.renderHeight = cell.offsetHeight;
            actived.args = params;
            actived.column = column;
            setTimeout(function () {
              editPrivateMethods.handleFocus(params, evnt);
            });
          }

          $xetable.focus();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      },

      /**
       * 处理聚焦
       */
      handleFocus: function handleFocus(params) {
        var row = params.row,
            column = params.column,
            cell = params.cell;
        var editRender = column.editRender;

        if (editRender) {
          var compRender = v_x_e_table.renderer.get(editRender.name);
          var autofocus = editRender.autofocus,
              autoselect = editRender.autoselect;
          var inputElem; // 如果指定了聚焦 class

          if (autofocus) {
            inputElem = cell.querySelector(autofocus);
          } // 渲染器的聚焦处理


          if (!inputElem && compRender && compRender.autofocus) {
            inputElem = cell.querySelector(compRender.autofocus);
          }

          if (inputElem) {
            inputElem.focus();

            if (autoselect) {
              inputElem.select();
            } else {
              // 保持一致行为，光标移到末端
              if (DomTools.browse.msie) {
                var textRange = inputElem.createTextRange();
                textRange.collapse(false);
                textRange.select();
              }
            }
          } else {
            // 显示到可视区中
            $xetable.scrollToRow(row, column);
          }
        }
      },

      /**
       * 处理选中源
       */
      handleSelected: function handleSelected(params, evnt) {
        var mouseConfig = props.mouseConfig;
        var editStore = reactData.editStore;
        var mouseOpts = computeMouseOpts.value;
        var editOpts = computeEditOpts.value;
        var actived = editStore.actived,
            selected = editStore.selected;
        var row = params.row,
            column = params.column;
        var isMouseSelected = mouseConfig && mouseOpts.selected;

        var selectMethod = function selectMethod() {
          if (isMouseSelected && (selected.row !== row || selected.column !== column)) {
            if (actived.row !== row || (editOpts.mode === 'cell' ? actived.column !== column : false)) {
              editMethods.clearActived(evnt);
              editMethods.clearSelected();

              if ($xetable.clearCellAreas) {
                $xetable.clearCellAreas();
                $xetable.clearCopyCellArea();
              }

              selected.args = params;
              selected.row = row;
              selected.column = column;

              if (isMouseSelected) {
                editPrivateMethods.addCellSelectedClass();
              }

              $xetable.focus();
            }
          }

          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
        };

        return selectMethod();
      },
      addCellSelectedClass: function addCellSelectedClass() {
        var editStore = reactData.editStore;
        var selected = editStore.selected;
        var row = selected.row,
            column = selected.column;
        removeCellSelectedClass();

        if (row && column) {
          var cell = $xetable.getCell(row, column);

          if (cell) {
            DomTools.addClass(cell, 'col--selected');
          }
        }
      }
    };
    return _objectSpread2(_objectSpread2({}, editMethods), editPrivateMethods);
  },
  setupGrid: function setupGrid($xegrid) {
    return $xegrid.extendTableMethods(tableEditMethodKeys);
  }
};
/* harmony default export */ var src_hook = (editHook);
// CONCATENATED MODULE: ./packages/edit/index.ts


var Edit = {
  install: function install() {
    v_x_e_table.hooks.add('$tableEdit', src_hook);
  }
};
/* harmony default export */ var edit = (Edit);
// CONCATENATED MODULE: ./packages/export/src/export-panel.ts













/* harmony default export */ var export_panel = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeExportPanel',
  props: {
    defaultOptions: Object,
    storeData: Object
  },
  setup: function setup(props) {
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var tableComputeMaps = $xetable.computeMaps;
    var computeExportOpts = tableComputeMaps.computeExportOpts,
        computePrintOpts = tableComputeMaps.computePrintOpts;
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      isAll: false,
      isIndeterminate: false,
      loading: false
    });
    var xButtonConfirm = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var xInputFilename = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var xInputSheetname = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var computeCheckedAll = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var storeData = props.storeData;
      return storeData.columns.every(function (column) {
        return column.checked;
      });
    });
    var computeShowSheet = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var defaultOptions = props.defaultOptions;
      return ['html', 'xml', 'xlsx'].indexOf(defaultOptions.type) > -1;
    });
    var computeSupportMerge = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var storeData = props.storeData,
          defaultOptions = props.defaultOptions;
      return !defaultOptions.original && (storeData.isPrint || ['html', 'xlsx'].indexOf(defaultOptions.type) > -1);
    });

    var handleOptionCheck = function handleOptionCheck(column) {
      var storeData = props.storeData;
      var matchObj = ctor_amd_xe_utils_default.a.findTree(storeData.columns, function (item) {
        return item === column;
      });

      if (matchObj && matchObj.parent) {
        var parent = matchObj.parent;

        if (parent.children && parent.children.length) {
          parent.checked = parent.children.every(function (column) {
            return column.checked;
          });
          parent.halfChecked = !parent.checked && parent.children.some(function (column) {
            return column.checked || column.halfChecked;
          });
          handleOptionCheck(parent);
        }
      }
    };

    var checkStatus = function checkStatus() {
      var storeData = props.storeData;
      var columns = storeData.columns;
      reactData.isAll = columns.every(function (column) {
        return column.disabled || column.checked;
      });
      reactData.isIndeterminate = !reactData.isAll && columns.some(function (column) {
        return !column.disabled && (column.checked || column.halfChecked);
      });
    };

    var changeOption = function changeOption(column) {
      var isChecked = !column.checked;
      ctor_amd_xe_utils_default.a.eachTree([column], function (item) {
        item.checked = isChecked;
        item.halfChecked = false;
      });
      handleOptionCheck(column);
      checkStatus();
    };

    var allColumnEvent = function allColumnEvent() {
      var storeData = props.storeData;
      var isAll = !reactData.isAll;
      ctor_amd_xe_utils_default.a.eachTree(storeData.columns, function (column) {
        if (!column.disabled) {
          column.checked = isAll;
          column.halfChecked = false;
        }
      });
      reactData.isAll = isAll;
      checkStatus();
    };

    var showEvent = function showEvent() {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        var filenameInp = xInputFilename.value;
        var sheetnameInp = xInputSheetname.value;
        var confirmBtn = xButtonConfirm.value;
        var targetElem = filenameInp || sheetnameInp || confirmBtn;

        if (targetElem) {
          targetElem.focus();
        }
      });
      checkStatus();
    };

    var getExportOption = function getExportOption() {
      var storeData = props.storeData,
          defaultOptions = props.defaultOptions;
      var checkedAll = computeCheckedAll.value;
      var columns = ctor_amd_xe_utils_default.a.searchTree(storeData.columns, function (column) {
        return column.checked;
      }, {
        children: 'children',
        mapChildren: 'childNodes',
        original: true
      });
      return Object.assign({
        columns: columns
      }, defaultOptions, {
        isMerge: checkedAll ? defaultOptions.isMerge : false
      });
    };

    var printEvent = function printEvent() {
      var storeData = props.storeData;
      var printOpts = computePrintOpts.value;
      storeData.visible = false;
      $xetable.print(Object.assign({}, printOpts, getExportOption()));
    };

    var exportEvent = function exportEvent() {
      var storeData = props.storeData;
      var exportOpts = computeExportOpts.value;
      reactData.loading = true;
      $xetable.exportData(Object.assign({}, exportOpts, getExportOption())).then(function () {
        reactData.loading = false;
        storeData.visible = false;
      }).catch(function () {
        reactData.loading = false;
      });
    };

    var cancelEvent = function cancelEvent() {
      var storeData = props.storeData;
      storeData.visible = false;
    };

    var confirmEvent = function confirmEvent() {
      var storeData = props.storeData;

      if (storeData.isPrint) {
        printEvent();
      } else {
        exportEvent();
      }
    };

    var renderVN = function renderVN() {
      var defaultOptions = props.defaultOptions,
          storeData = props.storeData;
      var isAll = reactData.isAll,
          isIndeterminate = reactData.isIndeterminate;
      var hasMerge = storeData.hasMerge,
          isPrint = storeData.isPrint,
          hasColgroup = storeData.hasColgroup;
      var isHeader = defaultOptions.isHeader;
      var cols = [];
      var checkedAll = computeCheckedAll.value;
      var showSheet = computeShowSheet.value;
      var supportMerge = computeSupportMerge.value;
      ctor_amd_xe_utils_default.a.eachTree(storeData.columns, function (column) {
        var colTitle = UtilTools.formatText(column.getTitle(), 1);
        var isColGroup = column.children && column.children.length;
        cols.push(Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
          class: ['vxe-export--panel-column-option', "level--".concat(column.level), {
            'is--group': isColGroup,
            'is--checked': column.checked,
            'is--indeterminate': column.halfChecked,
            'is--disabled': column.disabled
          }],
          title: colTitle,
          onClick: function onClick() {
            if (!column.disabled) {
              changeOption(column);
            }
          }
        }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
        }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
        }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
        }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
          class: 'vxe-checkbox--label'
        }, colTitle)]));
      });
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(modal, {
        modelValue: storeData.visible,
        title: conf.i18n(isPrint ? 'vxe.export.printTitle' : 'vxe.export.expTitle'),
        width: 660,
        mask: true,
        lockView: true,
        showFooter: false,
        escClosable: true,
        maskClosable: true,
        loading: reactData.loading,
        'onUpdate:modelValue': function onUpdateModelValue(value) {
          storeData.visible = value;
        },
        onShow: showEvent
      }, {
        default: function _default() {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-export--panel'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
            cellspacing: 0,
            cellpadding: 0,
            border: 0
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tbody', [[isPrint ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])() : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.export.expName')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(input, {
            ref: xInputFilename,
            modelValue: defaultOptions.filename,
            type: 'text',
            clearable: true,
            placeholder: conf.i18n('vxe.export.expNamePlaceholder'),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.filename = value;
            }
          })])]), isPrint ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])() : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.export.expType')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_select, {
            modelValue: defaultOptions.type,
            options: storeData.typeList.map(function (item) {
              return {
                value: item.value,
                label: conf.i18n(item.label)
              };
            }),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.type = value;
            }
          })])]), isPrint || showSheet ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.export.expSheetName')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(input, {
            ref: xInputSheetname,
            modelValue: defaultOptions.sheetName,
            type: 'text',
            clearable: true,
            placeholder: conf.i18n('vxe.export.expSheetNamePlaceholder'),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.sheetName = value;
            }
          })])]) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["createCommentVNode"])(), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.export.expMode')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_select, {
            modelValue: defaultOptions.mode,
            options: storeData.modeList.map(function (item) {
              return {
                value: item.value,
                label: conf.i18n(item.label)
              };
            }),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.mode = value;
            }
          })])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [conf.i18n('vxe.export.expColumn')]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-export--panel-column'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
            class: 'vxe-export--panel-column-header'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('li', {
            class: ['vxe-export--panel-column-option', {
              'is--checked': isAll,
              'is--indeterminate': isIndeterminate
            }],
            title: conf.i18n('vxe.table.allTitle'),
            onClick: allColumnEvent
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--icon vxe-checkbox--checked-icon'
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon'
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon'
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', {
            class: 'vxe-checkbox--label'
          }, conf.i18n('vxe.export.expCurrentColumn'))])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('ul', {
            class: 'vxe-export--panel-column-body'
          }, cols)])])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.export.expOpts')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-export--panel-option-row'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_checkbox, {
            modelValue: defaultOptions.isHeader,
            title: conf.i18n('vxe.export.expHeaderTitle'),
            content: conf.i18n('vxe.export.expOptHeader'),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.isHeader = value;
            }
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_checkbox, {
            modelValue: defaultOptions.isFooter,
            disabled: !storeData.hasFooter,
            title: conf.i18n('vxe.export.expFooterTitle'),
            content: conf.i18n('vxe.export.expOptFooter'),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.isFooter = value;
            }
          })]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-export--panel-option-row'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_checkbox, {
            modelValue: isHeader && hasColgroup && supportMerge ? defaultOptions.isColgroup : false,
            title: conf.i18n('vxe.export.expColgroupTitle'),
            disabled: !isHeader || !hasColgroup || !supportMerge,
            content: conf.i18n('vxe.export.expOptColgroup'),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.isColgroup = value;
            }
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_checkbox, {
            modelValue: hasMerge && supportMerge && checkedAll ? defaultOptions.isMerge : false,
            title: conf.i18n('vxe.export.expMergeTitle'),
            disabled: !hasMerge || !supportMerge || !checkedAll,
            content: conf.i18n('vxe.export.expOptMerge'),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.isMerge = value;
            }
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_checkbox, {
            modelValue: defaultOptions.original,
            title: conf.i18n('vxe.export.expOriginalTitle'),
            content: conf.i18n('vxe.export.expOptOriginal'),
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.original = value;
            }
          })])])])]])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-export--panel-btns'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(button_src_button, {
            content: conf.i18n('vxe.export.expCancel'),
            onClick: cancelEvent
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(button_src_button, {
            ref: xButtonConfirm,
            status: 'primary',
            content: conf.i18n(isPrint ? 'vxe.export.expPrint' : 'vxe.export.expConfirm'),
            onClick: confirmEvent
          })])]);
        }
      });
    };

    return renderVN;
  }
}));
// CONCATENATED MODULE: ./packages/export/src/import-panel.ts












/* harmony default export */ var import_panel = (Object(external_commonjs_vue_commonjs2_vue_root_Vue_["defineComponent"])({
  name: 'VxeImportPanel',
  props: {
    defaultOptions: Object,
    storeData: Object
  },
  setup: function setup(props) {
    var $xetable = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xetable', {});
    var tableComputeMaps = $xetable.computeMaps;
    var computeImportOpts = tableComputeMaps.computeImportOpts;
    var reactData = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["reactive"])({
      loading: false
    });
    var refFileBtn = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["ref"])();
    var computeSelectName = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var storeData = props.storeData;
      return "".concat(storeData.filename, ".").concat(storeData.type);
    });
    var computeHasFile = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var storeData = props.storeData;
      return storeData.file && storeData.type;
    });
    var computeParseTypeLabel = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["computed"])(function () {
      var storeData = props.storeData;
      var type = storeData.type,
          typeList = storeData.typeList;

      if (type) {
        var selectItem = ctor_amd_xe_utils_default.a.find(typeList, function (item) {
          return type === item.value;
        });
        return selectItem ? conf.i18n(selectItem.label) : '*.*';
      }

      return "*.".concat(typeList.map(function (item) {
        return item.value;
      }).join(', *.'));
    });

    var clearFileEvent = function clearFileEvent() {
      var storeData = props.storeData;
      Object.assign(storeData, {
        filename: '',
        sheetName: '',
        type: ''
      });
    };

    var selectFileEvent = function selectFileEvent() {
      var storeData = props.storeData,
          defaultOptions = props.defaultOptions;
      $xetable.readFile(defaultOptions).then(function (params) {
        var file = params.file;
        Object.assign(storeData, UtilTools.parseFile(file), {
          file: file
        });
      }).catch(function (e) {
        return e;
      });
    };

    var showEvent = function showEvent() {
      Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
        var targetElem = refFileBtn.value;

        if (targetElem) {
          targetElem.focus();
        }
      });
    };

    var cancelEvent = function cancelEvent() {
      var storeData = props.storeData;
      storeData.visible = false;
    };

    var importEvent = function importEvent() {
      var storeData = props.storeData,
          defaultOptions = props.defaultOptions;
      var importOpts = computeImportOpts.value;
      reactData.loading = true;
      $xetable.importByFile(storeData.file, Object.assign({}, importOpts, defaultOptions)).then(function () {
        reactData.loading = false;
        storeData.visible = false;
      }).catch(function () {
        reactData.loading = false;
      });
    };

    var renderVN = function renderVN() {
      var defaultOptions = props.defaultOptions,
          storeData = props.storeData;
      var selectName = computeSelectName.value;
      var hasFile = computeHasFile.value;
      var parseTypeLabel = computeParseTypeLabel.value;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(modal, {
        modelValue: storeData.visible,
        title: conf.i18n('vxe.import.impTitle'),
        width: 440,
        mask: true,
        lockView: true,
        showFooter: false,
        escClosable: true,
        maskClosable: true,
        loading: reactData.loading,
        'onUpdate:modelValue': function onUpdateModelValue(value) {
          storeData.visible = value;
        },
        onShow: showEvent
      }, {
        default: function _default() {
          return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-export--panel'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('table', {
            cellspacing: 0,
            cellpadding: 0,
            border: 0
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tbody', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.import.impFile')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [hasFile ? Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-import-selected--file',
            title: selectName
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('span', selectName), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('i', {
            class: conf.icon.INPUT_CLEAR,
            onClick: clearFileEvent
          })]) : Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('button', {
            ref: refFileBtn,
            class: 'vxe-import-select--file',
            onClick: selectFileEvent
          }, conf.i18n('vxe.import.impSelect'))])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.import.impType')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', parseTypeLabel)]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('tr', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', conf.i18n('vxe.import.impOpts')), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('td', [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(radio_src_group, {
            modelValue: defaultOptions.mode,
            'onUpdate:modelValue': function onUpdateModelValue(value) {
              defaultOptions.mode = value;
            }
          }, {
            default: function _default() {
              return storeData.modeList.map(function (item) {
                return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(src_radio, {
                  label: item.value,
                  content: conf.i18n(item.label)
                });
              });
            }
          })])])])]), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])('div', {
            class: 'vxe-export--panel-btns'
          }, [Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(button_src_button, {
            content: conf.i18n('vxe.import.impCancel'),
            onClick: cancelEvent
          }), Object(external_commonjs_vue_commonjs2_vue_root_Vue_["h"])(button_src_button, {
            status: 'primary',
            disabled: !hasFile,
            content: conf.i18n('vxe.import.impConfirm'),
            onClick: importEvent
          })])]);
        }
      });
    };

    return renderVN;
  }
}));
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.repeat.js
var es_string_repeat = __webpack_require__("38cf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.js
var web_url = __webpack_require__("2b3d");

// CONCATENATED MODULE: ./packages/export/src/util.ts














 // 导入

var fileForm;
var fileInput; // 打印

var printFrame; // 默认导出或打印的 HTML 样式

var defaultHtmlStyle = 'body{margin:0;color:#333333}body *{-webkit-box-sizing:border-box;box-sizing:border-box}.vxe-table{border:0;border-collapse:separate;text-align:left;font-size:14px;border-spacing:0}.vxe-table:not(.is--print){table-layout:fixed}.vxe-table.is--print{width:100%}.vxe-table.border--default,.vxe-table.border--full,.vxe-table.border--outer{border-top:1px solid #e8eaec}.vxe-table.border--default,.vxe-table.border--full,.vxe-table.border--outer{border-left:1px solid #e8eaec}.vxe-table.border--outer,.vxe-table.border--default th,.vxe-table.border--default td,.vxe-table.border--full th,.vxe-table.border--full td,.vxe-table.border--outer th,.vxe-table.border--inner th,.vxe-table.border--inner td{border-bottom:1px solid #e8eaec}.vxe-table.border--default,.vxe-table.border--outer,.vxe-table.border--full th,.vxe-table.border--full td{border-right:1px solid #e8eaec}.vxe-table.border--default th,.vxe-table.border--full th,.vxe-table.border--outer th{background-color:#f8f8f9}.vxe-table td>div,.vxe-table th>div{padding:.5em .4em}.col--center{text-align:center}.col--right{text-align:right}.vxe-table:not(.is--print) .col--ellipsis>div{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;word-break:break-all}.vxe-table--tree-node{text-align:left}.vxe-table--tree-node-wrapper{position:relative}.vxe-table--tree-icon-wrapper{position:absolute;top:50%;width:1em;height:1em;text-align:center;-webkit-transform:translateY(-50%);transform:translateY(-50%);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.vxe-table--tree-icon{position:absolute;left:0;top:.3em;width:0;height:0;border-style:solid;border-width:.5em;border-top-color:#939599;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent}.vxe-table--tree-cell{display:block;padding-left:1.5em}.vxe-table input[type="checkbox"]{margin:0}.vxe-table input[type="checkbox"],.vxe-table input[type="radio"],.vxe-table input[type="checkbox"]+span,.vxe-table input[type="radio"]+span{vertical-align:middle;padding-left: 0.4em}';
function createFrame() {
  var frame = document.createElement('iframe');
  frame.className = 'vxe-table--print-frame';
  return frame;
}
function getExportBlobByContent(content, options) {
  if (window.Blob) {
    return new Blob([content], {
      type: "text/".concat(options.type)
    });
  }

  return null;
}
function createHtmlPage(opts, content) {
  var style = opts.style;
  return ['<!DOCTYPE html><html>', '<head>', '<meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no,minimal-ui">', "<title>".concat(opts.sheetName, "</title>"), "<style>".concat(defaultHtmlStyle, "</style>"), style ? "<style>".concat(style, "</style>") : '', '</head>', "<body>".concat(content, "</body>"), '</html>'].join('');
}
/**
 * 读取本地文件
 * @param {*} options 参数
 */

var util_readLocalFile = function readLocalFile(options) {
  var opts = Object.assign({}, options);

  if (!fileForm) {
    fileForm = document.createElement('form');
    fileInput = document.createElement('input');
    fileForm.className = 'vxe-table--file-form';
    fileInput.name = 'file';
    fileInput.type = 'file';
    fileForm.appendChild(fileInput);
    document.body.appendChild(fileForm);
  }

  return new Promise(function (resolve, reject) {
    var types = opts.types || [];
    var isAllType = !types.length || types.some(function (type) {
      return type === '*';
    });
    fileInput.multiple = !!opts.multiple;
    fileInput.accept = isAllType ? '' : ".".concat(types.join(', .'));

    fileInput.onchange = function (evnt) {
      var files = evnt.target.files;
      var file = files[0];
      var errType; // 校验类型

      if (!isAllType) {
        for (var fIndex = 0; fIndex < files.length; fIndex++) {
          var _UtilTools$parseFile = UtilTools.parseFile(files[fIndex]),
              type = _UtilTools$parseFile.type;

          if (!ctor_amd_xe_utils_default.a.includes(types, type)) {
            errType = type;
            break;
          }
        }
      }

      if (!errType) {
        resolve({
          status: true,
          files: files,
          file: file
        });
      } else {
        if (opts.message !== false) {
          v_x_e_table.modal.message({
            message: conf.i18n('vxe.error.notType', [errType]),
            status: 'error'
          });
        }

        var params = {
          status: false,
          files: files,
          file: file
        };
        reject(params);
      }
    };

    fileForm.reset();
    fileInput.click();
  });
};
function handlePrint($xetable, opts) {
  var content = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var beforePrintMethod = opts.beforePrintMethod;

  if (beforePrintMethod) {
    content = beforePrintMethod({
      content: content,
      options: opts,
      $table: $xetable
    }) || '';
  }

  content = createHtmlPage(opts, content);
  var blob = getExportBlobByContent(content, opts);

  if (DomTools.browse.msie) {
    if (printFrame) {
      try {
        printFrame.contentDocument.write('');
        printFrame.contentDocument.clear();
      } catch (e) {}

      document.body.removeChild(printFrame);
    }

    printFrame = createFrame();
    document.body.appendChild(printFrame);
    printFrame.contentDocument.write(content);
    printFrame.contentDocument.execCommand('print');
  } else {
    if (!printFrame) {
      printFrame = createFrame();

      printFrame.onload = function (evnt) {
        if (evnt.target.src) {
          evnt.target.contentWindow.print();
        }
      };

      document.body.appendChild(printFrame);
    }

    printFrame.src = URL.createObjectURL(blob);
  }
}
/**
 * 保存文件到本地
 * @param {*} options 参数
 */

var util_saveLocalFile = function saveLocalFile(options) {
  var filename = options.filename,
      type = options.type,
      content = options.content;
  var name = "".concat(filename, ".").concat(type);

  if (window.Blob) {
    var blob = content instanceof Blob ? content : getExportBlobByContent(ctor_amd_xe_utils_default.a.toString(content), options);

    if (navigator.msSaveBlob) {
      navigator.msSaveBlob(blob, name);
    } else {
      var linkElem = document.createElement('a');
      linkElem.target = '_blank';
      linkElem.download = name;
      linkElem.href = URL.createObjectURL(blob);
      document.body.appendChild(linkElem);
      linkElem.click();
      document.body.removeChild(linkElem);
    }

    return Promise.resolve();
  }

  return Promise.reject(new Error(UtilTools.getLog('vxe.error.notExp')));
};
// CONCATENATED MODULE: ./packages/export/src/hook.ts




























var hook_formatText = UtilTools.formatText;
var htmlCellElem;
var csvBOM = "\uFEFF";
var enterSymbol = '\r\n';

function defaultFilterExportColumn(column) {
  return column.property || ['seq', 'checkbox', 'radio'].indexOf(column.type) > -1;
}

var hook_getConvertColumns = function getConvertColumns(columns) {
  var result = [];
  columns.forEach(function (column) {
    if (column.childNodes && column.childNodes.length) {
      result.push(column);
      result.push.apply(result, _toConsumableArray(getConvertColumns(column.childNodes)));
    } else {
      result.push(column);
    }
  });
  return result;
};

var hook_convertToRows = function convertToRows(originColumns) {
  var maxLevel = 1;

  var traverse = function traverse(column, parent) {
    if (parent) {
      column._level = parent._level + 1;

      if (maxLevel < column._level) {
        maxLevel = column._level;
      }
    }

    if (column.childNodes && column.childNodes.length) {
      var colSpan = 0;
      column.childNodes.forEach(function (subColumn) {
        traverse(subColumn, column);
        colSpan += subColumn._colSpan;
      });
      column._colSpan = colSpan;
    } else {
      column._colSpan = 1;
    }
  };

  originColumns.forEach(function (column) {
    column._level = 1;
    traverse(column);
  });
  var rows = [];

  for (var i = 0; i < maxLevel; i++) {
    rows.push([]);
  }

  var allColumns = hook_getConvertColumns(originColumns);
  allColumns.forEach(function (column) {
    if (column.childNodes && column.childNodes.length) {
      column._rowSpan = 1;
    } else {
      column._rowSpan = maxLevel - column._level + 1;
    }

    rows[column._level - 1].push(column);
  });
  return rows;
};

function toTableBorder(border) {
  if (border === true) {
    return 'full';
  }

  if (border) {
    return border;
  }

  return 'default';
}

function getHeaderTitle(opts, column) {
  return (opts.original ? column.property : column.getTitle()) || '';
}

function getFooterData(opts, footerData) {
  var footerFilterMethod = opts.footerFilterMethod;
  return footerFilterMethod ? footerData.filter(function (items, index) {
    return footerFilterMethod({
      items: items,
      $rowIndex: index
    });
  }) : footerData;
}

function getCsvCellTypeLabel(column, cellValue) {
  if (cellValue) {
    switch (column.cellType) {
      case 'string':
        if (!isNaN(cellValue)) {
          return '\t' + cellValue;
        }

        break;

      case 'number':
        break;

      default:
        if (cellValue.length >= 12 && !isNaN(cellValue)) {
          return '\t' + cellValue;
        }

        break;
    }
  }

  return cellValue;
}

function toTxtCellLabel(val) {
  if (/[",]/.test(val)) {
    return "\"".concat(val.replace(/"/g, '""'), "\"");
  }

  return val;
}

function getElementsByTagName(elem, qualifiedName) {
  return elem.getElementsByTagName(qualifiedName);
}

function getTxtCellKey(now) {
  return "#".concat(now, "@").concat(ctor_amd_xe_utils_default.a.uniqueId());
}

function replaceTxtCell(cell, vMaps) {
  return cell.replace(/#\d+@\d+/g, function (key) {
    return ctor_amd_xe_utils_default.a.hasOwnProp(vMaps, key) ? vMaps[key] : key;
  });
}

function getTxtCellValue(val, vMaps) {
  var rest = replaceTxtCell(val, vMaps);
  return rest.replace(/^"+$/g, function (qVal) {
    return '"'.repeat(Math.ceil(qVal.length / 2));
  });
}

function parseCsvAndTxt(columns, content, cellSeparator) {
  var list = content.split(enterSymbol);
  var rows = [];
  var fields = [];

  if (list.length) {
    var vMaps = {};
    var now = Date.now();
    list.forEach(function (rVal) {
      if (rVal) {
        var item = {};
        rVal = rVal.replace(/("")|(\n)/g, function (text, dVal) {
          var key = getTxtCellKey(now);
          vMaps[key] = dVal ? '"' : '\n';
          return key;
        }).replace(/"(.*?)"/g, function (text, cVal) {
          var key = getTxtCellKey(now);
          vMaps[key] = replaceTxtCell(cVal, vMaps);
          return key;
        });
        var cells = rVal.split(cellSeparator);

        if (!fields.length) {
          fields = cells.map(function (val) {
            return getTxtCellValue(val.trim(), vMaps);
          });
        } else {
          cells.forEach(function (val, colIndex) {
            if (colIndex < fields.length) {
              item[fields[colIndex]] = getTxtCellValue(val, vMaps);
            }
          });
          rows.push(item);
        }
      }
    });
  }

  return {
    fields: fields,
    rows: rows
  };
}

function parseCsv(columns, content) {
  return parseCsvAndTxt(columns, content, ',');
}

function parseTxt(columns, content) {
  return parseCsvAndTxt(columns, content, '\t');
}

function parseHTML(columns, content) {
  var domParser = new DOMParser();
  var xmlDoc = domParser.parseFromString(content, 'text/html');
  var bodyNodes = getElementsByTagName(xmlDoc, 'body');
  var rows = [];
  var fields = [];

  if (bodyNodes.length) {
    var tableNodes = getElementsByTagName(bodyNodes[0], 'table');

    if (tableNodes.length) {
      var theadNodes = getElementsByTagName(tableNodes[0], 'thead');

      if (theadNodes.length) {
        ctor_amd_xe_utils_default.a.arrayEach(getElementsByTagName(theadNodes[0], 'tr'), function (rowNode) {
          ctor_amd_xe_utils_default.a.arrayEach(getElementsByTagName(rowNode, 'th'), function (cellNode) {
            fields.push(cellNode.textContent);
          });
        });
        var tbodyNodes = getElementsByTagName(tableNodes[0], 'tbody');

        if (tbodyNodes.length) {
          ctor_amd_xe_utils_default.a.arrayEach(getElementsByTagName(tbodyNodes[0], 'tr'), function (rowNode) {
            var item = {};
            ctor_amd_xe_utils_default.a.arrayEach(getElementsByTagName(rowNode, 'td'), function (cellNode, colIndex) {
              if (fields[colIndex]) {
                item[fields[colIndex]] = cellNode.textContent || '';
              }
            });
            rows.push(item);
          });
        }
      }
    }
  }

  return {
    fields: fields,
    rows: rows
  };
}

function parseXML(columns, content) {
  var domParser = new DOMParser();
  var xmlDoc = domParser.parseFromString(content, 'application/xml');
  var sheetNodes = getElementsByTagName(xmlDoc, 'Worksheet');
  var rows = [];
  var fields = [];

  if (sheetNodes.length) {
    var tableNodes = getElementsByTagName(sheetNodes[0], 'Table');

    if (tableNodes.length) {
      var rowNodes = getElementsByTagName(tableNodes[0], 'Row');

      if (rowNodes.length) {
        ctor_amd_xe_utils_default.a.arrayEach(getElementsByTagName(rowNodes[0], 'Cell'), function (cellNode) {
          fields.push(cellNode.textContent);
        });
        ctor_amd_xe_utils_default.a.arrayEach(rowNodes, function (rowNode, index) {
          if (index) {
            var item = {};
            var cellNodes = getElementsByTagName(rowNode, 'Cell');
            ctor_amd_xe_utils_default.a.arrayEach(cellNodes, function (cellNode, colIndex) {
              if (fields[colIndex]) {
                item[fields[colIndex]] = cellNode.textContent;
              }
            });
            rows.push(item);
          }
        });
      }
    }
  }

  return {
    fields: fields,
    rows: rows
  };
}

function clearColumnConvert(columns) {
  ctor_amd_xe_utils_default.a.eachTree(columns, function (column) {
    delete column._level;
    delete column._colSpan;
    delete column._rowSpan;
    delete column._children;
    delete column.childNodes;
  }, {
    children: 'children'
  });
}
/**
 * 检查导入的列是否完整
 * @param {Array} fields 字段名列表
 * @param {Array} rows 数据列表
 */


function checkImportData(columns, fields) {
  var tableFields = [];
  columns.forEach(function (column) {
    var field = column.property;

    if (field) {
      tableFields.push(field);
    }
  });
  return fields.some(function (field) {
    return tableFields.indexOf(field) > -1;
  });
}

var tableExportMethodKeys = ['exportData', 'importByFile', 'importData', 'saveFile', 'readFile', 'print', 'openImport', 'openExport', 'openPrint'];
var tableExportHook = {
  setupTable: function setupTable($xetable) {
    var props = $xetable.props,
        reactData = $xetable.reactData,
        internalData = $xetable.internalData,
        computeMaps = $xetable.computeMaps;
    var computeTreeOpts = computeMaps.computeTreeOpts,
        computePrintOpts = computeMaps.computePrintOpts,
        computeExportOpts = computeMaps.computeExportOpts,
        computeImportOpts = computeMaps.computeImportOpts,
        computeCustomOpts = computeMaps.computeCustomOpts,
        computeSeqOpts = computeMaps.computeSeqOpts,
        computeRadioOpts = computeMaps.computeRadioOpts,
        computeCheckboxOpts = computeMaps.computeCheckboxOpts;
    var $xegrid = Object(external_commonjs_vue_commonjs2_vue_root_Vue_["inject"])('$xegrid', null);

    var hasTreeChildren = function hasTreeChildren(row) {
      var treeOpts = computeTreeOpts.value;
      return row[treeOpts.children] && row[treeOpts.children].length;
    };

    var getSeq = function getSeq(row, rowIndex, column, columnIndex) {
      var seqOpts = computeSeqOpts.value;
      var seqMethod = seqOpts.seqMethod || column.seqMethod;
      return seqMethod ? seqMethod({
        row: row,
        rowIndex: rowIndex,
        column: column,
        columnIndex: columnIndex
      }) : seqOpts.startIndex + rowIndex + 1;
    };

    var getLabelData = function getLabelData(opts, columns, datas) {
      var treeConfig = props.treeConfig;
      var radioOpts = computeRadioOpts.value;
      var checkboxOpts = computeCheckboxOpts.value;
      var treeOpts = computeTreeOpts.value;

      if (!htmlCellElem) {
        htmlCellElem = document.createElement('div');
      }

      if (treeConfig) {
        // 如果是树表格只允许导出数据源
        var rest = [];
        ctor_amd_xe_utils_default.a.eachTree(datas, function (row, rowIndex, items, path, parent, nodes) {
          var item = {
            _row: row,
            _level: nodes.length - 1,
            _hasChild: hasTreeChildren(row)
          };
          columns.forEach(function (column, columnIndex) {
            var cellValue = '';
            var renderOpts = column.editRender || column.cellRender;
            var exportLabelMethod = column.exportMethod;

            if (!exportLabelMethod && renderOpts && renderOpts.name) {
              var compConf = v_x_e_table.renderer.get(renderOpts.name);

              if (compConf) {
                exportLabelMethod = compConf.exportMethod;
              }
            }

            if (exportLabelMethod) {
              cellValue = exportLabelMethod({
                $table: $xetable,
                row: row,
                column: column,
                options: opts
              });
            } else {
              switch (column.type) {
                case 'seq':
                  cellValue = getSeq(row, rowIndex, column, columnIndex);
                  break;

                case 'checkbox':
                  cellValue = $xetable.isCheckedByCheckboxRow(row);
                  item._checkboxLabel = checkboxOpts.labelField ? ctor_amd_xe_utils_default.a.get(row, checkboxOpts.labelField) : '';
                  item._checkboxDisabled = checkboxOpts.checkMethod && !checkboxOpts.checkMethod({
                    row: row
                  });
                  break;

                case 'radio':
                  cellValue = $xetable.isCheckedByRadioRow(row);
                  item._radioLabel = radioOpts.labelField ? ctor_amd_xe_utils_default.a.get(row, radioOpts.labelField) : '';
                  item._radioDisabled = radioOpts.checkMethod && !radioOpts.checkMethod({
                    row: row
                  });
                  break;

                default:
                  if (opts.original) {
                    cellValue = UtilTools.getCellValue(row, column);
                  } else {
                    cellValue = UtilTools.getCellLabel(row, column, {
                      $table: $xetable
                    });

                    if (column.type === 'html') {
                      htmlCellElem.innerHTML = cellValue;
                      cellValue = htmlCellElem.innerText.trim();
                    } else {
                      var cell = $xetable.getCell(row, column);

                      if (cell) {
                        cellValue = cell.innerText.trim();
                      }
                    }
                  }

              }
            }

            item[column.id] = ctor_amd_xe_utils_default.a.toString(cellValue);
          });
          rest.push(Object.assign(item, row));
        }, treeOpts);
        return rest;
      }

      return datas.map(function (row, rowIndex) {
        var item = {
          _row: row
        };
        columns.forEach(function (column, columnIndex) {
          var cellValue = '';
          var renderOpts = column.editRender || column.cellRender;
          var exportLabelMethod = column.exportMethod;

          if (!exportLabelMethod && renderOpts && renderOpts.name) {
            var compConf = v_x_e_table.renderer.get(renderOpts.name);

            if (compConf) {
              exportLabelMethod = compConf.exportMethod;
            }
          }

          if (exportLabelMethod) {
            cellValue = exportLabelMethod({
              $table: $xetable,
              row: row,
              column: column,
              options: opts
            });
          } else {
            switch (column.type) {
              case 'seq':
                cellValue = getSeq(row, rowIndex, column, columnIndex);
                break;

              case 'checkbox':
                cellValue = $xetable.isCheckedByCheckboxRow(row);
                item._checkboxLabel = checkboxOpts.labelField ? ctor_amd_xe_utils_default.a.get(row, checkboxOpts.labelField) : '';
                item._checkboxDisabled = checkboxOpts.checkMethod && !checkboxOpts.checkMethod({
                  row: row
                });
                break;

              case 'radio':
                cellValue = $xetable.isCheckedByRadioRow(row);
                item._radioLabel = radioOpts.labelField ? ctor_amd_xe_utils_default.a.get(row, radioOpts.labelField) : '';
                item._radioDisabled = radioOpts.checkMethod && !radioOpts.checkMethod({
                  row: row
                });
                break;

              default:
                if (opts.original) {
                  cellValue = UtilTools.getCellValue(row, column);
                } else {
                  cellValue = UtilTools.getCellLabel(row, column, {
                    $table: $xetable
                  });

                  if (column.type === 'html') {
                    htmlCellElem.innerHTML = cellValue;
                    cellValue = htmlCellElem.innerText.trim();
                  } else {
                    var cell = $xetable.getCell(row, column);

                    if (cell) {
                      cellValue = cell.innerText.trim();
                    }
                  }
                }

            }
          }

          item[column.id] = ctor_amd_xe_utils_default.a.toString(cellValue);
        });
        return item;
      });
    };

    var getExportData = function getExportData(opts) {
      var columns = opts.columns,
          dataFilterMethod = opts.dataFilterMethod;
      var datas = opts.data;

      if (dataFilterMethod) {
        datas = datas.filter(function (row, index) {
          return dataFilterMethod({
            row: row,
            $rowIndex: index
          });
        });
      }

      return getLabelData(opts, columns, datas);
    };

    var getFooterCellValue = function getFooterCellValue(opts, items, column) {
      var renderOpts = column.editRender || column.cellRender;
      var exportLabelMethod = column.footerExportMethod;

      if (!exportLabelMethod && renderOpts && renderOpts.name) {
        var compConf = v_x_e_table.renderer.get(renderOpts.name);

        if (compConf) {
          exportLabelMethod = compConf.footerExportMethod;
        }
      }

      var _columnIndex = $xetable.getVTColumnIndex(column);

      var cellValue = exportLabelMethod ? exportLabelMethod({
        $table: $xetable,
        items: items,
        itemIndex: _columnIndex,
        _columnIndex: _columnIndex,
        column: column,
        options: opts
      }) : ctor_amd_xe_utils_default.a.toString(items[_columnIndex]);
      return cellValue;
    };

    var toCsv = function toCsv(opts, columns, datas) {
      var content = csvBOM;

      if (opts.isHeader) {
        content += columns.map(function (column) {
          return toTxtCellLabel(getHeaderTitle(opts, column));
        }).join(',') + enterSymbol;
      }

      datas.forEach(function (row) {
        content += columns.map(function (column) {
          return toTxtCellLabel(getCsvCellTypeLabel(column, row[column.id]));
        }).join(',') + enterSymbol;
      });

      if (opts.isFooter) {
        var footerData = reactData.footerData;
        var footers = getFooterData(opts, footerData);
        footers.forEach(function (rows) {
          content += columns.map(function (column) {
            return toTxtCellLabel(getFooterCellValue(opts, rows, column));
          }).join(',') + enterSymbol;
        });
      }

      return content;
    };

    var toTxt = function toTxt(opts, columns, datas) {
      var content = '';

      if (opts.isHeader) {
        content += columns.map(function (column) {
          return toTxtCellLabel(getHeaderTitle(opts, column));
        }).join('\t') + enterSymbol;
      }

      datas.forEach(function (row) {
        content += columns.map(function (column) {
          return toTxtCellLabel(row[column.id]);
        }).join('\t') + enterSymbol;
      });

      if (opts.isFooter) {
        var footerData = reactData.footerData;
        var footers = getFooterData(opts, footerData);
        footers.forEach(function (rows) {
          content += columns.map(function (column) {
            return toTxtCellLabel(getFooterCellValue(opts, rows, column));
          }).join(',') + enterSymbol;
        });
      }

      return content;
    };

    var hasEllipsis = function hasEllipsis(column, property, allColumnOverflow) {
      var columnOverflow = column[property];
      var headOverflow = ctor_amd_xe_utils_default.a.isUndefined(columnOverflow) || ctor_amd_xe_utils_default.a.isNull(columnOverflow) ? allColumnOverflow : columnOverflow;
      var showEllipsis = headOverflow === 'ellipsis';
      var showTitle = headOverflow === 'title';
      var showTooltip = headOverflow === true || headOverflow === 'tooltip';
      var isEllipsis = showTitle || showTooltip || showEllipsis; // 虚拟滚动不支持动态高度

      var scrollXLoad = reactData.scrollXLoad,
          scrollYLoad = reactData.scrollYLoad;

      if ((scrollXLoad || scrollYLoad) && !isEllipsis) {
        isEllipsis = true;
      }

      return isEllipsis;
    };

    var toHtml = function toHtml(opts, columns, datas) {
      var id = props.id,
          border = props.border,
          treeConfig = props.treeConfig,
          allHeaderAlign = props.headerAlign,
          allAlign = props.align,
          allFooterAlign = props.footerAlign,
          allColumnOverflow = props.showOverflow,
          allColumnHeaderOverflow = props.showHeaderOverflow;
      var isAllSelected = reactData.isAllSelected,
          isIndeterminate = reactData.isIndeterminate,
          mergeList = reactData.mergeList;
      var treeOpts = computeTreeOpts.value;
      var isPrint = opts.print,
          isHeader = opts.isHeader,
          isFooter = opts.isFooter,
          isColgroup = opts.isColgroup,
          isMerge = opts.isMerge,
          colgroups = opts.colgroups,
          original = opts.original;
      var allCls = 'check-all';
      var clss = ['vxe-table', "border--".concat(toTableBorder(border)), isPrint ? 'is--print' : '', isHeader ? 'show--head' : ''].filter(function (cls) {
        return cls;
      });
      var tables = ["<table class=\"".concat(clss.join(' '), "\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">"), "<colgroup>".concat(columns.map(function (column) {
        return "<col style=\"width:".concat(column.renderWidth, "px\">");
      }).join(''), "</colgroup>")];

      if (isHeader) {
        tables.push('<thead>');

        if (isColgroup && !original) {
          colgroups.forEach(function (cols) {
            tables.push("<tr>".concat(cols.map(function (column) {
              var headAlign = column.headerAlign || column.align || allHeaderAlign || allAlign;
              var classNames = hasEllipsis(column, 'showHeaderOverflow', allColumnHeaderOverflow) ? ['col--ellipsis'] : [];
              var cellTitle = getHeaderTitle(opts, column);
              var childWidth = 0;
              var countChild = 0;
              ctor_amd_xe_utils_default.a.eachTree([column], function (item) {
                if (!item.childNodes || !column.childNodes.length) {
                  countChild++;
                }

                childWidth += item.renderWidth;
              }, {
                children: 'childNodes'
              });
              var cellWidth = childWidth - countChild;

              if (headAlign) {
                classNames.push("col--".concat(headAlign));
              }

              if (column.type === 'checkbox') {
                return "<th class=\"".concat(classNames.join(' '), "\" colspan=\"").concat(column._colSpan, "\" rowspan=\"").concat(column._rowSpan, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(cellWidth, "px\""), "><input type=\"checkbox\" class=\"").concat(allCls, "\" ").concat(isAllSelected ? 'checked' : '', "><span>").concat(cellTitle, "</span></div></th>");
              }

              return "<th class=\"".concat(classNames.join(' '), "\" colspan=\"").concat(column._colSpan, "\" rowspan=\"").concat(column._rowSpan, "\" title=\"").concat(cellTitle, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(cellWidth, "px\""), "><span>").concat(hook_formatText(cellTitle, true), "</span></div></th>");
            }).join(''), "</tr>"));
          });
        } else {
          tables.push("<tr>".concat(columns.map(function (column) {
            var headAlign = column.headerAlign || column.align || allHeaderAlign || allAlign;
            var classNames = hasEllipsis(column, 'showHeaderOverflow', allColumnHeaderOverflow) ? ['col--ellipsis'] : [];
            var cellTitle = getHeaderTitle(opts, column);

            if (headAlign) {
              classNames.push("col--".concat(headAlign));
            }

            if (column.type === 'checkbox') {
              return "<th class=\"".concat(classNames.join(' '), "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><input type=\"checkbox\" class=\"").concat(allCls, "\" ").concat(isAllSelected ? 'checked' : '', "><span>").concat(cellTitle, "</span></div></th>");
            }

            return "<th class=\"".concat(classNames.join(' '), "\" title=\"").concat(cellTitle, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><span>").concat(hook_formatText(cellTitle, true), "</span></div></th>");
          }).join(''), "</tr>"));
        }

        tables.push('</thead>');
      }

      if (datas.length) {
        tables.push('<tbody>');

        if (treeConfig) {
          datas.forEach(function (item) {
            tables.push('<tr>' + columns.map(function (column) {
              var cellAlign = column.align || allAlign;
              var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];
              var cellValue = item[column.id];

              if (cellAlign) {
                classNames.push("col--".concat(cellAlign));
              }

              if (column.treeNode) {
                var treeIcon = '';

                if (item._hasChild) {
                  treeIcon = '<i class="vxe-table--tree-icon"></i>';
                }

                classNames.push('vxe-table--tree-node');

                if (column.type === 'radio') {
                  return "<td class=\"".concat(classNames.join(' '), "\" title=\"").concat(cellValue, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><div class=\"vxe-table--tree-node-wrapper\" style=\"padding-left: ").concat(item._level * treeOpts.indent, "px\"><div class=\"vxe-table--tree-icon-wrapper\">").concat(treeIcon, "</div><div class=\"vxe-table--tree-cell\"><input type=\"radio\" name=\"radio_").concat(id, "\" ").concat(item._radioDisabled ? 'disabled ' : '').concat(cellValue === true || cellValue === 'true' ? 'checked' : '', "><span>").concat(item._radioLabel, "</span></div></div></div></td>");
                } else if (column.type === 'checkbox') {
                  return "<td class=\"".concat(classNames.join(' '), "\" title=\"").concat(cellValue, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><div class=\"vxe-table--tree-node-wrapper\" style=\"padding-left: ").concat(item._level * treeOpts.indent, "px\"><div class=\"vxe-table--tree-icon-wrapper\">").concat(treeIcon, "</div><div class=\"vxe-table--tree-cell\"><input type=\"checkbox\" ").concat(item._checkboxDisabled ? 'disabled ' : '').concat(cellValue === true || cellValue === 'true' ? 'checked' : '', "><span>").concat(item._checkboxLabel, "</span></div></div></div></td>");
                }

                return "<td class=\"".concat(classNames.join(' '), "\" title=\"").concat(cellValue, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><div class=\"vxe-table--tree-node-wrapper\" style=\"padding-left: ").concat(item._level * treeOpts.indent, "px\"><div class=\"vxe-table--tree-icon-wrapper\">").concat(treeIcon, "</div><div class=\"vxe-table--tree-cell\">").concat(cellValue, "</div></div></div></td>");
              }

              if (column.type === 'radio') {
                return "<td class=\"".concat(classNames.join(' '), "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><input type=\"radio\" name=\"radio_").concat(id, "\" ").concat(item._radioDisabled ? 'disabled ' : '').concat(cellValue === true || cellValue === 'true' ? 'checked' : '', "><span>").concat(item._radioLabel, "</span></div></td>");
              } else if (column.type === 'checkbox') {
                return "<td class=\"".concat(classNames.join(' '), "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><input type=\"checkbox\" ").concat(item._checkboxDisabled ? 'disabled ' : '').concat(cellValue === true || cellValue === 'true' ? 'checked' : '', "><span>").concat(item._checkboxLabel, "</span></div></td>");
              }

              return "<td class=\"".concat(classNames.join(' '), "\" title=\"").concat(cellValue, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), ">").concat(hook_formatText(cellValue, true), "</div></td>");
            }).join('') + '</tr>');
          });
        } else {
          datas.forEach(function (item) {
            tables.push('<tr>' + columns.map(function (column) {
              var cellAlign = column.align || allAlign;
              var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];
              var cellValue = item[column.id];
              var rowSpan = 1;
              var colSpan = 1;

              if (isMerge && mergeList.length) {
                var _rowIndex = $xetable.getVTRowIndex(item._row);

                var _columnIndex = $xetable.getVTColumnIndex(column);

                var spanRest = mergeBodyMethod(mergeList, _rowIndex, _columnIndex);

                if (spanRest) {
                  var rowspan = spanRest.rowspan,
                      colspan = spanRest.colspan;

                  if (!rowspan || !colspan) {
                    return '';
                  }

                  if (rowspan > 1) {
                    rowSpan = rowspan;
                  }

                  if (colspan > 1) {
                    colSpan = colspan;
                  }
                }
              }

              if (cellAlign) {
                classNames.push("col--".concat(cellAlign));
              }

              if (column.type === 'radio') {
                return "<td class=\"".concat(classNames.join(' '), "\" rowspan=\"").concat(rowSpan, "\" colspan=\"").concat(colSpan, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><input type=\"radio\" name=\"radio_").concat(id, "\" ").concat(item._radioDisabled ? 'disabled ' : '').concat(cellValue === true || cellValue === 'true' ? 'checked' : '', "><span>").concat(item._radioLabel, "</span></div></td>");
              } else if (column.type === 'checkbox') {
                return "<td class=\"".concat(classNames.join(' '), "\" rowspan=\"").concat(rowSpan, "\" colspan=\"").concat(colSpan, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), "><input type=\"checkbox\" ").concat(item._checkboxDisabled ? 'disabled ' : '').concat(cellValue === true || cellValue === 'true' ? 'checked' : '', "><span>").concat(item._checkboxLabel, "</span></div></td>");
              }

              return "<td class=\"".concat(classNames.join(' '), "\" rowspan=\"").concat(rowSpan, "\" colspan=\"").concat(colSpan, "\" title=\"").concat(cellValue, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), ">").concat(hook_formatText(cellValue, true), "</div></td>");
            }).join('') + '</tr>');
          });
        }

        tables.push('</tbody>');
      }

      if (isFooter) {
        var footerData = reactData.footerData;
        var footers = getFooterData(opts, footerData);

        if (footers.length) {
          tables.push('<tfoot>');
          footers.forEach(function (rows) {
            tables.push("<tr>".concat(columns.map(function (column) {
              var footAlign = column.footerAlign || column.align || allFooterAlign || allAlign;
              var classNames = hasEllipsis(column, 'showOverflow', allColumnOverflow) ? ['col--ellipsis'] : [];
              var cellValue = getFooterCellValue(opts, rows, column);

              if (footAlign) {
                classNames.push("col--".concat(footAlign));
              }

              return "<td class=\"".concat(classNames.join(' '), "\" title=\"").concat(cellValue, "\"><div ").concat(isPrint ? '' : "style=\"width: ".concat(column.renderWidth, "px\""), ">").concat(hook_formatText(cellValue, true), "</div></td>");
            }).join(''), "</tr>"));
          });
          tables.push('</tfoot>');
        }
      } // 是否半选状态


      var script = !isAllSelected && isIndeterminate ? "<script>(function(){var a=document.querySelector(\".".concat(allCls, "\");if(a){a.indeterminate=true}})()</script>") : '';
      tables.push('</table>', script);
      return isPrint ? tables.join('') : createHtmlPage(opts, tables.join(''));
    };

    var toXML = function toXML(opts, columns, datas) {
      var xml = ['<?xml version="1.0"?>', '<?mso-application progid="Excel.Sheet"?>', '<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40">', '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">', '<Version>16.00</Version>', '</DocumentProperties>', '<ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">', '<WindowHeight>7920</WindowHeight>', '<WindowWidth>21570</WindowWidth>', '<WindowTopX>32767</WindowTopX>', '<WindowTopY>32767</WindowTopY>', '<ProtectStructure>False</ProtectStructure>', '<ProtectWindows>False</ProtectWindows>', '</ExcelWorkbook>', "<Worksheet ss:Name=\"".concat(opts.sheetName, "\">"), '<Table>', columns.map(function (column) {
        return "<Column ss:Width=\"".concat(column.renderWidth, "\"/>");
      }).join('')].join('');

      if (opts.isHeader) {
        xml += "<Row>".concat(columns.map(function (column) {
          return "<Cell><Data ss:Type=\"String\">".concat(getHeaderTitle(opts, column), "</Data></Cell>");
        }).join(''), "</Row>");
      }

      datas.forEach(function (row) {
        xml += '<Row>' + columns.map(function (column) {
          return "<Cell><Data ss:Type=\"String\">".concat(row[column.id], "</Data></Cell>");
        }).join('') + '</Row>';
      });

      if (opts.isFooter) {
        var footerData = reactData.footerData;
        var footers = getFooterData(opts, footerData);
        footers.forEach(function (rows) {
          xml += "<Row>".concat(columns.map(function (column) {
            return "<Cell><Data ss:Type=\"String\">".concat(getFooterCellValue(opts, rows, column), "</Data></Cell>");
          }).join(''), "</Row>");
        });
      }

      return "".concat(xml, "</Table></Worksheet></Workbook>");
    };

    var getContent = function getContent(opts, columns, datas) {
      if (columns.length) {
        switch (opts.type) {
          case 'csv':
            return toCsv(opts, columns, datas);

          case 'txt':
            return toTxt(opts, columns, datas);

          case 'html':
            return toHtml(opts, columns, datas);

          case 'xml':
            return toXML(opts, columns, datas);
        }
      }

      return '';
    };

    var downloadFile = function downloadFile(opts, content) {
      var filename = opts.filename,
          type = opts.type,
          download = opts.download;

      if (!download) {
        var blob = getExportBlobByContent(content, opts);
        return Promise.resolve({
          type: type,
          content: content,
          blob: blob
        });
      }

      util_saveLocalFile({
        filename: filename,
        type: type,
        content: content
      }).then(function () {
        if (opts.message !== false) {
          v_x_e_table.modal.message({
            message: conf.i18n('vxe.table.expSuccess'),
            status: 'success'
          });
        }
      });
    };

    var handleExport = function handleExport(opts) {
      var remote = opts.remote,
          columns = opts.columns,
          colgroups = opts.colgroups,
          exportMethod = opts.exportMethod,
          afterExportMethod = opts.afterExportMethod;
      return new Promise(function (resolve) {
        if (remote) {
          var params = {
            options: opts,
            $table: $xetable,
            $grid: $xegrid
          };
          resolve(exportMethod ? exportMethod(params) : params);
        } else {
          var datas = getExportData(opts);
          resolve($xetable.preventEvent(null, 'event.export', {
            options: opts,
            columns: columns,
            colgroups: colgroups,
            datas: datas
          }, function () {
            return downloadFile(opts, getContent(opts, columns, datas));
          }));
        }
      }).then(function (params) {
        clearColumnConvert(columns);

        if (!opts.print) {
          if (afterExportMethod) {
            afterExportMethod({
              status: true,
              options: opts,
              $table: $xetable,
              $grid: $xegrid
            });
          }
        }

        return Object.assign({
          status: true
        }, params);
      }).catch(function () {
        clearColumnConvert(columns);

        if (!opts.print) {
          if (afterExportMethod) {
            afterExportMethod({
              status: false,
              options: opts,
              $table: $xetable,
              $grid: $xegrid
            });
          }
        }

        var params = {
          status: false
        };
        return Promise.reject(params);
      });
    };

    var handleImport = function handleImport(content, opts) {
      var tableFullColumn = internalData.tableFullColumn,
          _importResolve = internalData._importResolve,
          _importReject = internalData._importReject;
      var rest = {
        fields: [],
        rows: []
      };

      switch (opts.type) {
        case 'csv':
          rest = parseCsv(tableFullColumn, content);
          break;

        case 'txt':
          rest = parseTxt(tableFullColumn, content);
          break;

        case 'html':
          rest = parseHTML(tableFullColumn, content);
          break;

        case 'xml':
          rest = parseXML(tableFullColumn, content);
          break;
      }

      var _rest = rest,
          fields = _rest.fields,
          rows = _rest.rows;
      var status = checkImportData(tableFullColumn, fields);

      if (status) {
        $xetable.createData(rows).then(function (data) {
          var loadRest;

          if (opts.mode === 'insert') {
            loadRest = $xetable.insert(data);
          } else {
            loadRest = $xetable.reloadData(data);
          }

          if (opts.message !== false) {
            v_x_e_table.modal.message({
              message: conf.i18n('vxe.table.impSuccess', [rows.length]),
              status: 'success'
            });
          }

          return loadRest.then(function () {
            if (_importResolve) {
              _importResolve({
                status: true
              });
            }
          });
        });
      } else if (opts.message !== false) {
        v_x_e_table.modal.message({
          message: conf.i18n('vxe.error.impFields'),
          status: 'error'
        });

        if (_importReject) {
          _importReject({
            status: false
          });
        }
      }
    };

    var handleFileImport = function handleFileImport(file, opts) {
      var afterImportMethod = opts.afterImportMethod;

      var _UtilTools$parseFile = UtilTools.parseFile(file),
          type = _UtilTools$parseFile.type,
          filename = _UtilTools$parseFile.filename; // 检查类型


      if (!ctor_amd_xe_utils_default.a.includes(v_x_e_table.importTypes, type)) {
        if (false) {}

        var params = {
          status: false
        };
        return Promise.reject(params);
      }

      var rest = new Promise(function (resolve, reject) {
        var _importResolve = function _importResolve(params) {
          resolve(params);
          internalData._importResolve = null;
          internalData._importReject = null;
        };

        var _importReject = function _importReject(params) {
          reject(params);
          internalData._importResolve = null;
          internalData._importReject = null;
        };

        internalData._importResolve = _importResolve;
        internalData._importReject = _importReject;

        if (window.FileReader) {
          var options = Object.assign({
            mode: 'insert'
          }, opts, {
            type: type,
            filename: filename
          });

          if (options.remote) {
            if (options.importMethod) {
              Promise.resolve(options.importMethod({
                file: file,
                options: options,
                $table: $xetable
              })).then(function () {
                _importResolve({
                  status: true
                });
              }).catch(function () {
                _importResolve({
                  status: true
                });
              });
            } else {
              _importResolve({
                status: true
              });
            }
          } else {
            var tableFullColumn = internalData.tableFullColumn;
            $xetable.preventEvent(null, 'event.import', {
              file: file,
              options: options,
              columns: tableFullColumn
            }, function () {
              var reader = new FileReader();

              reader.onerror = function () {
                UtilTools.error('vxe.error.notType', [type]);

                _importReject({
                  status: false
                });
              };

              reader.onload = function (e) {
                handleImport(e.target.result, options);
              };

              reader.readAsText(file, 'UTF-8');
            });
          }
        } else {
          // 不支持的浏览器
          if (false) {}

          _importResolve({
            status: true
          });
        }
      });
      return rest.then(function () {
        if (afterImportMethod) {
          afterImportMethod({
            status: true,
            options: opts,
            $table: $xetable
          });
        }
      }).catch(function (e) {
        if (afterImportMethod) {
          afterImportMethod({
            status: false,
            options: opts,
            $table: $xetable
          });
        }

        return Promise.reject(e);
      });
    };

    var handleExportAndPrint = function handleExportAndPrint(options, isPrint) {
      var treeConfig = props.treeConfig;
      var initStore = reactData.initStore,
          mergeList = reactData.mergeList,
          isGroup = reactData.isGroup,
          footerData = reactData.footerData,
          exportStore = reactData.exportStore,
          exportParams = reactData.exportParams;
      var collectColumn = internalData.collectColumn;
      var customOpts = computeCustomOpts.value;
      var selectRecords = $xetable.getCheckboxRecords();
      var hasFooter = !!footerData.length;
      var hasMerge = !treeConfig && mergeList.length;
      var defOpts = Object.assign({
        message: true,
        isHeader: true
      }, options);
      var types = defOpts.types || v_x_e_table.exportTypes;
      var checkMethod = customOpts.checkMethod;
      var exportColumns = collectColumn.slice(0);
      var columns = defOpts.columns; // 处理类型

      var typeList = types.map(function (value) {
        return {
          value: value,
          label: "vxe.export.types.".concat(value)
        };
      });
      var modeList = defOpts.modes.map(function (value) {
        return {
          value: value,
          label: "vxe.export.modes.".concat(value)
        };
      }); // 默认选中

      ctor_amd_xe_utils_default.a.eachTree(exportColumns, function (column, index, items, path, parent) {
        var isColGroup = column.children && column.children.length;

        if (isColGroup || defaultFilterExportColumn(column)) {
          column.checked = columns ? columns.some(function (item) {
            if (isColumnInfo(item)) {
              return column === item;
            } else if (ctor_amd_xe_utils_default.a.isString(item)) {
              return column.field === item;
            } else {
              var colid = item.id || item.colId;
              var type = item.type;
              var field = item.property || item.field;

              if (colid) {
                return column.id === colid;
              } else if (field && type) {
                return column.property === field && column.type === type;
              } else if (field) {
                return column.property === field;
              } else if (type) {
                return column.type === type;
              }
            }
          }) : column.visible;
          column.halfChecked = false;
          column.disabled = parent && parent.disabled || (checkMethod ? !checkMethod({
            column: column
          }) : false);
        }
      }); // 更新条件

      Object.assign(exportStore, {
        columns: exportColumns,
        typeList: typeList,
        modeList: modeList,
        hasFooter: hasFooter,
        hasMerge: hasMerge,
        isPrint: isPrint,
        hasColgroup: isGroup,
        visible: true
      }); // 重置参数

      Object.assign(exportParams, {
        filename: defOpts.filename || '',
        sheetName: defOpts.sheetName || '',
        type: defOpts.type || typeList[0].value,
        mode: selectRecords.length ? 'selected' : 'current',
        original: defOpts.original,
        message: defOpts.message,
        isHeader: defOpts.isHeader,
        isFooter: hasFooter && (ctor_amd_xe_utils_default.a.isBoolean(defOpts.isFooter) ? defOpts.isFooter : true),
        isColgroup: ctor_amd_xe_utils_default.a.isBoolean(defOpts.isColgroup) ? defOpts.isColgroup : true,
        isMerge: hasMerge && defOpts.isMerge,
        isPrint: defOpts.isPrint
      });
      initStore.export = true;
      return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
    };

    var exportMethods = {
      /**
       * 导出文件，支持 csv/html/xml/txt
       * 如果是树表格，则默认是导出所有节点
       * 如果是启用了虚拟滚动，则只能导出数据源，可以配合 dataFilterMethod 函数自行转换数据
       * @param {Object} options 参数
       */
      exportData: function exportData(options) {
        var treeConfig = props.treeConfig;
        var isGroup = reactData.isGroup,
            tableGroupColumn = reactData.tableGroupColumn;
        var tableFullColumn = internalData.tableFullColumn,
            afterFullData = internalData.afterFullData;
        var exportOpts = computeExportOpts.value;
        var treeOpts = computeTreeOpts.value;
        var opts = Object.assign({
          // filename: '',
          // sheetName: '',
          // original: false,
          // message: false,
          isHeader: true,
          isFooter: true,
          isColgroup: true,
          isMerge: false,
          download: true,
          type: 'csv',
          mode: 'current' // data: null,
          // remote: false,
          // dataFilterMethod: null,
          // footerFilterMethod: null,
          // exportMethod: null,
          // columnFilterMethod: null,
          // beforeExportMethod: null,
          // afterExportMethod: null

        }, exportOpts, {
          print: false
        }, options);
        var type = opts.type,
            mode = opts.mode,
            columns = opts.columns,
            original = opts.original,
            beforeExportMethod = opts.beforeExportMethod;
        var groups = [];
        var customCols = columns && columns.length ? columns : null;
        var columnFilterMethod = opts.columnFilterMethod; // 如果设置源数据，则默认导出设置了字段的列

        if (!customCols && !columnFilterMethod) {
          columnFilterMethod = original ? function (_ref) {
            var column = _ref.column;
            return column.property;
          } : function (_ref2) {
            var column = _ref2.column;
            return defaultFilterExportColumn(column);
          };
        }

        if (customCols) {
          groups = ctor_amd_xe_utils_default.a.searchTree(ctor_amd_xe_utils_default.a.mapTree(customCols, function (item) {
            var targetColumn;

            if (item) {
              if (isColumnInfo(item)) {
                targetColumn = item;
              } else if (ctor_amd_xe_utils_default.a.isString(item)) {
                targetColumn = $xetable.getColumnByField(item);
              } else {
                var colid = item.id || item.colId;
                var _type = item.type;
                var field = item.property || item.field;

                if (colid) {
                  targetColumn = $xetable.getColumnById(colid);
                } else if (field && _type) {
                  targetColumn = tableFullColumn.find(function (column) {
                    return column.property === field && column.type === _type;
                  });
                } else if (field) {
                  targetColumn = $xetable.getColumnByField(field);
                } else if (_type) {
                  targetColumn = tableFullColumn.find(function (column) {
                    return column.type === _type;
                  });
                }
              }

              return targetColumn || {};
            }
          }, {
            children: 'childNodes',
            mapChildren: '_children'
          }), function (column, index) {
            return isColumnInfo(column) && (!columnFilterMethod || columnFilterMethod({
              column: column,
              $columnIndex: index
            }));
          }, {
            children: '_children',
            mapChildren: 'childNodes',
            original: true
          });
        } else {
          groups = ctor_amd_xe_utils_default.a.searchTree(isGroup ? tableGroupColumn : tableFullColumn, function (column, index) {
            return column.visible && (!columnFilterMethod || columnFilterMethod({
              column: column,
              $columnIndex: index
            }));
          }, {
            children: 'children',
            mapChildren: 'childNodes',
            original: true
          });
        } // 获取所有列


        var cols = [];
        ctor_amd_xe_utils_default.a.eachTree(groups, function (column) {
          var isColGroup = column.children && column.children.length;

          if (!isColGroup) {
            cols.push(column);
          }
        }, {
          children: 'childNodes'
        }); // 构建分组层级

        opts.columns = cols;
        opts.colgroups = hook_convertToRows(groups);

        if (!opts.filename) {
          opts.filename = conf.i18n(opts.original ? 'vxe.table.expOriginFilename' : 'vxe.table.expFilename', [ctor_amd_xe_utils_default.a.toDateString(Date.now(), 'yyyyMMddHHmmss')]);
        }

        if (!opts.sheetName) {
          opts.sheetName = document.title;
        } // 检查类型


        if (!ctor_amd_xe_utils_default.a.includes(v_x_e_table.exportTypes, type)) {
          if (false) {}

          var params = {
            status: false
          };
          return Promise.reject(params);
        }

        if (!opts.print) {
          if (beforeExportMethod) {
            beforeExportMethod({
              options: opts,
              $table: $xetable,
              $grid: $xegrid
            });
          }
        }

        if (!opts.data) {
          opts.data = afterFullData;

          if (mode === 'selected') {
            var selectRecords = $xetable.getCheckboxRecords();

            if (['html', 'pdf'].indexOf(type) > -1 && treeConfig) {
              opts.data = ctor_amd_xe_utils_default.a.searchTree($xetable.getTableData().fullData, function (item) {
                return selectRecords.indexOf(item) > -1;
              }, treeOpts);
            } else {
              opts.data = selectRecords;
            }
          } else if (mode === 'all') {
            if ($xegrid && !opts.remote) {
              var gridReactData = $xegrid.reactData,
                  gridComputeMaps = $xegrid.computeMaps;
              var computeProxyOpts = gridComputeMaps.computeProxyOpts;
              var proxyOpts = computeProxyOpts.value;

              var beforeQueryAll = proxyOpts.beforeQueryAll,
                  afterQueryAll = proxyOpts.afterQueryAll,
                  _proxyOpts$ajax = proxyOpts.ajax,
                  ajax = _proxyOpts$ajax === void 0 ? {} : _proxyOpts$ajax,
                  _proxyOpts$props = proxyOpts.props,
                  _props = _proxyOpts$props === void 0 ? {} : _proxyOpts$props;

              var ajaxMethods = ajax.queryAll;

              if (ajaxMethods) {
                var _params = {
                  $table: $xetable,
                  $grid: $xegrid,
                  sort: gridReactData.sortData,
                  filters: gridReactData.filterData,
                  form: gridReactData.formData,
                  target: ajaxMethods,
                  options: opts
                };
                return Promise.resolve((beforeQueryAll || ajaxMethods)(_params)).catch(function (e) {
                  return e;
                }).then(function (rest) {
                  opts.data = (_props.list ? ctor_amd_xe_utils_default.a.get(rest, _props.list) : rest) || [];

                  if (afterQueryAll) {
                    afterQueryAll(_params);
                  }

                  return handleExport(opts);
                });
              }
            }
          }
        }

        return handleExport(opts);
      },
      importByFile: function importByFile(file, options) {
        var opts = Object.assign({}, options);
        var beforeImportMethod = opts.beforeImportMethod;

        if (beforeImportMethod) {
          beforeImportMethod({
            options: opts,
            $table: $xetable
          });
        }

        return handleFileImport(file, opts);
      },
      importData: function importData(options) {
        var importOpts = computeImportOpts.value;
        var opts = Object.assign({
          types: v_x_e_table.importTypes // beforeImportMethod: null,
          // afterImportMethod: null

        }, importOpts, options);
        var beforeImportMethod = opts.beforeImportMethod,
            afterImportMethod = opts.afterImportMethod;

        if (beforeImportMethod) {
          beforeImportMethod({
            options: opts,
            $table: $xetable
          });
        }

        return util_readLocalFile(opts).catch(function (e) {
          if (afterImportMethod) {
            afterImportMethod({
              status: false,
              options: opts,
              $table: $xetable
            });
          }

          return Promise.reject(e);
        }).then(function (params) {
          var file = params.file;
          return handleFileImport(file, opts);
        });
      },
      saveFile: function saveFile(options) {
        return util_saveLocalFile(options);
      },
      readFile: function readFile(options) {
        return util_readLocalFile(options);
      },
      print: function print(options) {
        var printOpts = computePrintOpts.value;
        var opts = Object.assign({
          original: false // beforePrintMethod

        }, printOpts, options, {
          type: 'html',
          download: false,
          remote: false,
          print: true
        });

        if (!opts.sheetName) {
          opts.sheetName = document.title;
        }

        return new Promise(function (resolve) {
          if (opts.content) {
            resolve(handlePrint($xetable, opts, opts.content));
          } else {
            resolve(exportMethods.exportData(opts).then(function (_ref3) {
              var content = _ref3.content;
              return handlePrint($xetable, opts, content);
            }));
          }
        });
      },
      openImport: function openImport(options) {
        var treeConfig = props.treeConfig,
            importConfig = props.importConfig;
        var initStore = reactData.initStore,
            importStore = reactData.importStore,
            importParams = reactData.importParams;
        var importOpts = computeImportOpts.value;
        var defOpts = Object.assign({
          mode: 'insert',
          message: true,
          types: v_x_e_table.importTypes
        }, options, importOpts);
        var types = defOpts.types;
        var isTree = !!treeConfig;

        if (isTree) {
          if (defOpts.message) {
            v_x_e_table.modal.message({
              message: conf.i18n('vxe.error.treeNotImp'),
              status: 'error'
            });
          }

          return;
        }

        if (!importConfig) {
          UtilTools.error('vxe.error.reqProp', ['import-config']);
        } // 处理类型


        var typeList = types.map(function (value) {
          return {
            value: value,
            label: "vxe.export.types.".concat(value)
          };
        });
        var modeList = defOpts.modes.map(function (value) {
          return {
            value: value,
            label: "vxe.import.modes.".concat(value)
          };
        });
        Object.assign(importStore, {
          file: null,
          type: '',
          filename: '',
          modeList: modeList,
          typeList: typeList,
          visible: true
        });
        Object.assign(importParams, defOpts);
        initStore.import = true;
      },
      openExport: function openExport(options) {
        var exportOpts = computeExportOpts.value;

        if (false) {}

        handleExportAndPrint(Object.assign({}, exportOpts, options));
      },
      openPrint: function openPrint(options) {
        var printOpts = computePrintOpts.value;

        if (false) {}

        handleExportAndPrint(Object.assign({}, printOpts, options), true);
      }
    };
    return exportMethods;
  },
  setupGrid: function setupGrid($xegrid) {
    return $xegrid.extendTableMethods(tableExportMethodKeys);
  }
};
/* harmony default export */ var export_src_hook = (tableExportHook);
// CONCATENATED MODULE: ./packages/export/index.ts







var export_print = function print(options) {
  var opts = Object.assign({}, options, {
    type: 'html'
  });
  handlePrint(null, opts, opts.content);
};

var Export = {
  install: function install(app) {
    v_x_e_table.saveFile = util_saveLocalFile;
    v_x_e_table.readFile = util_readLocalFile;
    v_x_e_table.print = export_print;
    v_x_e_table.setup({
      export: {
        types: {
          csv: 0,
          html: 0,
          xml: 0,
          txt: 0
        }
      }
    });
    v_x_e_table.hooks.add('$tableExport', export_src_hook);
    app.component(export_panel.name, export_panel);
    app.component(import_panel.name, import_panel);
  }
};
/* harmony default export */ var packages_export = (Export);
// CONCATENATED MODULE: ./packages/keyboard/src/hook.ts







var hook_browse = DomTools.browse;
var tableKeyboardHook = {
  setupTable: function setupTable($xetable) {
    var props = $xetable.props,
        reactData = $xetable.reactData,
        internalData = $xetable.internalData,
        refMaps = $xetable.refMaps,
        computeMaps = $xetable.computeMaps;
    var refElem = refMaps.refElem;
    var computeEditOpts = computeMaps.computeEditOpts,
        computeCheckboxOpts = computeMaps.computeCheckboxOpts,
        computeMouseOpts = computeMaps.computeMouseOpts,
        computeTreeOpts = computeMaps.computeTreeOpts;

    function getTargetOffset(target, container) {
      var offsetTop = 0;
      var offsetLeft = 0;
      var triggerCheckboxLabel = !hook_browse.firefox && DomTools.hasClass(target, 'vxe-checkbox--label');

      if (triggerCheckboxLabel) {
        var checkboxLabelStyle = getComputedStyle(target);
        offsetTop -= ctor_amd_xe_utils_default.a.toNumber(checkboxLabelStyle.paddingTop);
        offsetLeft -= ctor_amd_xe_utils_default.a.toNumber(checkboxLabelStyle.paddingLeft);
      }

      while (target && target !== container) {
        offsetTop += target.offsetTop;
        offsetLeft += target.offsetLeft;
        target = target.offsetParent;

        if (triggerCheckboxLabel) {
          var checkboxStyle = getComputedStyle(target);
          offsetTop -= ctor_amd_xe_utils_default.a.toNumber(checkboxStyle.paddingTop);
          offsetLeft -= ctor_amd_xe_utils_default.a.toNumber(checkboxStyle.paddingLeft);
        }
      }

      return {
        offsetTop: offsetTop,
        offsetLeft: offsetLeft
      };
    }

    function getCheckboxRangeRows(params, targetTrElem, moveRange) {
      var countHeight = 0;
      var rangeRows = [];
      var isDown = moveRange > 0;
      var moveSize = moveRange > 0 ? moveRange : Math.abs(moveRange) + targetTrElem.offsetHeight;
      var scrollYLoad = reactData.scrollYLoad;
      var afterFullData = internalData.afterFullData,
          scrollYStore = internalData.scrollYStore;

      if (scrollYLoad) {
        var _rowIndex = $xetable.getVTRowIndex(params.row);

        if (isDown) {
          rangeRows = afterFullData.slice(_rowIndex, _rowIndex + Math.ceil(moveSize / scrollYStore.rowHeight));
        } else {
          rangeRows = afterFullData.slice(_rowIndex - Math.floor(moveSize / scrollYStore.rowHeight) + 1, _rowIndex + 1);
        }
      } else {
        var siblingProp = isDown ? 'next' : 'previous';

        while (targetTrElem && countHeight < moveSize) {
          var rowNodeRest = $xetable.getRowNode(targetTrElem);

          if (rowNodeRest) {
            rangeRows.push(rowNodeRest.item);
            countHeight += targetTrElem.offsetHeight;
            targetTrElem = targetTrElem["".concat(siblingProp, "ElementSibling")];
          }
        }
      }

      return rangeRows;
    }

    var handleCheckboxRangeEvent = function handleCheckboxRangeEvent(evnt, params) {
      var column = params.column,
          cell = params.cell;

      if (column.type === 'checkbox') {
        var el = refElem.value;
        var elemStore = internalData.elemStore;
        var disX = evnt.clientX;
        var disY = evnt.clientY;
        var bodyWrapperElem = elemStore["".concat(column.fixed || 'main', "-body-wrapper")] || elemStore['main-body-wrapper'];
        var checkboxRangeElem = bodyWrapperElem.querySelector('.vxe-table--checkbox-range');
        var domMousemove = document.onmousemove;
        var domMouseup = document.onmouseup;
        var trElem = cell.parentNode;
        var selectRecords = $xetable.getCheckboxRecords();
        var lastRangeRows = [];
        var marginSize = 1;
        var offsetRest = getTargetOffset(evnt.target, bodyWrapperElem);
        var startTop = offsetRest.offsetTop + evnt.offsetY;
        var startLeft = offsetRest.offsetLeft + evnt.offsetX;
        var startScrollTop = bodyWrapperElem.scrollTop;
        var rowHeight = trElem.offsetHeight;
        var mouseScrollTimeout = null;
        var isMouseScrollDown = false;
        var mouseScrollSpaceSize = 1;

        var triggerEvent = function triggerEvent(type, evnt) {
          $xetable.dispatchEvent("checkbox-range-".concat(type), {
            records: $xetable.getCheckboxRecords(),
            reserves: $xetable.getCheckboxReserveRecords()
          }, evnt);
        };

        var handleChecked = function handleChecked(evnt) {
          var clientX = evnt.clientX,
              clientY = evnt.clientY;
          var offsetLeft = clientX - disX;
          var offsetTop = clientY - disY + (bodyWrapperElem.scrollTop - startScrollTop);
          var rangeHeight = Math.abs(offsetTop);
          var rangeWidth = Math.abs(offsetLeft);
          var rangeTop = startTop;
          var rangeLeft = startLeft;

          if (offsetTop < marginSize) {
            // 向上
            rangeTop += offsetTop;

            if (rangeTop < marginSize) {
              rangeTop = marginSize;
              rangeHeight = startTop;
            }
          } else {
            // 向下
            rangeHeight = Math.min(rangeHeight, bodyWrapperElem.scrollHeight - startTop - marginSize);
          }

          if (offsetLeft < marginSize) {
            // 向左
            rangeLeft += offsetLeft;

            if (rangeWidth > startLeft) {
              rangeLeft = marginSize;
              rangeWidth = startLeft;
            }
          } else {
            // 向右
            rangeWidth = Math.min(rangeWidth, bodyWrapperElem.clientWidth - startLeft - marginSize);
          }

          checkboxRangeElem.style.height = "".concat(rangeHeight, "px");
          checkboxRangeElem.style.width = "".concat(rangeWidth, "px");
          checkboxRangeElem.style.left = "".concat(rangeLeft, "px");
          checkboxRangeElem.style.top = "".concat(rangeTop, "px");
          checkboxRangeElem.style.display = 'block';
          var rangeRows = getCheckboxRangeRows(params, trElem, offsetTop < marginSize ? -rangeHeight : rangeHeight); // 至少滑动 10px 才能有效匹配

          if (rangeHeight > 10 && rangeRows.length !== lastRangeRows.length) {
            lastRangeRows = rangeRows;

            if (evnt.ctrlKey) {
              rangeRows.forEach(function (row) {
                $xetable.handleSelectRow({
                  row: row
                }, selectRecords.indexOf(row) === -1);
              });
            } else {
              $xetable.setAllCheckboxRow(false);
              $xetable.setCheckboxRow(rangeRows, true);
            }

            triggerEvent('change', evnt);
          }
        }; // 停止鼠标滚动


        var stopMouseScroll = function stopMouseScroll() {
          clearTimeout(mouseScrollTimeout);
          mouseScrollTimeout = null;
        }; // 开始鼠标滚动


        var startMouseScroll = function startMouseScroll(evnt) {
          stopMouseScroll();
          mouseScrollTimeout = setTimeout(function () {
            if (mouseScrollTimeout) {
              var scrollLeft = bodyWrapperElem.scrollLeft,
                  scrollTop = bodyWrapperElem.scrollTop,
                  clientHeight = bodyWrapperElem.clientHeight,
                  scrollHeight = bodyWrapperElem.scrollHeight;
              var topSize = Math.ceil(mouseScrollSpaceSize * 50 / rowHeight);

              if (isMouseScrollDown) {
                if (scrollTop + clientHeight < scrollHeight) {
                  $xetable.scrollTo(scrollLeft, scrollTop + topSize);
                  startMouseScroll(evnt);
                  handleChecked(evnt);
                } else {
                  stopMouseScroll();
                }
              } else {
                if (scrollTop) {
                  $xetable.scrollTo(scrollLeft, scrollTop - topSize);
                  startMouseScroll(evnt);
                  handleChecked(evnt);
                } else {
                  stopMouseScroll();
                }
              }
            }
          }, 50);
        };

        DomTools.addClass(el, 'drag--range');

        document.onmousemove = function (evnt) {
          evnt.preventDefault();
          evnt.stopPropagation();
          var clientY = evnt.clientY;

          var _DomTools$getAbsolute = DomTools.getAbsolutePos(bodyWrapperElem),
              boundingTop = _DomTools$getAbsolute.boundingTop; // 如果超过可视区，触发滚动


          if (clientY < boundingTop) {
            isMouseScrollDown = false;
            mouseScrollSpaceSize = boundingTop - clientY;

            if (!mouseScrollTimeout) {
              startMouseScroll(evnt);
            }
          } else if (clientY > boundingTop + bodyWrapperElem.clientHeight) {
            isMouseScrollDown = true;
            mouseScrollSpaceSize = clientY - boundingTop - bodyWrapperElem.clientHeight;

            if (!mouseScrollTimeout) {
              startMouseScroll(evnt);
            }
          } else if (mouseScrollTimeout) {
            stopMouseScroll();
          }

          handleChecked(evnt);
        };

        document.onmouseup = function (evnt) {
          stopMouseScroll();
          DomTools.removeClass(el, 'drag--range');
          checkboxRangeElem.removeAttribute('style');
          document.onmousemove = domMousemove;
          document.onmouseup = domMouseup;
          triggerEvent('end', evnt);
        };

        triggerEvent('start', evnt);
      }
    };

    var handleCellMousedownEvent = function handleCellMousedownEvent(evnt, params) {
      var editConfig = props.editConfig,
          checkboxConfig = props.checkboxConfig,
          mouseConfig = props.mouseConfig;
      var checkboxOpts = computeCheckboxOpts.value;
      var mouseOpts = computeMouseOpts.value;
      var editOpts = computeEditOpts.value;

      if (mouseConfig && mouseOpts.area && $xetable.handleCellAreaEvent) {
        return $xetable.handleCellAreaEvent(evnt, params);
      } else {
        if (checkboxConfig && checkboxOpts.range) {
          handleCheckboxRangeEvent(evnt, params);
        }

        if (mouseConfig && mouseOpts.selected) {
          if (!editConfig || editOpts.mode === 'cell') {
            $xetable.handleSelected(params, evnt);
          }
        }
      }
    };

    var keyboardMethods = {
      // 处理 Tab 键移动
      moveTabSelected: function moveTabSelected(args, isLeft, evnt) {
        var editConfig = props.editConfig;
        var afterFullData = internalData.afterFullData,
            visibleColumn = internalData.visibleColumn;
        var editOpts = computeEditOpts.value;
        var targetRow;
        var targetRowIndex;
        var targetColumnIndex;
        var params = Object.assign({}, args);

        var _rowIndex = $xetable.getVTRowIndex(params.row);

        var _columnIndex = $xetable.getVTColumnIndex(params.column);

        evnt.preventDefault();

        if (isLeft) {
          // 向左
          if (_columnIndex <= 0) {
            // 如果已经是第一列，则移动到上一行
            if (_rowIndex > 0) {
              targetRowIndex = _rowIndex - 1;
              targetRow = afterFullData[targetRowIndex];
              targetColumnIndex = visibleColumn.length - 1;
            }
          } else {
            targetColumnIndex = _columnIndex - 1;
          }
        } else {
          if (_columnIndex >= visibleColumn.length - 1) {
            // 如果已经是第一列，则移动到上一行
            if (_rowIndex < afterFullData.length - 1) {
              targetRowIndex = _rowIndex + 1;
              targetRow = afterFullData[targetRowIndex];
              targetColumnIndex = 0;
            }
          } else {
            targetColumnIndex = _columnIndex + 1;
          }
        }

        var targetColumn = visibleColumn[targetColumnIndex];

        if (targetColumn) {
          if (targetRow) {
            params.rowIndex = targetRowIndex;
            params.row = targetRow;
          } else {
            params.rowIndex = _rowIndex;
          }

          params.columnIndex = targetColumnIndex;
          params.column = targetColumn;
          params.cell = $xetable.getCell(params.row, params.column);

          if (editConfig) {
            if (editOpts.trigger === 'click' || editOpts.trigger === 'dblclick') {
              if (editOpts.mode === 'row') {
                $xetable.handleActived(params, evnt);
              } else {
                $xetable.scrollToRow(params.row, params.column).then(function () {
                  return $xetable.handleSelected(params, evnt);
                });
              }
            }
          } else {
            $xetable.scrollToRow(params.row, params.column).then(function () {
              return $xetable.handleSelected(params, evnt);
            });
          }
        }
      },
      // 处理当前行方向键移动
      moveCurrentRow: function moveCurrentRow(isUpArrow, isDwArrow, evnt) {
        var treeConfig = props.treeConfig;
        var currentRow = reactData.currentRow;
        var afterFullData = internalData.afterFullData;
        var treeOpts = computeTreeOpts.value;
        var targetRow;
        evnt.preventDefault();

        if (currentRow) {
          if (treeConfig) {
            var _XEUtils$findTree = ctor_amd_xe_utils_default.a.findTree(afterFullData, function (item) {
              return item === currentRow;
            }, treeOpts),
                index = _XEUtils$findTree.index,
                items = _XEUtils$findTree.items;

            if (isUpArrow && index > 0) {
              targetRow = items[index - 1];
            } else if (isDwArrow && index < items.length - 1) {
              targetRow = items[index + 1];
            }
          } else {
            var _rowIndex = $xetable.getVTRowIndex(currentRow);

            if (isUpArrow && _rowIndex > 0) {
              targetRow = afterFullData[_rowIndex - 1];
            } else if (isDwArrow && _rowIndex < afterFullData.length - 1) {
              targetRow = afterFullData[_rowIndex + 1];
            }
          }
        } else {
          targetRow = afterFullData[0];
        }

        if (targetRow) {
          var params = {
            $table: $xetable,
            row: targetRow
          };
          $xetable.scrollToRow(targetRow).then(function () {
            return $xetable.triggerCurrentRowEvent(evnt, params);
          });
        }
      },
      // 处理可编辑方向键移动
      moveSelected: function moveSelected(args, isLeftArrow, isUpArrow, isRightArrow, isDwArrow, evnt) {
        var afterFullData = internalData.afterFullData,
            visibleColumn = internalData.visibleColumn;
        var params = Object.assign({}, args);

        var _rowIndex = $xetable.getVTRowIndex(params.row);

        var _columnIndex = $xetable.getVTColumnIndex(params.column);

        evnt.preventDefault();

        if (isUpArrow && _rowIndex > 0) {
          // 移动到上一行
          params.rowIndex = _rowIndex - 1;
          params.row = afterFullData[params.rowIndex];
        } else if (isDwArrow && _rowIndex < afterFullData.length - 1) {
          // 移动到下一行
          params.rowIndex = _rowIndex + 1;
          params.row = afterFullData[params.rowIndex];
        } else if (isLeftArrow && _columnIndex) {
          // 移动到左侧单元格
          params.columnIndex = _columnIndex - 1;
          params.column = visibleColumn[params.columnIndex];
        } else if (isRightArrow && _columnIndex < visibleColumn.length - 1) {
          // 移动到右侧单元格
          params.columnIndex = _columnIndex + 1;
          params.column = visibleColumn[params.columnIndex];
        }

        $xetable.scrollToRow(params.row, params.column).then(function () {
          params.cell = $xetable.getCell(params.row, params.column);
          $xetable.handleSelected(params, evnt);
        });
      },

      /**
       * 表头单元格按下事件
       */
      triggerHeaderCellMousedownEvent: function triggerHeaderCellMousedownEvent(evnt, params) {
        var mouseConfig = props.mouseConfig;
        var mouseOpts = computeMouseOpts.value;

        if (mouseConfig && mouseOpts.area && $xetable.handleHeaderCellAreaEvent) {
          var cell = evnt.currentTarget;
          var triggerSort = DomTools.getEventTargetNode(evnt, cell, 'vxe-cell--sort').flag;
          var triggerFilter = DomTools.getEventTargetNode(evnt, cell, 'vxe-cell--filter').flag;
          $xetable.handleHeaderCellAreaEvent(evnt, Object.assign({
            cell: cell,
            triggerSort: triggerSort,
            triggerFilter: triggerFilter
          }, params));
        }

        $xetable.focus();

        if ($xetable.closeMenu) {
          $xetable.closeMenu();
        }
      },

      /**
       * 单元格按下事件
       */
      triggerCellMousedownEvent: function triggerCellMousedownEvent(evnt, params) {
        var cell = evnt.currentTarget;
        params.cell = cell;
        handleCellMousedownEvent(evnt, params);
        $xetable.focus();
        $xetable.closeFilter();

        if ($xetable.closeMenu) {
          $xetable.closeMenu();
        }
      }
    };
    return keyboardMethods;
  }
};
/* harmony default export */ var keyboard_src_hook = (tableKeyboardHook);
// CONCATENATED MODULE: ./packages/keyboard/index.ts


var Keyboard = {
  install: function install() {
    v_x_e_table.hooks.add('$tableKeyboard', keyboard_src_hook);
  }
};
/* harmony default export */ var packages_keyboard = (Keyboard);
// CONCATENATED MODULE: ./packages/validator/src/hook.ts


















/**
 * 校验规则
 */

var hook_Rule = /*#__PURE__*/function () {
  function Rule(rule) {
    _classCallCheck(this, Rule);

    Object.assign(this, {
      $options: rule,
      required: rule.required,
      min: rule.min,
      max: rule.max,
      type: rule.type,
      pattern: rule.pattern,
      validator: rule.validator,
      trigger: rule.trigger,
      maxWidth: rule.maxWidth
    });
  }
  /**
   * 获取校验不通过的消息
   * 支持国际化翻译
   */


  _createClass(Rule, [{
    key: "message",
    get: function get() {
      return UtilTools.getFuncText(this.$options.message);
    }
  }]);

  return Rule;
}();

var tableValidatorMethodKeys = ['fullValidate', 'validate', 'clearValidate'];
var validatorHook = {
  setupTable: function setupTable($xetable) {
    var props = $xetable.props,
        reactData = $xetable.reactData,
        internalData = $xetable.internalData,
        refMaps = $xetable.refMaps,
        computeMaps = $xetable.computeMaps;
    var refValidTooltip = refMaps.refValidTooltip;
    var computeValidOpts = computeMaps.computeValidOpts,
        computeTreeOpts = computeMaps.computeTreeOpts,
        computeEditOpts = computeMaps.computeEditOpts;
    var validatorMethods = {};
    var validatorPrivateMethods = {};
    var validRuleErr;
    /**
     * 聚焦到校验通过的单元格并弹出校验错误提示
     */

    var handleValidError = function handleValidError(params) {
      var validOpts = computeValidOpts.value;

      if (validOpts.autoPos === false) {
        $xetable.dispatchEvent('valid-error', params, null);
      } else {
        $xetable.handleActived(params, {
          type: 'valid-error',
          trigger: 'call'
        }).then(function () {
          return setTimeout(function () {
            return validatorPrivateMethods.showValidTooltip(params);
          }, 10);
        });
      }
    };
    /**
     * 对表格数据进行校验
     * 如果不指定数据，则默认只校验临时变动的数据，例如新增或修改
     * 如果传 true 则校验当前表格数据
     * 如果传 row 指定行记录，则只验证传入的行
     * 如果传 rows 为多行记录，则只验证传入的行
     * 如果只传 callback 否则默认验证整个表格数据
     * 返回 Promise 对象，或者使用回调方式
     */


    var beginValidate = function beginValidate(rows, cb, isFull) {
      var validRest = {};
      var editRules = props.editRules,
          treeConfig = props.treeConfig;
      var afterFullData = internalData.afterFullData;
      var treeOpts = computeTreeOpts.value;
      var validOpts = computeValidOpts.value;
      var vaildDatas;

      if (rows === true) {
        vaildDatas = afterFullData;
      } else if (rows) {
        if (ctor_amd_xe_utils_default.a.isFunction(rows)) {
          cb = rows;
        } else {
          vaildDatas = ctor_amd_xe_utils_default.a.isArray(rows) ? rows : [rows];
        }
      }

      if (!vaildDatas) {
        if ($xetable.getInsertRecords) {
          vaildDatas = $xetable.getInsertRecords().concat($xetable.getUpdateRecords());
        } else {
          vaildDatas = [];
        }
      }

      var rowValids = [];
      internalData._lastCallTime = Date.now();
      validRuleErr = false; // 如果为快速校验，当存在某列校验不通过时将终止执行

      validatorMethods.clearValidate();

      if (editRules) {
        var columns = $xetable.getColumns();

        var handleVaild = function handleVaild(row) {
          if (isFull || !validRuleErr) {
            var colVailds = [];
            columns.forEach(function (column) {
              if ((isFull || !validRuleErr) && ctor_amd_xe_utils_default.a.has(editRules, column.property)) {
                colVailds.push(validatorPrivateMethods.validCellRules('all', row, column).catch(function (_ref) {
                  var rule = _ref.rule,
                      rules = _ref.rules;
                  var rest = {
                    rule: rule,
                    rules: rules,
                    rowIndex: $xetable.getRowIndex(row),
                    row: row,
                    columnIndex: $xetable.getColumnIndex(column),
                    column: column,
                    $table: $xetable
                  };

                  if (!validRest[column.property]) {
                    validRest[column.property] = [];
                  }

                  validRest[column.property].push(rest);

                  if (!isFull) {
                    validRuleErr = true;
                    return Promise.reject(rest);
                  }
                }));
              }
            });
            rowValids.push(Promise.all(colVailds));
          }
        };

        if (treeConfig) {
          ctor_amd_xe_utils_default.a.eachTree(vaildDatas, handleVaild, treeOpts);
        } else {
          vaildDatas.forEach(handleVaild);
        }

        return Promise.all(rowValids).then(function () {
          var ruleProps = Object.keys(validRest);

          if (ruleProps.length) {
            return Promise.reject(validRest[ruleProps[0]][0]);
          }

          if (cb) {
            cb();
          }
        }).catch(function (firstErrParams) {
          return new Promise(function (resolve, reject) {
            var finish = function finish() {
              if (cb) {
                cb(validRest);
                resolve();
              } else {
                reject(validRest);
              }
            };

            var posAndFinish = function posAndFinish() {
              firstErrParams.cell = $xetable.getCell(firstErrParams.row, firstErrParams.column);
              DomTools.toView(firstErrParams.cell);
              handleValidError(firstErrParams);
              finish();
            };
            /**
             * 当校验不通过时
             * 将表格滚动到可视区
             * 由于提示信息至少需要占一行，定位向上偏移一行
             */


            var row = firstErrParams.row;
            var rowIndex = afterFullData.indexOf(row);
            var locatRow = rowIndex > 0 ? afterFullData[rowIndex - 1] : row;

            if (validOpts.autoPos === false) {
              finish();
            } else {
              if (treeConfig) {
                $xetable.scrollToTreeRow(locatRow).then(posAndFinish);
              } else {
                $xetable.scrollToRow(locatRow).then(posAndFinish);
              }
            }
          });
        });
      }

      if (cb) {
        cb();
      }

      return Promise.resolve();
    };

    validatorMethods = {
      /**
       * 完整校验，和 validate 的区别就是会给有效数据中的每一行进行校验
       */
      fullValidate: function fullValidate(rows, cb) {
        var afterFullData = internalData.afterFullData;

        if (ctor_amd_xe_utils_default.a.isFunction(rows)) {
          return beginValidate(afterFullData, cb, true);
        }

        return beginValidate(rows || afterFullData, cb, true);
      },

      /**
       * 快速校验，如果存在记录不通过的记录，则返回不再继续校验（异步校验除外）
       */
      validate: function validate(rows, cb) {
        return beginValidate(rows, cb);
      },
      clearValidate: function clearValidate() {
        var validStore = reactData.validStore;
        var validTip = refValidTooltip.value;
        Object.assign(validStore, {
          visible: false,
          row: null,
          column: null,
          content: '',
          rule: null
        });

        if (validTip && validTip.reactData.visible) {
          validTip.close();
        }

        return Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])();
      }
    };
    validatorPrivateMethods = {
      /**
       * 校验数据
       * 按表格行、列顺序依次校验（同步或异步）
       * 校验规则根据索引顺序依次校验，如果是异步则会等待校验完成才会继续校验下一列
       * 如果校验失败则，触发回调或者Promise<不通过列的错误消息>
       * 如果是传回调方式这返回一个校验不通过列的错误消息
       *
       * rule 配置：
       *  required=Boolean 是否必填
       *  min=Number 最小长度
       *  max=Number 最大长度
       *  validator=Function({ cellValue, rule, rules, row, column, rowIndex, columnIndex }) 自定义校验，接收一个 Promise
       *  trigger=blur|change 触发方式（除非特殊场景，否则默认为空就行）
       */
      validCellRules: function validCellRules(type, row, column, val) {
        var editRules = props.editRules;
        var property = column.property;
        var errorRules = [];
        var syncVailds = [];

        if (property && editRules) {
          var rules = ctor_amd_xe_utils_default.a.get(editRules, property);

          if (rules) {
            var cellValue = ctor_amd_xe_utils_default.a.isUndefined(val) ? ctor_amd_xe_utils_default.a.get(row, property) : val;
            rules.forEach(function (rule) {
              if (type === 'all' || !rule.trigger || type === rule.trigger) {
                if (ctor_amd_xe_utils_default.a.isFunction(rule.validator)) {
                  var customValid = rule.validator({
                    cellValue: cellValue,
                    rule: rule,
                    rules: rules,
                    row: row,
                    rowIndex: $xetable.getRowIndex(row),
                    column: column,
                    columnIndex: $xetable.getColumnIndex(column),
                    $table: $xetable
                  });

                  if (customValid) {
                    if (ctor_amd_xe_utils_default.a.isError(customValid)) {
                      validRuleErr = true;
                      errorRules.push(new hook_Rule({
                        type: 'custom',
                        trigger: rule.trigger,
                        message: customValid.message,
                        rule: new hook_Rule(rule)
                      }));
                    } else if (customValid.catch) {
                      // 如果为异步校验（注：异步校验是并发无序的）
                      syncVailds.push(customValid.catch(function (e) {
                        validRuleErr = true;
                        errorRules.push(new hook_Rule({
                          type: 'custom',
                          trigger: rule.trigger,
                          message: e ? e.message : rule.message,
                          rule: new hook_Rule(rule)
                        }));
                      }));
                    }
                  }
                } else {
                  var isNumber = rule.type === 'number';
                  var numVal = isNumber ? ctor_amd_xe_utils_default.a.toNumber(cellValue) : ctor_amd_xe_utils_default.a.getSize(cellValue);

                  if (rule.required && (cellValue === null || cellValue === undefined || cellValue === '')) {
                    validRuleErr = true;
                    errorRules.push(new hook_Rule(rule));
                  } else if (isNumber && isNaN(cellValue) || !isNaN(rule.min) && numVal < parseFloat(rule.min) || !isNaN(rule.max) && numVal > parseFloat(rule.max) || rule.pattern && !(rule.pattern.test ? rule.pattern : new RegExp(rule.pattern)).test(cellValue)) {
                    validRuleErr = true;
                    errorRules.push(new hook_Rule(rule));
                  }
                }
              }
            });
          }
        }

        return Promise.all(syncVailds).then(function () {
          if (errorRules.length) {
            var rest = {
              rules: errorRules,
              rule: errorRules[0]
            };
            return Promise.reject(rest);
          }
        });
      },
      hasCellRules: function hasCellRules(type, row, column) {
        var editRules = props.editRules;
        var property = column.property;

        if (property && editRules) {
          var rules = ctor_amd_xe_utils_default.a.get(editRules, property);
          return rules && !!ctor_amd_xe_utils_default.a.find(rules, function (rule) {
            return type === 'all' || !rule.trigger || type === rule.trigger;
          });
        }

        return false;
      },

      /**
       * 触发校验
       */
      triggerValidate: function triggerValidate(type) {
        var editConfig = props.editConfig,
            editRules = props.editRules;
        var editStore = reactData.editStore,
            validStore = reactData.validStore;
        var actived = editStore.actived;
        var editOpts = computeEditOpts.value;

        if (editConfig && editRules && actived.row) {
          var _actived$args = actived.args,
              row = _actived$args.row,
              column = _actived$args.column,
              cell = _actived$args.cell;

          if (validatorPrivateMethods.hasCellRules(type, row, column)) {
            return validatorPrivateMethods.validCellRules(type, row, column).then(function () {
              if (editOpts.mode === 'row') {
                if (validStore.visible && validStore.row === row && validStore.column === column) {
                  validatorMethods.clearValidate();
                }
              }
            }).catch(function (_ref2) {
              var rule = _ref2.rule;

              // 如果校验不通过与触发方式一致，则聚焦提示错误，否则跳过并不作任何处理
              if (!rule.trigger || type === rule.trigger) {
                var rest = {
                  rule: rule,
                  row: row,
                  column: column,
                  cell: cell
                };
                validatorPrivateMethods.showValidTooltip(rest);
                return Promise.reject(rest);
              }

              return Promise.resolve();
            });
          }
        }

        return Promise.resolve();
      },

      /**
       * 弹出校验错误提示
       */
      showValidTooltip: function showValidTooltip(params) {
        var height = props.height;
        var tableData = reactData.tableData,
            validStore = reactData.validStore;
        var validOpts = computeValidOpts.value;
        var rule = params.rule,
            row = params.row,
            column = params.column,
            cell = params.cell;
        var validTip = refValidTooltip.value;
        var content = rule.message;
        Object(external_commonjs_vue_commonjs2_vue_root_Vue_["nextTick"])(function () {
          Object.assign(validStore, {
            row: row,
            column: column,
            rule: rule,
            content: content,
            visible: true
          });

          if (validTip && (validOpts.message === 'tooltip' || validOpts.message === 'default' && !height && tableData.length < 2)) {
            validTip.open(cell, content);
          }

          $xetable.dispatchEvent('valid-error', params, null);
        });
      }
    };
    return _objectSpread2(_objectSpread2({}, validatorMethods), validatorPrivateMethods);
  },
  setupGrid: function setupGrid($xegrid) {
    return $xegrid.extendTableMethods(tableValidatorMethodKeys);
  }
};
/* harmony default export */ var validator_src_hook = (validatorHook);
// CONCATENATED MODULE: ./packages/validator/index.ts


var Validator = {
  install: function install() {
    v_x_e_table.hooks.add('$tableValidator', validator_src_hook);
  }
};
/* harmony default export */ var validator = (Validator);
// CONCATENATED MODULE: ./packages/locale/lang/zh-CN.ts
/* harmony default export */ var zh_CN = ({
  vxe: {
    error: {
      groupFixed: '如果使用分组表头，固定列必须按组设置',
      groupMouseRange: '分组表头与 "{0}" 不能同时使用，这可能会出现错误',
      groupTag: '分组列头应该使用 "{0}" 而不是 "{1}"，这可能会出现错误',
      scrollErrProp: '启用虚拟滚动后不支持该参数 "{0}"',
      scrollXNotGroup: '横向虚拟滚动不支持分组表头，请修改正确 "scroll-x.gt" 的参数，否则可能会导致出现错误',
      errConflicts: '参数 "{0}" 与 "{1}" 有冲突',
      unableInsert: '无法插入到指定位置，请检查参数是否正确',
      useErr: '安装 "{0}" 模块时发生错误，可能顺序不正确，依赖的模块需要在 Table 之前安装',
      barUnableLink: '工具栏无法关联表格',
      expandContent: '展开行的插槽应该是 "content"，请检查是否正确',
      reqModule: '缺少 "{0}" 模块',
      reqProp: '缺少必要的 "{0}" 参数，这可能会导致出现错误',
      emptyProp: '参数 "{0}" 不允许为空',
      errProp: '不支持的参数 "{0}"，可能为 "{1}"',
      colRepet: 'column.{0}="{1}" 重复了，这可能会导致某些功能无法使用',
      notFunc: '方法 "{0}" 不存在',
      notSlot: '插槽 "{0}" 不存在',
      noTree: '树结构不支持 "{0}"',
      notProp: '不支持的参数 "{0}"',
      delFunc: '方法 "{0}" 已废弃，请使用 "{1}"',
      delProp: '参数 "{0}" 已废弃，请使用 "{1}"',
      delEvent: '事件 "{0}" 已废弃，请使用 "{1}"',
      removeProp: '参数 "{0}" 已废弃，不建议使用，这可能会导致出现错误',
      errFormat: '全局的格式化内容应该使用 "VXETable.formats" 定义，挂载 "formatter={0}" 的方式已不建议使用',
      notType: '不支持的文件类型 "{0}"',
      notExp: '该浏览器不支持导入/导出功能',
      impFields: '导入失败，请检查字段名和数据格式是否正确',
      treeNotImp: '树表格不支持导入'
    },
    renderer: {
      search: '搜索',
      cases: {
        equal: '等于',
        unequal: '不等于',
        gt: '大于',
        ge: '大于或等于',
        lt: '小于',
        le: '小于或等于',
        begin: '开头是',
        notbegin: '开头不是',
        endin: '结尾是',
        notendin: '结尾不是',
        include: '包含',
        exclude: '不包含',
        between: '介于',
        custom: '自定义筛选',
        insensitive: '不区分大小写',
        isSensitive: '区分大小写'
      },
      combination: {
        menus: {
          sortAsc: '升序',
          sortDesc: '降序',
          fixedColumn: '锁定列',
          fixedGroup: '锁定组',
          cancelFixed: '取消锁定',
          fixedLeft: '锁定左侧',
          fixedRight: '锁定右侧',
          clearFilter: '清除筛选',
          textOption: '文本筛选',
          numberOption: '数值筛选'
        },
        popup: {
          title: '自定义筛选的方式',
          currColumnTitle: '当前列：',
          and: '与',
          or: '或',
          describeHtml: '可用 ? 代表单个字符<br/>用 * 代表任意多个字符'
        },
        empty: '(空白)',
        notData: '无匹配项'
      }
    },
    pro: {
      area: {
        mergeErr: '无法对合并单元格进行该操作',
        multiErr: '无法对多重选择区域进行该操作',
        extendErr: '如果延伸的区域包含被合并的单元格，所有合并的单元格需大小相同'
      },
      fnr: {
        title: '查找和替换',
        findLabel: '查找',
        replaceLabel: '替换',
        findTitle: '查找内容：',
        replaceTitle: '替换为：',
        tabs: {
          find: '查找',
          replace: '替换'
        },
        filter: {
          re: '正则表达式',
          whole: '全词匹配',
          sensitive: '区分大小写'
        },
        btns: {
          findNext: '查找下一个',
          findAll: '查找全部',
          replace: '替换',
          replaceAll: '替换全部',
          cancel: '取消'
        },
        header: {
          seq: '#',
          cell: '单元格',
          value: '值'
        },
        empty: '(空值)',
        reError: '无效的正则表达式',
        recordCount: '已找到 {0} 个单元格',
        notCell: '找不到匹配的单元格',
        replaceSuccess: '成功替换 {0} 个单元格'
      }
    },
    table: {
      emptyText: '暂无数据',
      allTitle: '全选/取消',
      seqTitle: '#',
      confirmFilter: '筛选',
      resetFilter: '重置',
      allFilter: '全部',
      sortAsc: '升序：最低到最高',
      sortDesc: '降序：最高到最低',
      filter: '对所选的列启用筛选',
      impSuccess: '成功导入 {0} 条记录',
      expLoading: '正在导出中',
      expSuccess: '导出成功',
      expFilename: '导出_{0}',
      expOriginFilename: '导出_源_{0}',
      customTitle: '列设置',
      customAll: '全部',
      customConfirm: '确认',
      customRestore: '还原'
    },
    grid: {
      selectOneRecord: '请至少选择一条记录！',
      deleteSelectRecord: '您确定要删除所选记录吗？',
      removeSelectRecord: '您确定要移除所选记录吗？',
      dataUnchanged: '数据未改动！',
      delSuccess: '成功删除所选记录！',
      saveSuccess: '保存成功！',
      operError: '发生错误，操作失败！'
    },
    select: {
      emptyText: '暂无数据'
    },
    pager: {
      goto: '前往',
      pagesize: '{0}条/页',
      total: '共 {0} 条记录',
      pageClassifier: '页',
      prevPage: '上一页',
      nextPage: '下一页',
      prevJump: '向上跳页',
      nextJump: '向下跳页'
    },
    alert: {
      title: '消息提示'
    },
    button: {
      confirm: '确认',
      cancel: '取消'
    },
    import: {
      modes: {
        covering: '覆盖',
        insert: '新增'
      },
      impTitle: '导入数据',
      impFile: '文件名',
      impSelect: '选择文件',
      impType: '文件类型',
      impOpts: '参数设置',
      impConfirm: '导入',
      impCancel: '取消'
    },
    export: {
      types: {
        csv: 'CSV (逗号分隔)(*.csv)',
        html: '网页(*.html)',
        xml: 'XML 数据(*.xml)',
        txt: '文本文件(制表符分隔)(*.txt)',
        xlsx: 'Excel 工作簿(*.xlsx)',
        pdf: 'PDF (*.pdf)'
      },
      modes: {
        current: '当前数据（当前页的数据）',
        selected: '选中数据（当前页选中的数据）',
        all: '全量数据（包括所有分页的数据）'
      },
      printTitle: '打印数据',
      expTitle: '导出数据',
      expName: '文件名',
      expNamePlaceholder: '请输入文件名',
      expSheetName: '标题',
      expSheetNamePlaceholder: '请输入标题',
      expType: '保存类型',
      expMode: '选择数据',
      expCurrentColumn: '全部字段',
      expColumn: '选择字段',
      expOpts: '参数设置',
      expOptHeader: '表头',
      expHeaderTitle: '是否需要表头',
      expOptFooter: '表尾',
      expFooterTitle: '是否需要表尾',
      expOptColgroup: '分组表头',
      expColgroupTitle: '如果存在，则支持带有分组结构的表头',
      expOptMerge: '单元格合并',
      expMergeTitle: '如果存在，则支持带有合并结构的单元格',
      expOptOriginal: '源数据',
      expOriginalTitle: '如果为源数据，则支持导入到表格中',
      expPrint: '打印',
      expConfirm: '导出',
      expCancel: '取消'
    },
    modal: {
      zoomIn: '最大化',
      zoomOut: '还原',
      close: '关闭'
    },
    form: {
      folding: '收起',
      unfolding: '展开'
    },
    toolbar: {
      import: '导入',
      export: '导出',
      print: '打印',
      refresh: '刷新',
      zoomIn: '全屏',
      zoomOut: '还原',
      custom: '列设置',
      customAll: '全部',
      customConfirm: '确认',
      customRestore: '还原'
    },
    input: {
      date: {
        m1: '01 月',
        m2: '02 月',
        m3: '03 月',
        m4: '04 月',
        m5: '05 月',
        m6: '06 月',
        m7: '07 月',
        m8: '08 月',
        m9: '09 月',
        m10: '10 月',
        m11: '11 月',
        m12: '12 月',
        monthLabel: '{0} 年',
        dayLabel: '{0} 年 {1}',
        labelFormat: {
          date: 'yyyy-MM-dd',
          time: 'HH:mm:ss',
          datetime: 'yyyy-MM-dd HH:mm:ss',
          week: 'yyyy 年第 WW 周',
          month: 'yyyy-MM',
          year: 'yyyy'
        },
        weeks: {
          w: '周',
          w0: '周日',
          w1: '周一',
          w2: '周二',
          w3: '周三',
          w4: '周四',
          w5: '周五',
          w6: '周六'
        },
        months: {
          m0: '一月',
          m1: '二月',
          m2: '三月',
          m3: '四月',
          m4: '五月',
          m5: '六月',
          m6: '七月',
          m7: '八月',
          m8: '九月',
          m9: '十月',
          m10: '十一月',
          m11: '十二月'
        }
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/vxe-table.ts





























 // 按需加载的组件

var components = [// 模块
packages_column, packages_header, packages_footer, packages_grid, packages_toolbar, packages_pager, packages_checkbox, packages_radio, packages_input, packages_textarea, packages_button, packages_modal, packages_tooltip, packages_form, packages_select, packages_switch, packages_list, packages_pulldown, // 扩展模块
filter, packages_menu, edit, packages_export, packages_keyboard, validator, // 核心
packages_table]; // 默认安装

function vxe_table_install(app, options) {
  if (ctor_amd_xe_utils_default.a.isPlainObject(options)) {
    v_x_e_table.setup(options);
  }

  components.forEach(function (component) {
    return component.install(app);
  });
} // 默认中文


v_x_e_table.setup({
  i18n: function i18n(key, args) {
    return ctor_amd_xe_utils_default.a.template(ctor_amd_xe_utils_default.a.get(zh_CN, key), args, {
      tmplRE: /\{([.\w[\]\s]+)\}/g
    });
  }
});
v_x_e_table.install = vxe_table_install;


























/* harmony default export */ var vxe_table = (v_x_e_table);
// CONCATENATED MODULE: ./index.ts



/* harmony default export */ var index_0 = (vxe_table);
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (index_0);



/***/ }),

/***/ "fb6a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var toAbsoluteIndex = __webpack_require__("23cb");
var toLength = __webpack_require__("50c4");
var toIndexedObject = __webpack_require__("fc6a");
var createProperty = __webpack_require__("8418");
var wellKnownSymbol = __webpack_require__("b622");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
var USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "fc6a":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("44ad");
var requireObjectCoercible = __webpack_require__("1d80");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "fca9":
/***/ (function(module, exports, __webpack_require__) {

var slice = __webpack_require__("3703")

/**
  * 该方法和 setTimeout 一样的效果，区别就是支持上下文和额外参数
  *
  * @param {Function} callback 函数
  * @param {Number} wait 延迟毫秒
  * @param {*} args 额外的参数
  * @return {Number}
 */
function delay (callback, wait) {
  var args = slice(arguments, 2)
  var context = this
  return setTimeout(function () {
    callback.apply(context, args)
  }, wait)
}

module.exports = delay


/***/ }),

/***/ "fd89":
/***/ (function(module, exports, __webpack_require__) {

var staticDayTime = __webpack_require__("e11b")

var staticWeekTime = staticDayTime * 7

module.exports = staticWeekTime


/***/ }),

/***/ "fdbc":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "fdbf":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__("4930");

module.exports = NATIVE_SYMBOL
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "fdc7":
/***/ (function(module, exports, __webpack_require__) {

var helperNumberDecimal = __webpack_require__("6223")
var toNumberString = __webpack_require__("416f")
var multiply = __webpack_require__("789e")

function helperNumberAdd (addend, augend) {
  var str1 = toNumberString(addend)
  var str2 = toNumberString(augend)
  var ratio = Math.pow(10, Math.max(helperNumberDecimal(str1), helperNumberDecimal(str2)))
  return (multiply(addend, ratio) + multiply(augend, ratio)) / ratio
}

module.exports = helperNumberAdd


/***/ }),

/***/ "fe37":
/***/ (function(module, exports) {

/**
 * 一个空的方法，始终返回 undefined，可用于初始化值
 */
function noop () {}

module.exports = noop


/***/ }),

/***/ "fedd":
/***/ (function(module, exports, __webpack_require__) {

var setupDefaults = __webpack_require__("27e0")

var staticParseInt = __webpack_require__("cef5")

var helperGetUTCDateTime = __webpack_require__("ea20")
var helperGetDateTime = __webpack_require__("3ae2")

var isString = __webpack_require__("b7c3")
var isDate = __webpack_require__("6deb")

var dateFormatRules = [
  { rules: [['yyyy', 4]] },
  { rules: [['MM', 2], ['M', 1]], offset: -1 },
  { rules: [['dd', 2], ['d', 1]] },
  { rules: [['HH', 2], ['H', 1]] },
  { rules: [['mm', 2], ['m', 1]] },
  { rules: [['ss', 2], ['s', 1]] },
  { rules: [['SSS', 3], ['S', 1]] },
  { rules: [['ZZ', 5], ['Z', 6], ['Z', 5], ['Z', 1]] }
]

function parseStringDate (str, format) {
  var arr, sIndex, fIndex, fLen, fItem, rules, rIndex, rLen, tempMatch
  var dates = [0, 0, 1, 0, 0, 0, 0]
  for (fIndex = 0, fLen = dateFormatRules.length; fIndex < fLen; fIndex++) {
    fItem = dateFormatRules[fIndex]
    for (rIndex = 0, rules = fItem.rules, rLen = rules.length; rIndex < rLen; rIndex++) {
      arr = rules[rIndex]
      sIndex = format.indexOf(arr[0])
      if (sIndex > -1) {
        tempMatch = str.substring(sIndex, sIndex + arr[1])
        if (tempMatch && tempMatch.length === arr[1]) {
          if (fItem.offset) {
            tempMatch = staticParseInt(tempMatch) + fItem.offset
          }
          dates[fIndex] = tempMatch
          break
        }
      }
      if (rIndex === rLen - 1) {
        return dates
      }
    }
  }
  return dates
}

/**
  * 字符串转为日期
  *
  * @param {String/Number/Date} str 日期或数字
  * @param {String} format 解析日期格式(yyyy年份、MM月份、dd天、hh(12)HH(24)小时、mm分钟、ss秒、SSS毫秒、Z时区)
  * @return {Date}
  */
function toStringDate (str, format) {
  var rest, isDType
  if (str) {
    isDType = isDate(str)
    if (isDType || (!format && /^[0-9]{11,15}$/.test(str))) {
      rest = new Date(isDType ? helperGetDateTime(str) : staticParseInt(str))
    } else if (isString(str)) {
      var tempMatch
      var dates = parseStringDate(str, format || setupDefaults.formatDate)
      var zStr = dates[7]
      if (dates[0]) {
        // 解析时区
        if (zStr) {
          // 如果为UTC 时间
          if (zStr[0] === 'z' || zStr[0] === 'Z') {
            rest = new Date(helperGetUTCDateTime(dates))
          } else {
            // 如果指定时区，时区转换
            tempMatch = zStr.match(/([-+]{1})(\d{2}):?(\d{2})/)
            if (tempMatch) {
              rest = new Date(helperGetUTCDateTime(dates) - (tempMatch[1] === '-' ? -1 : 1) * staticParseInt(tempMatch[2]) * 3600000 + staticParseInt(tempMatch[3]) * 60000)
            }
          }
        } else {
          rest = new Date(dates[0], dates[1], dates[2], dates[3], dates[4], dates[5], dates[6])
        }
      }
    }
  }
  return rest ? rest : new Date('')
}

module.exports = toStringDate


/***/ })

/******/ })["default"];